<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>reporter.cc Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">reporter.cc</div>  </div>
</div><!--header-->
<div class="contents">
<a href="reporter_8cc.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2014-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// Implements Reporter class.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="reporter_8h.xhtml">reporter.h</a>&quot;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;ctime&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;boost/algorithm/string/join.hpp&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;boost/exception/errinfo_errno.hpp&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;boost/exception/errinfo_file_name.hpp&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;boost/exception/errinfo_file_open_mode.hpp&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;boost/range/adaptor/filtered.hpp&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;boost/range/adaptor/transformed.hpp&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="ccf__group_8h.xhtml">ccf_group.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="element_8h.xhtml">element.h</a>&quot;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="error_8h.xhtml">error.h</a>&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="logger_8h.xhtml">logger.h</a>&quot;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="parameter_8h.xhtml">parameter.h</a>&quot;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="version_8h.xhtml">version.h</a>&quot;</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram.xhtml">scram</a> {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">namespace </span>{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">/// Puts analysis id into report XML element.</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"></span><span class="keywordtype">void</span> PutId(<span class="keyword">const</span> core::RiskAnalysis::Result::Id&amp; <span class="keywordtype">id</span>,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;           xml::StreamElement* report) {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="keyword">struct </span>{</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordtype">void</span> operator()(<span class="keyword">const</span> mef::Gate* gate) {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      report_-&gt;SetAttribute(<span class="stringliteral">&quot;name&quot;</span>, gate-&gt;id());</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    }</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordtype">void</span> operator()(<span class="keyword">const</span> std::pair&lt;<span class="keyword">const</span> mef::InitiatingEvent&amp;,</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                                    <span class="keyword">const</span> mef::Sequence&amp;&gt;&amp; sequence) {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      report_-&gt;SetAttribute(<span class="stringliteral">&quot;initiating-event&quot;</span>, sequence.first.name());</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      report_-&gt;SetAttribute(<span class="stringliteral">&quot;name&quot;</span>, sequence.second.name());</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    }</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    xml::StreamElement* report_;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  } extractor{report};</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  std::visit(extractor, <span class="keywordtype">id</span>.target);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keywordflow">if</span> (<span class="keywordtype">id</span>.context) {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    report-&gt;SetAttribute(<span class="stringliteral">&quot;alignment&quot;</span>, <span class="keywordtype">id</span>.context-&gt;alignment.name());</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    report-&gt;SetAttribute(<span class="stringliteral">&quot;phase&quot;</span>, <span class="keywordtype">id</span>.context-&gt;phase.name());</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  }</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}  <span class="comment">// namespace</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classscram_1_1Reporter.xhtml#a87eeccfed9678b035c745b6ed1610dbf">   71</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1Reporter.xhtml#a87eeccfed9678b035c745b6ed1610dbf">Reporter::Report</a>(<span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml">core::RiskAnalysis</a>&amp; risk_an, std::FILE* out,</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                      <span class="keywordtype">bool</span> indent) {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <a class="code" href="classscram_1_1xml_1_1Stream.xhtml">xml::Stream</a> xml_stream(out, indent);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> report = xml_stream.<a class="code" href="classscram_1_1xml_1_1Stream.xhtml#aef4e5bae1f92709e708c515a255fb5e4">root</a>(<span class="stringliteral">&quot;report&quot;</span>);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  ReportInformation(risk_an, &amp;report);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keywordflow">if</span> (risk_an.<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a9198a9d439e7559e7661aa664e172400">results</a>().empty() &amp;&amp; risk_an.<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a179feb51377899f5108fb2c8b13a18c5">event_tree_results</a>().empty())</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">return</span>;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <a class="code" href="logger_8h.xhtml#a43bfc963f340281b07ac23d1c3ba00b5">TIMER</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea2d4eac027f72ba19eb11f1d5ae7ddadc">DEBUG1</a>, <span class="stringliteral">&quot;Reporting analysis results&quot;</span>);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> results = report.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;results&quot;</span>);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keywordflow">if</span> (risk_an.<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">settings</a>().<a class="code" href="classscram_1_1core_1_1Settings.xhtml#a83ddd939f7217fb9f0438bd1dd01f7b1">probability_analysis</a>()) {</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1EtaResult.xhtml">core::RiskAnalysis::EtaResult</a>&amp; result :</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;         risk_an.<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a179feb51377899f5108fb2c8b13a18c5">event_tree_results</a>()) {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      ReportResults(result, &amp;results);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1Result.xhtml">core::RiskAnalysis::Result</a>&amp; result : risk_an.<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a9198a9d439e7559e7661aa664e172400">results</a>()) {</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">if</span> (result.fault_tree_analysis)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      ReportResults(result.id, *result.fault_tree_analysis,</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                    result.probability_analysis.get(), &amp;results);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">if</span> (result.probability_analysis)</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      ReportResults(result.id, *result.probability_analysis, &amp;results);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">if</span> (result.importance_analysis)</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      ReportResults(result.id, *result.importance_analysis, &amp;results);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">if</span> (result.uncertainty_analysis)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      ReportResults(result.id, *result.uncertainty_analysis, &amp;results);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  }</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;}</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classscram_1_1Reporter.xhtml#a7f4903f4c19a9630f828395eded780bf">  104</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1Reporter.xhtml#a87eeccfed9678b035c745b6ed1610dbf">Reporter::Report</a>(<span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml">core::RiskAnalysis</a>&amp; risk_an,</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                      <span class="keyword">const</span> std::string&amp; file, <span class="keywordtype">bool</span> indent) {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  std::unique_ptr&lt;std::FILE, decltype(&amp;std::fclose)&gt; fp(</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      std::fopen(file.c_str(), <span class="stringliteral">&quot;w&quot;</span>), &amp;std::fclose);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordflow">try</span> {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">if</span> (!fp) {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(<a class="code" href="structscram_1_1IOError.xhtml">IOError</a>(<span class="stringliteral">&quot;Cannot open the output file for report.&quot;</span>))</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;          &lt;&lt; boost::errinfo_errno(errno) &lt;&lt; boost::errinfo_file_open_mode(<span class="stringliteral">&quot;w&quot;</span>);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="classscram_1_1Reporter.xhtml#a87eeccfed9678b035c745b6ed1610dbf">Report</a>(risk_an, fp.get(), indent);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  } <span class="keywordflow">catch</span> (<a class="code" href="structscram_1_1IOError.xhtml">IOError</a>&amp; err) {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    err &lt;&lt; boost::errinfo_file_name(file);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">throw</span>;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;}</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">/// Describes the fault tree analysis and techniques.</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="reporter_8cc.xhtml#a110c567fb36e60228edd2738df46f18c">  122</a></span>&#160;<span class="keywordtype">void</span> Reporter::ReportCalculatedQuantity&lt;core::FaultTreeAnalysis&gt;(</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1Settings.xhtml">core::Settings</a>&amp; settings, <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* information) {</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  {</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> quant = information-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;calculated-quantity&quot;</span>);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordflow">if</span> (settings.prime_implicants()) {</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      quant.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;name&quot;</span>, <span class="stringliteral">&quot;Prime Implicants&quot;</span>);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      quant.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;name&quot;</span>, <span class="stringliteral">&quot;Minimal Cut Sets&quot;</span>);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> methods = quant.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;calculation-method&quot;</span>);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">switch</span> (settings.algorithm()) {</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      <span class="keywordflow">case</span> core::Algorithm::kBdd:</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        methods.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;name&quot;</span>, <span class="stringliteral">&quot;Binary Decision Diagram&quot;</span>);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      <span class="keywordflow">case</span> core::Algorithm::kZbdd:</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        methods.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;name&quot;</span>, <span class="stringliteral">&quot;Zero-Suppressed Binary Decision Diagram&quot;</span>);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <span class="keywordflow">case</span> core::Algorithm::kMocus:</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        methods.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;name&quot;</span>, <span class="stringliteral">&quot;MOCUS&quot;</span>);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    }</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    methods.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;limits&quot;</span>)</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;product-order&quot;</span>)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a7e3c09c8d2041452e04f31dd332b65a6">AddText</a>(settings.limit_order());</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  }</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keywordflow">if</span> (settings.ccf_analysis()) {</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    information-&gt;AddChild(<span class="stringliteral">&quot;calculated-quantity&quot;</span>)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        .SetAttribute(<span class="stringliteral">&quot;name&quot;</span>, <span class="stringliteral">&quot;Common Cause Failure Analysis&quot;</span>)</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        .SetAttribute(<span class="stringliteral">&quot;definition&quot;</span>,</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                      <span class="stringliteral">&quot;Incorporation of common cause failure models&quot;</span>);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">/// Describes the probability analysis and techniques.</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="reporter_8cc.xhtml#a38a83e177703049445b1234cb3b4a314">  156</a></span>&#160;<span class="keywordtype">void</span> Reporter::ReportCalculatedQuantity&lt;core::ProbabilityAnalysis&gt;(</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1Settings.xhtml">core::Settings</a>&amp; settings, <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* information) {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> quant = information-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;calculated-quantity&quot;</span>);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  quant.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;name&quot;</span>, <span class="stringliteral">&quot;Probability Analysis&quot;</span>)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;definition&quot;</span>,</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                    <span class="stringliteral">&quot;Quantitative analysis of&quot;</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                    <span class="stringliteral">&quot; failure probability or unavailability&quot;</span>)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;approximation&quot;</span>,</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                    core::kApproximationToString[static_cast&lt;int&gt;(</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                        settings.approximation())]);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> methods = quant.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;calculation-method&quot;</span>);</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keywordflow">switch</span> (settings.approximation()) {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordflow">case</span> core::Approximation::kNone:</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      methods.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;name&quot;</span>, <span class="stringliteral">&quot;Binary Decision Diagram&quot;</span>);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      <span class="keywordflow">break</span>;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">case</span> core::Approximation::kRareEvent:</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      methods.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;name&quot;</span>, <span class="stringliteral">&quot;Rare-Event Approximation&quot;</span>);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;      <span class="keywordflow">break</span>;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">case</span> core::Approximation::kMcub:</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      methods.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;name&quot;</span>, <span class="stringliteral">&quot;MCUB Approximation&quot;</span>);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  }</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> limits = methods.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;limits&quot;</span>);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  limits.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;mission-time&quot;</span>).<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a7e3c09c8d2041452e04f31dd332b65a6">AddText</a>(settings.mission_time());</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keywordflow">if</span> (settings.time_step())</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    limits.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;time-step&quot;</span>).<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a7e3c09c8d2041452e04f31dd332b65a6">AddText</a>(settings.time_step());</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;}</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">/// Describes the importance analysis and techniques.</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="reporter_8cc.xhtml#a328dc5e461b2c97987b9598bd9e50c08">  186</a></span>&#160;<span class="keywordtype">void</span> Reporter::ReportCalculatedQuantity&lt;core::ImportanceAnalysis&gt;(</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1Settings.xhtml">core::Settings</a>&amp; <span class="comment">/*settings*/</span>, <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* information) {</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  information-&gt;AddChild(<span class="stringliteral">&quot;calculated-quantity&quot;</span>)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      .SetAttribute(<span class="stringliteral">&quot;name&quot;</span>, <span class="stringliteral">&quot;Importance Analysis&quot;</span>)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      .SetAttribute(<span class="stringliteral">&quot;definition&quot;</span>,</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                    <span class="stringliteral">&quot;Quantitative analysis of contributions and &quot;</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                    <span class="stringliteral">&quot;importance factors of events.&quot;</span>);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;}</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">/// Describes the uncertainty analysis and techniques.</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="reporter_8cc.xhtml#a7d0d1b563f07dc4800ac38d384716e3a">  197</a></span>&#160;<span class="keywordtype">void</span> Reporter::ReportCalculatedQuantity&lt;core::UncertaintyAnalysis&gt;(</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keyword">const</span> core::Settings&amp; settings, <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* information) {</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> quant = information-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;calculated-quantity&quot;</span>);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  quant.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;name&quot;</span>, <span class="stringliteral">&quot;Uncertainty Analysis&quot;</span>)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;definition&quot;</span>,</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                    <span class="stringliteral">&quot;Calculation of uncertainties with the Monte Carlo method&quot;</span>);</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> methods = quant.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;calculation-method&quot;</span>);</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  methods.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;name&quot;</span>, <span class="stringliteral">&quot;Monte Carlo&quot;</span>);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> limits = methods.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;limits&quot;</span>);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  limits.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;number-of-trials&quot;</span>).<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a7e3c09c8d2041452e04f31dd332b65a6">AddText</a>(settings.num_trials());</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  <span class="keywordflow">if</span> (settings.seed() &gt;= 0) {</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    limits.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;seed&quot;</span>).<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a7e3c09c8d2041452e04f31dd332b65a6">AddText</a>(settings.seed());</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  }</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;}</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">/// Describes all performed analyses deduced from settings.</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="reporter_8cc.xhtml#a73f9569f4c2e2b6a3eac8d2c01b81943">  215</a></span>&#160;<span class="keywordtype">void</span> Reporter::ReportCalculatedQuantity&lt;core::RiskAnalysis&gt;(</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keyword">const</span> core::Settings&amp; settings, <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* information) {</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="comment">// Report the fault tree analysis by default.</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  ReportCalculatedQuantity&lt;core::FaultTreeAnalysis&gt;(settings, information);</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  <span class="comment">// Report optional analyses.</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  <span class="keywordflow">if</span> (settings.probability_analysis()) {</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    ReportCalculatedQuantity&lt;core::ProbabilityAnalysis&gt;(settings, information);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  }</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  <span class="keywordflow">if</span> (settings.safety_integrity_levels()) {</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    information-&gt;AddChild(<span class="stringliteral">&quot;calculated-quantity&quot;</span>)</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        .SetAttribute(<span class="stringliteral">&quot;name&quot;</span>, <span class="stringliteral">&quot;Safety Integrity Levels&quot;</span>);</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  }</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  <span class="keywordflow">if</span> (settings.importance_analysis()) {</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    ReportCalculatedQuantity&lt;core::ImportanceAnalysis&gt;(settings, information);</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  }</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  <span class="keywordflow">if</span> (settings.uncertainty_analysis()) {</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    ReportCalculatedQuantity&lt;core::UncertaintyAnalysis&gt;(settings, information);</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;  }</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;}</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keywordtype">void</span> Reporter::ReportInformation(<span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml">core::RiskAnalysis</a>&amp; risk_an,</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                                 <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* report) {</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> information = report-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;information&quot;</span>);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;  ReportSoftwareInformation(&amp;information);</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  ReportPerformance(risk_an, &amp;information);</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  ReportCalculatedQuantity(risk_an.<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">settings</a>(), &amp;information);</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  ReportModelFeatures(risk_an.<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a337f7e9fe02b1581e872590d6f7baa01">model</a>(), &amp;information);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  ReportUnusedElements(risk_an.<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a337f7e9fe02b1581e872590d6f7baa01">model</a>().<a class="code" href="classscram_1_1mef_1_1Model.xhtml#ada7804d62fc594bff7b080c680586209">basic_events</a>(),</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                       <span class="stringliteral">&quot;Unused basic events: &quot;</span>, &amp;information);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  ReportUnusedElements(risk_an.<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a337f7e9fe02b1581e872590d6f7baa01">model</a>().<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a2ddd6d121e1ab6fbe140fc3fb449cd96">house_events</a>(),</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                       <span class="stringliteral">&quot;Unused house events: &quot;</span>, &amp;information);</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  ReportUnusedElements(risk_an.<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a337f7e9fe02b1581e872590d6f7baa01">model</a>().<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a698156baa445c530089d57601e19bb35">parameters</a>(),</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                       <span class="stringliteral">&quot;Unused parameters: &quot;</span>, &amp;information);</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  ReportUnusedElements(risk_an.<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a337f7e9fe02b1581e872590d6f7baa01">model</a>().<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a079a335f4d28970ac3c548d5a28c558a">libraries</a>(),</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                       <span class="stringliteral">&quot;Unused libraries: &quot;</span>, &amp;information);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  ReportUnusedElements(risk_an.<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a337f7e9fe02b1581e872590d6f7baa01">model</a>().<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a440e609f51239a98f3c2d5256522dce7">extern_functions</a>(),</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                       <span class="stringliteral">&quot;Unused extern functions: &quot;</span>, &amp;information);</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  ReportUnusedElements(risk_an.<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a337f7e9fe02b1581e872590d6f7baa01">model</a>().<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a04f7628e1d3a27295d2ac7bbdc7ab26b">initiating_events</a>(),</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                       <span class="stringliteral">&quot;Unused initiating events: &quot;</span>, &amp;information);</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  ReportUnusedElements(risk_an.<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a337f7e9fe02b1581e872590d6f7baa01">model</a>().<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a97786aaa61d59617a0b08dcd518d0d68">event_trees</a>(),</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                       <span class="stringliteral">&quot;Unused event trees: &quot;</span>, &amp;information);</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  ReportUnusedElements(risk_an.<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a337f7e9fe02b1581e872590d6f7baa01">model</a>().<a class="code" href="classscram_1_1mef_1_1Model.xhtml#afbb8bfee9de066a3341d34ef5ce885e4">sequences</a>(),</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                       <span class="stringliteral">&quot;Unused sequences: &quot;</span>, &amp;information);</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  ReportUnusedElements(risk_an.<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a337f7e9fe02b1581e872590d6f7baa01">model</a>().<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a52198e362df1827d583eceed7306eb6f">rules</a>(), <span class="stringliteral">&quot;Unused rules: &quot;</span>, &amp;information);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="event__tree_8h.xhtml#a9fb29cbc2c3de675454fc41c493f1405">mef::EventTreePtr</a>&amp; event_tree : risk_an.<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a337f7e9fe02b1581e872590d6f7baa01">model</a>().<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a97786aaa61d59617a0b08dcd518d0d68">event_trees</a>()) {</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    std::string header = <span class="stringliteral">&quot;In event tree &quot;</span> + event_tree-&gt;name() + <span class="stringliteral">&quot;, &quot;</span>;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    ReportUnusedElements(event_tree-&gt;branches(),</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                         header + <span class="stringliteral">&quot;unused branches: &quot;</span>, &amp;information);</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    ReportUnusedElements(event_tree-&gt;functional_events(),</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                         header + <span class="stringliteral">&quot;unused functional events: &quot;</span>, &amp;information);</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  }</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;}</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keywordtype">void</span> Reporter::ReportSoftwareInformation(<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* information) {</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  information-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;software&quot;</span>)</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;      .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;name&quot;</span>, <span class="stringliteral">&quot;SCRAM&quot;</span>)</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;      .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;version&quot;</span>, *version::describe() != <span class="charliteral">&#39;\0&#39;</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                                   ? version::describe()</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                                   : version::core())</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;      .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;contacts&quot;</span>, <span class="stringliteral">&quot;https://scram-pra.org&quot;</span>);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;  std::time_t current_time = std::time(<span class="keyword">nullptr</span>);</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  <span class="keywordtype">char</span> iso_extended[20] = {};</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  <span class="keyword">auto</span> ret = std::strftime(iso_extended, <span class="keyword">sizeof</span>(iso_extended),</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                           <span class="stringliteral">&quot;%Y-%m-%dT%H:%M:%S&quot;</span>, std::gmtime(&amp;current_time));</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;  assert(ret &amp;&amp; <span class="stringliteral">&quot;Time formatting failure. Who is running this in year 10000?&quot;</span>);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;  <span class="keywordflow">if</span> (ret)  <span class="comment">// The user can set the wall-clock year beyond 10k.</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    information-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;time&quot;</span>).<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a7e3c09c8d2041452e04f31dd332b65a6">AddText</a>(iso_extended);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;}</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keywordtype">void</span> Reporter::ReportModelFeatures(<span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml">mef::Model</a>&amp; model,</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                                   <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* information) {</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;  <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> model_features = information-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;model-features&quot;</span>);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;  <span class="keywordflow">if</span> (!model.<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a742b8f5f989b633eeeeb192d2e793181">HasDefaultName</a>())</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    model_features.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;name&quot;</span>, model.<a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a>());</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;  <span class="keyword">auto</span> feature = [&amp;model_features](<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> <span class="keyword">auto</span>&amp; container) {</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="keywordflow">if</span> (!container.empty())</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;      model_features.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(name).<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a7e3c09c8d2041452e04f31dd332b65a6">AddText</a>(container.size());</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  };</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;  feature(<span class="stringliteral">&quot;gates&quot;</span>, model.<a class="code" href="classscram_1_1mef_1_1Model.xhtml#ab67ee068ec7f783c7b3c573270cf4fdb">gates</a>());</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;  feature(<span class="stringliteral">&quot;basic-events&quot;</span>, model.<a class="code" href="classscram_1_1mef_1_1Model.xhtml#ada7804d62fc594bff7b080c680586209">basic_events</a>());</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  feature(<span class="stringliteral">&quot;house-events&quot;</span>, model.<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a2ddd6d121e1ab6fbe140fc3fb449cd96">house_events</a>());</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  feature(<span class="stringliteral">&quot;ccf-groups&quot;</span>, model.<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a5c8b03561207b374fc06dd61c0cf3ace">ccf_groups</a>());</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  feature(<span class="stringliteral">&quot;fault-trees&quot;</span>, model.<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a9bac9a7746026484f3dc69a3ccb2ac4a">fault_trees</a>());</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  feature(<span class="stringliteral">&quot;event-trees&quot;</span>, model.<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a97786aaa61d59617a0b08dcd518d0d68">event_trees</a>());</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  <span class="keywordtype">int</span> num_functional_events = 0;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="event__tree_8h.xhtml#a9fb29cbc2c3de675454fc41c493f1405">mef::EventTreePtr</a>&amp; event_tree : model.<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a97786aaa61d59617a0b08dcd518d0d68">event_trees</a>())</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    num_functional_events += event_tree-&gt;functional_events().size();</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  <span class="keywordflow">if</span> (num_functional_events)</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    model_features.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;functional-events&quot;</span>).<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a7e3c09c8d2041452e04f31dd332b65a6">AddText</a>(num_functional_events);</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  feature(<span class="stringliteral">&quot;sequences&quot;</span>, model.<a class="code" href="classscram_1_1mef_1_1Model.xhtml#afbb8bfee9de066a3341d34ef5ce885e4">sequences</a>());</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;  feature(<span class="stringliteral">&quot;rules&quot;</span>, model.<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a52198e362df1827d583eceed7306eb6f">rules</a>());</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;  feature(<span class="stringliteral">&quot;initiating-events&quot;</span>, model.<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a04f7628e1d3a27295d2ac7bbdc7ab26b">initiating_events</a>());</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  feature(<span class="stringliteral">&quot;substitutions&quot;</span>, model.<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a8069a205597e12662a32b8208842d145">substitutions</a>());</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;}</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keywordtype">void</span> Reporter::ReportPerformance(<span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml">core::RiskAnalysis</a>&amp; risk_an,</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                                 <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* information) {</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;  <span class="keywordflow">if</span> (risk_an.<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a9198a9d439e7559e7661aa664e172400">results</a>().empty())</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keywordflow">return</span>;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;  <span class="comment">// Setup for performance information.</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;  <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> performance = information-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;performance&quot;</span>);</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1Result.xhtml">core::RiskAnalysis::Result</a>&amp; result : risk_an.<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a9198a9d439e7559e7661aa664e172400">results</a>()) {</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> calc_time = performance.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;calculation-time&quot;</span>);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    scram::PutId(result.id, &amp;calc_time);</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <span class="keywordflow">if</span> (result.fault_tree_analysis)</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;      calc_time.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;products&quot;</span>)</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;          .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a7e3c09c8d2041452e04f31dd332b65a6">AddText</a>(result.fault_tree_analysis-&gt;analysis_time());</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="keywordflow">if</span> (result.probability_analysis)</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;      calc_time.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;probability&quot;</span>)</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;          .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a7e3c09c8d2041452e04f31dd332b65a6">AddText</a>(result.probability_analysis-&gt;analysis_time());</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keywordflow">if</span> (result.importance_analysis)</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;      calc_time.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;importance&quot;</span>)</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;          .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a7e3c09c8d2041452e04f31dd332b65a6">AddText</a>(result.importance_analysis-&gt;analysis_time());</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="keywordflow">if</span> (result.uncertainty_analysis)</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;      calc_time.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;uncertainty&quot;</span>)</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;          .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a7e3c09c8d2041452e04f31dd332b65a6">AddText</a>(result.uncertainty_analysis-&gt;analysis_time());</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;  }</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;}</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="keywordtype">void</span> Reporter::ReportUnusedElements(<span class="keyword">const</span> T&amp; container,</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                                    <span class="keyword">const</span> std::string&amp; header,</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                                    <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* information) {</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;  std::string out = boost::join(</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;      container | boost::adaptors::filtered([](<span class="keyword">auto</span>&amp; ptr) {</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        <span class="keywordflow">return</span> !ptr-&gt;usage();</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;      }) | boost::adaptors::transformed([](<span class="keyword">auto</span>&amp; ptr) -&gt; decltype(<span class="keyword">auto</span>) {</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classscram_1_1mef_1_1Id.xhtml#ad92eeb2ebe9c650e3c5ad90526f2d8f9">mef::Id::unique_name</a>(*ptr);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;      }),</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;      <span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;  <span class="keywordflow">if</span> (!out.empty())</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    information-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;warning&quot;</span>).<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a7e3c09c8d2041452e04f31dd332b65a6">AddText</a>(header + out);</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;}</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keywordtype">void</span> Reporter::ReportResults(<span class="keyword">const</span> <a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1EtaResult.xhtml">core::RiskAnalysis::EtaResult</a>&amp; eta_result,</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                             <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* results) {</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;  <span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1EventTreeAnalysis.xhtml">core::EventTreeAnalysis</a>&amp; eta = *eta_result.<a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1EtaResult.xhtml#a2a4096d7aac930a19fbf458b6619a459">event_tree_analysis</a>;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;  <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> initiating_event = results-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;initiating-event&quot;</span>);</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;  initiating_event.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;name&quot;</span>, eta.<a class="code" href="classscram_1_1core_1_1EventTreeAnalysis.xhtml#a091921b091dc2557541aeafbbf93a2d3">initiating_event</a>().<a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a>());</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;  <span class="keywordflow">if</span> (eta_result.<a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1EtaResult.xhtml#acf1aabf44dd6676c3ff1f5ce48af6957">context</a>) {</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    initiating_event</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;alignment&quot;</span>, eta_result.<a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1EtaResult.xhtml#acf1aabf44dd6676c3ff1f5ce48af6957">context</a>-&gt;alignment.name())</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        .SetAttribute(<span class="stringliteral">&quot;phase&quot;</span>, eta_result.<a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1EtaResult.xhtml#acf1aabf44dd6676c3ff1f5ce48af6957">context</a>-&gt;phase.name());</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;  }</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;  initiating_event.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;sequences&quot;</span>, eta.<a class="code" href="classscram_1_1core_1_1EventTreeAnalysis.xhtml#a326dc3c6651fc036c86bebc3a2ba1a46">sequences</a>().size());</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="structscram_1_1core_1_1EventTreeAnalysis_1_1Result.xhtml">core::EventTreeAnalysis::Result</a>&amp; result_sequence :</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;       eta.<a class="code" href="classscram_1_1core_1_1EventTreeAnalysis.xhtml#a326dc3c6651fc036c86bebc3a2ba1a46">sequences</a>()) {</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    initiating_event.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;sequence&quot;</span>)</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;name&quot;</span>, result_sequence.sequence.name())</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        .SetAttribute(<span class="stringliteral">&quot;value&quot;</span>, result_sequence.p_sequence);</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;  }</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;}</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="keywordtype">void</span> Reporter::ReportResults(<span class="keyword">const</span> <a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1Result_1_1Id.xhtml">core::RiskAnalysis::Result::Id</a>&amp; <span class="keywordtype">id</span>,</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1FaultTreeAnalysis.xhtml">core::FaultTreeAnalysis</a>&amp; fta,</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml">core::ProbabilityAnalysis</a>* prob_analysis,</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                             <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* results) {</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;  <a class="code" href="logger_8h.xhtml#a43bfc963f340281b07ac23d1c3ba00b5">TIMER</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea064d45d966cf5368bd8a5e317e65a0e6">DEBUG2</a>, <span class="stringliteral">&quot;Reporting products&quot;</span>);</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> sum_of_products = results-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;sum-of-products&quot;</span>);</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;  scram::PutId(<span class="keywordtype">id</span>, &amp;sum_of_products);</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;  std::string warning = fta.<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#aaf2ae2ef3673c9d8006ec08f1cecb4d1">warnings</a>();</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;  <span class="keywordflow">if</span> (prob_analysis &amp;&amp; prob_analysis-&gt;<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#aaf2ae2ef3673c9d8006ec08f1cecb4d1">warnings</a>().empty() == <span class="keyword">false</span>)</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    warning += (warning.empty() ? <span class="stringliteral">&quot;&quot;</span> : <span class="stringliteral">&quot;; &quot;</span>) + prob_analysis-&gt;<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#aaf2ae2ef3673c9d8006ec08f1cecb4d1">warnings</a>();</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;  <span class="keywordflow">if</span> (!warning.empty())</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    sum_of_products.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;warning&quot;</span>, warning);</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;  sum_of_products</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;      .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;basic-events&quot;</span>, fta.<a class="code" href="classscram_1_1core_1_1FaultTreeAnalysis.xhtml#a2f72ce18bab118ab1949ae70f16d9203">products</a>().<a class="code" href="classscram_1_1core_1_1ProductContainer.xhtml#a4f01887850f3bf444d3e1c9ec5780b69">product_events</a>().size())</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;      .SetAttribute(<span class="stringliteral">&quot;products&quot;</span>, fta.<a class="code" href="classscram_1_1core_1_1FaultTreeAnalysis.xhtml#a2f72ce18bab118ab1949ae70f16d9203">products</a>().<a class="code" href="classscram_1_1core_1_1ProductContainer.xhtml#ac02fbe13144218abf07fdd6ba9c8b532">size</a>());</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;  <span class="keywordflow">if</span> (prob_analysis)</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    sum_of_products.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;probability&quot;</span>, prob_analysis-&gt;<a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a1911b04166a0f1ee816410482f14fe9a">p_total</a>());</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;  <span class="keywordflow">if</span> (fta.<a class="code" href="classscram_1_1core_1_1FaultTreeAnalysis.xhtml#a2f72ce18bab118ab1949ae70f16d9203">products</a>().<a class="code" href="classscram_1_1core_1_1ProductContainer.xhtml#ac48d179d37d1109d36bf2d36e02aebe7">empty</a>() == <span class="keyword">false</span>) {</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    sum_of_products.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <span class="stringliteral">&quot;distribution&quot;</span>,</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        boost::join(fta.<a class="code" href="classscram_1_1core_1_1FaultTreeAnalysis.xhtml#a2f72ce18bab118ab1949ae70f16d9203">products</a>().<a class="code" href="classscram_1_1core_1_1ProductContainer.xhtml#a13aef26de832f9f965a5b59eda14847b">Distribution</a>() |</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                        boost::adaptors::transformed(</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                            [](<span class="keywordtype">int</span> number) { <span class="keywordflow">return</span> std::to_string(number); }),</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                    <span class="stringliteral">&quot; &quot;</span>));</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;  }</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;  <span class="keywordtype">double</span> sum = 0;  <span class="comment">// Sum of probabilities for contribution calculations.</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;  <span class="keywordflow">if</span> (prob_analysis) {</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1Product.xhtml">core::Product</a>&amp; product_set : fta.<a class="code" href="classscram_1_1core_1_1FaultTreeAnalysis.xhtml#a2f72ce18bab118ab1949ae70f16d9203">products</a>())</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;      sum += product_set.p();</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;  }</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1Product.xhtml">core::Product</a>&amp; product_set : fta.<a class="code" href="classscram_1_1core_1_1FaultTreeAnalysis.xhtml#a2f72ce18bab118ab1949ae70f16d9203">products</a>()) {</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> product = sum_of_products.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;product&quot;</span>);</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    product.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;order&quot;</span>, product_set.order());</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <span class="keywordflow">if</span> (prob_analysis) {</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;      <span class="keywordtype">double</span> prob = product_set.p();</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;      product.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;probability&quot;</span>, prob);</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;      <span class="keywordflow">if</span> (sum != 0)</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        product.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;contribution&quot;</span>, prob / sum);</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    }</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="structscram_1_1core_1_1Literal.xhtml">core::Literal</a>&amp; literal : product_set) {</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;      ReportLiteral(literal, &amp;product);</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    }</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;  }</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;}</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="keywordtype">void</span> Reporter::ReportResults(<span class="keyword">const</span> <a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1Result_1_1Id.xhtml">core::RiskAnalysis::Result::Id</a>&amp; <span class="keywordtype">id</span>,</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml">core::ProbabilityAnalysis</a>&amp; prob_analysis,</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                             <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* results) {</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;  <span class="keywordflow">if</span> (!prob_analysis.<a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a2298d982999f3cdf5b5d373f09af2cc3">p_time</a>().empty()) {</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> curve = results-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;curve&quot;</span>);</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    scram::PutId(<span class="keywordtype">id</span>, &amp;curve);</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    curve.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;description&quot;</span>, <span class="stringliteral">&quot;Probability values over time&quot;</span>)</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;X-title&quot;</span>, <span class="stringliteral">&quot;Mission time&quot;</span>)</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;Y-title&quot;</span>, <span class="stringliteral">&quot;Probability&quot;</span>)</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;X-unit&quot;</span>, <span class="stringliteral">&quot;hours&quot;</span>);</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> std::pair&lt;double, double&gt;&amp; p_vs_time : prob_analysis.<a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a2298d982999f3cdf5b5d373f09af2cc3">p_time</a>()) {</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;      curve.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;point&quot;</span>)</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;          .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;X&quot;</span>, p_vs_time.second)</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;          .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;Y&quot;</span>, p_vs_time.first);</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    }</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;  }</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;  <span class="keywordflow">if</span> (prob_analysis.<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">settings</a>().<a class="code" href="classscram_1_1core_1_1Settings.xhtml#a694757a6ab5effaea2d585905950d6bd">safety_integrity_levels</a>()) {</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> sil = results-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;safety-integrity-levels&quot;</span>);</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    scram::PutId(<span class="keywordtype">id</span>, &amp;sil);</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    sil.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;PFD-avg&quot;</span>, prob_analysis.<a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a93dffcc865268c92db5df98c5a3bed73">sil</a>().<a class="code" href="structscram_1_1core_1_1Sil.xhtml#a4ae38f79c20c009e70467b7c3e7cbab9">pfd_avg</a>)</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        .SetAttribute(<span class="stringliteral">&quot;PFH-avg&quot;</span>, prob_analysis.<a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a93dffcc865268c92db5df98c5a3bed73">sil</a>().<a class="code" href="structscram_1_1core_1_1Sil.xhtml#ac3363b568b801041a429f7d69b214cea">pfh_avg</a>);</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    <span class="keyword">auto</span> report_sil_fractions = [&amp;sil](<span class="keyword">const</span> <span class="keyword">auto</span>&amp; sil_fractions) {</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;      <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> hist = sil.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;histogram&quot;</span>);</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;      hist.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;number&quot;</span>, sil_fractions.size());</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;      <span class="keywordtype">double</span> b_0 = 0;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;      <span class="keywordtype">int</span> bin_number = 1;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;      <span class="keywordflow">for</span> (<span class="keyword">const</span> std::pair&lt;const double, double&gt;&amp; sil_bucket : sil_fractions) {</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        <span class="keywordtype">double</span> b_1 = sil_bucket.first;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        hist.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;bin&quot;</span>)</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;            .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;number&quot;</span>, bin_number++)</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;value&quot;</span>, sil_bucket.second)</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;lower-bound&quot;</span>, b_0)</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;upper-bound&quot;</span>, b_1);</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        b_0 = b_1;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;      }</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    };</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    report_sil_fractions(prob_analysis.<a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a93dffcc865268c92db5df98c5a3bed73">sil</a>().<a class="code" href="structscram_1_1core_1_1Sil.xhtml#a97f774269a891daf5e7667896cdb3dfb">pfd_fractions</a>);</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    report_sil_fractions(prob_analysis.<a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a93dffcc865268c92db5df98c5a3bed73">sil</a>().<a class="code" href="structscram_1_1core_1_1Sil.xhtml#a228170df249d366e83c572e88c00a7aa">pfh_fractions</a>);</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;  }</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;}</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="keywordtype">void</span> Reporter::ReportResults(</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <span class="keyword">const</span> <a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1Result_1_1Id.xhtml">core::RiskAnalysis::Result::Id</a>&amp; <span class="keywordtype">id</span>,</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    <span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1ImportanceAnalysis.xhtml">core::ImportanceAnalysis</a>&amp; importance_analysis,</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* results) {</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;  <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> importance = results-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;importance&quot;</span>);</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;  scram::PutId(<span class="keywordtype">id</span>, &amp;importance);</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;  <span class="keywordflow">if</span> (!importance_analysis.<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#aaf2ae2ef3673c9d8006ec08f1cecb4d1">warnings</a>().empty()) {</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    importance.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;warning&quot;</span>, importance_analysis.<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#aaf2ae2ef3673c9d8006ec08f1cecb4d1">warnings</a>());</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;  }</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;  importance.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;basic-events&quot;</span>,</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                          importance_analysis.<a class="code" href="classscram_1_1core_1_1ImportanceAnalysis.xhtml#abb29c7fa7faf87cb8307588487cc4d75">importance</a>().size());</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="structscram_1_1core_1_1ImportanceRecord.xhtml">core::ImportanceRecord</a>&amp; entry : importance_analysis.<a class="code" href="classscram_1_1core_1_1ImportanceAnalysis.xhtml#abb29c7fa7faf87cb8307588487cc4d75">importance</a>()) {</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <span class="keyword">const</span> <a class="code" href="structscram_1_1core_1_1ImportanceFactors.xhtml">core::ImportanceFactors</a>&amp; factors = entry.factors;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    <span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1BasicEvent.xhtml">mef::BasicEvent</a>&amp; <span class="keyword">event</span> = entry.event;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    <span class="keyword">auto</span> add_data = [&amp;event, &amp;factors](<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* element) {</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;      element-&gt;<a class="code" href="classscram_1_1mef_1_1Element.xhtml#a3c101f4c38ec64ceff100a04ae331c69">SetAttribute</a>(<span class="stringliteral">&quot;occurrence&quot;</span>, factors.<a class="code" href="structscram_1_1core_1_1ImportanceFactors.xhtml#a9b15309c0a69b54f80b8454129438f92">occurrence</a>)</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;          .SetAttribute(<span class="stringliteral">&quot;probability&quot;</span>, event.p())</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;          .SetAttribute(<span class="stringliteral">&quot;MIF&quot;</span>, factors.<a class="code" href="structscram_1_1core_1_1ImportanceFactors.xhtml#acd377958b0cbb3e58c3ffd6c3eaeaa23">mif</a>)</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;          .SetAttribute(<span class="stringliteral">&quot;CIF&quot;</span>, factors.<a class="code" href="structscram_1_1core_1_1ImportanceFactors.xhtml#a4d597a9bc0acaf0391768cbe5538d277">cif</a>)</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;          .SetAttribute(<span class="stringliteral">&quot;DIF&quot;</span>, factors.<a class="code" href="structscram_1_1core_1_1ImportanceFactors.xhtml#a324bda1cd8f936f74b0cb90c742293d5">dif</a>)</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;          .SetAttribute(<span class="stringliteral">&quot;RAW&quot;</span>, factors.<a class="code" href="structscram_1_1core_1_1ImportanceFactors.xhtml#a71bd6627e21d040f51174727c7e6a0b6">raw</a>)</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;          .SetAttribute(<span class="stringliteral">&quot;RRW&quot;</span>, factors.<a class="code" href="structscram_1_1core_1_1ImportanceFactors.xhtml#add0028639d89e2e6b0dd794446fc162a">rrw</a>);</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    };</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    ReportBasicEvent(event, &amp;importance, add_data);</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;  }</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;}</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="keywordtype">void</span> Reporter::ReportResults(<span class="keyword">const</span> <a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1Result_1_1Id.xhtml">core::RiskAnalysis::Result::Id</a>&amp; <span class="keywordtype">id</span>,</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml">core::UncertaintyAnalysis</a>&amp; uncert_analysis,</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                             <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* results) {</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;  <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> measure = results-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;measure&quot;</span>);</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;  scram::PutId(<span class="keywordtype">id</span>, &amp;measure);</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;  <span class="keywordflow">if</span> (!uncert_analysis.<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#aaf2ae2ef3673c9d8006ec08f1cecb4d1">warnings</a>().empty()) {</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    measure.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;warning&quot;</span>, uncert_analysis.<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#aaf2ae2ef3673c9d8006ec08f1cecb4d1">warnings</a>());</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;  }</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;  measure.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;mean&quot;</span>).<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;value&quot;</span>, uncert_analysis.<a class="code" href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml#a059efd1d9540a5e11e11668cd4467145">mean</a>());</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;  measure.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;standard-deviation&quot;</span>)</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;      .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;value&quot;</span>, uncert_analysis.<a class="code" href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml#a94e6008ebcc6ae1f8c2d036837c8460d">sigma</a>());</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;  measure.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;confidence-range&quot;</span>)</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;      .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;percentage&quot;</span>, <span class="stringliteral">&quot;95&quot;</span>)</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;      .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;lower-bound&quot;</span>, uncert_analysis.<a class="code" href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml#aa8e1084309506bed6943dff274712b6b">confidence_interval</a>().first)</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;      .SetAttribute(<span class="stringliteral">&quot;upper-bound&quot;</span>,</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                    uncert_analysis.<a class="code" href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml#aa8e1084309506bed6943dff274712b6b">confidence_interval</a>().second);</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;  measure.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;error-factor&quot;</span>)</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;      .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;percentage&quot;</span>, <span class="stringliteral">&quot;95&quot;</span>)</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;      .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;value&quot;</span>, uncert_analysis.<a class="code" href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml#a2601be0faf3e696d96e7d5fef3ff6fdc">error_factor</a>());</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;  {</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> quantiles = measure.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;quantiles&quot;</span>);</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    <span class="keywordtype">int</span> num_quantiles = uncert_analysis.<a class="code" href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml#aeceb1ed0c937ff3972174dbcee0386d4">quantiles</a>().size();</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    quantiles.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;number&quot;</span>, num_quantiles);</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    <span class="keywordtype">double</span> prev_bound = 0;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    <span class="keywordtype">double</span> delta = 1.0 / num_quantiles;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; num_quantiles; ++i) {</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;      <span class="keywordtype">double</span> upper = uncert_analysis.<a class="code" href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml#aeceb1ed0c937ff3972174dbcee0386d4">quantiles</a>()[i];</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;      <span class="keywordtype">double</span> value = delta * (i + 1);</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;      quantiles.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;quantile&quot;</span>)</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;          .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;number&quot;</span>, i + 1)</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;          .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;value&quot;</span>, value)</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;          .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;lower-bound&quot;</span>, prev_bound)</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;          .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;upper-bound&quot;</span>, upper);</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;      prev_bound = upper;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    }</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;  }</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;  {</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> hist = measure.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;histogram&quot;</span>);</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <span class="keywordtype">int</span> num_bins = uncert_analysis.<a class="code" href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml#a66a3d3404062e5fa1f27ba11c6d26a60">distribution</a>().size() - 1;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    hist.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;number&quot;</span>, num_bins);</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; num_bins; ++i) {</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;      <span class="keywordtype">double</span> lower = uncert_analysis.<a class="code" href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml#a66a3d3404062e5fa1f27ba11c6d26a60">distribution</a>()[i].first;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;      <span class="keywordtype">double</span> upper = uncert_analysis.<a class="code" href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml#a66a3d3404062e5fa1f27ba11c6d26a60">distribution</a>()[i + 1].first;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;      <span class="keywordtype">double</span> value = uncert_analysis.<a class="code" href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml#a66a3d3404062e5fa1f27ba11c6d26a60">distribution</a>()[i].second;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;      hist.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;bin&quot;</span>)</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;          .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;number&quot;</span>, i + 1)</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;          .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;value&quot;</span>, value)</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;          .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;lower-bound&quot;</span>, lower)</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;          .<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;upper-bound&quot;</span>, upper);</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    }</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;  }</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;}</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="keywordtype">void</span> Reporter::ReportLiteral(<span class="keyword">const</span> <a class="code" href="structscram_1_1core_1_1Literal.xhtml">core::Literal</a>&amp; literal,</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                             <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* parent) {</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;  <span class="keyword">auto</span> add_data = [](<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* <span class="comment">/*element*/</span>) {};</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;  <span class="keywordflow">if</span> (literal.<a class="code" href="structscram_1_1core_1_1Literal.xhtml#a8cc746f6ce760d42e552446050c2eb58">complement</a>) {</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> not_parent = parent-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;not&quot;</span>);</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    ReportBasicEvent(literal.<a class="code" href="structscram_1_1core_1_1Literal.xhtml#a57f28025e4a697788da146a3eed5aa2f">event</a>, &amp;not_parent, add_data);</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    ReportBasicEvent(literal.<a class="code" href="structscram_1_1core_1_1Literal.xhtml#a57f28025e4a697788da146a3eed5aa2f">event</a>, parent, add_data);</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;  }</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;}</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="keywordtype">void</span> Reporter::ReportBasicEvent(<span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1BasicEvent.xhtml">mef::BasicEvent</a>&amp; basic_event,</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                                <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a>* parent, <span class="keyword">const</span> T&amp; add_data) {</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;  <span class="keyword">const</span> <span class="keyword">auto</span>* ccf_event = <span class="keyword">dynamic_cast&lt;</span><span class="keyword">const </span><a class="code" href="classscram_1_1mef_1_1CcfEvent.xhtml">mef::CcfEvent</a>*<span class="keyword">&gt;</span>(&amp;basic_event);</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;  <span class="keywordflow">if</span> (!ccf_event) {</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> element = parent-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;basic-event&quot;</span>);</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    element.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;name&quot;</span>, basic_event.<a class="code" href="classscram_1_1mef_1_1Id.xhtml#a7e258c5f6332715d5ed6a3fdbf681a8b">id</a>());</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    add_data(&amp;element);</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    <span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml">mef::CcfGroup</a>&amp; ccf_group = ccf_event-&gt;ccf_group();</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    <a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml">xml::StreamElement</a> element = parent-&gt;<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;ccf-event&quot;</span>);</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    element.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;ccf-group&quot;</span>, ccf_group.<a class="code" href="classscram_1_1mef_1_1Id.xhtml#a7e258c5f6332715d5ed6a3fdbf681a8b">id</a>())</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        .SetAttribute(<span class="stringliteral">&quot;order&quot;</span>, ccf_event-&gt;members().size())</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        .SetAttribute(<span class="stringliteral">&quot;group-size&quot;</span>, ccf_group.<a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#a06dd05cabcbeddf42090536f6a47a184">members</a>().size());</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    add_data(&amp;element);</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1Gate.xhtml">mef::Gate</a>* member : ccf_event-&gt;members()) {</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;      element.<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">AddChild</a>(<span class="stringliteral">&quot;basic-event&quot;</span>).<a class="code" href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">SetAttribute</a>(<span class="stringliteral">&quot;name&quot;</span>, member-&gt;name());</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    }</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;  }</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;}</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;}  <span class="comment">// namespace scram</span></div><div class="ttc" id="logger_8h_xhtml_a43bfc963f340281b07ac23d1c3ba00b5"><div class="ttname"><a href="logger_8h.xhtml#a43bfc963f340281b07ac23d1c3ba00b5">TIMER</a></div><div class="ttdeci">#define TIMER(level,...)</div><div class="ttdoc">Creates an automatic unique logging timer for a scope. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00055">logger.h:55</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a8069a205597e12662a32b8208842d145"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a8069a205597e12662a32b8208842d145">scram::mef::Model::substitutions</a></div><div class="ttdeci">const ElementTable&lt; SubstitutionPtr &gt; &amp; substitutions() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00089">model.h:89</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml_a3c101f4c38ec64ceff100a04ae331c69"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml#a3c101f4c38ec64ceff100a04ae331c69">scram::mef::Element::SetAttribute</a></div><div class="ttdeci">void SetAttribute(Attribute attr)</div><div class="ttdoc">Sets an attribute to the attribute map. </div><div class="ttdef"><b>Definition:</b> <a href="element_8cc_source.xhtml#l00049">element.cc:49</a></div></div>
<div class="ttc" id="structscram_1_1IOError_xhtml"><div class="ttname"><a href="structscram_1_1IOError.xhtml">scram::IOError</a></div><div class="ttdoc">For input/output related errors. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00066">error.h:66</a></div></div>
<div class="ttc" id="classscram_1_1xml_1_1StreamElement_xhtml_a42273d1e66d736a9c2810fbee7dc4cb9"><div class="ttname"><a href="classscram_1_1xml_1_1StreamElement.xhtml#a42273d1e66d736a9c2810fbee7dc4cb9">scram::xml::StreamElement::SetAttribute</a></div><div class="ttdeci">StreamElement &amp; SetAttribute(const char *name, T &amp;&amp;value)</div><div class="ttdoc">Sets the attributes for the element. </div><div class="ttdef"><b>Definition:</b> <a href="xml__stream_8h_source.xhtml#l00237">xml_stream.h:237</a></div></div>
<div class="ttc" id="logger_8h_xhtml_a8cc0e8b39d76d12fd165097dbc8cf81ea2d4eac027f72ba19eb11f1d5ae7ddadc"><div class="ttname"><a href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea2d4eac027f72ba19eb11f1d5ae7ddadc">scram::DEBUG1</a></div><div class="ttdoc">Minimal debugging information. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00078">logger.h:78</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Id_xhtml_a7e258c5f6332715d5ed6a3fdbf681a8b"><div class="ttname"><a href="classscram_1_1mef_1_1Id.xhtml#a7e258c5f6332715d5ed6a3fdbf681a8b">scram::mef::Id::id</a></div><div class="ttdeci">const std::string &amp; id() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00212">element.h:212</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1ProductContainer_xhtml_a13aef26de832f9f965a5b59eda14847b"><div class="ttname"><a href="classscram_1_1core_1_1ProductContainer.xhtml#a13aef26de832f9f965a5b59eda14847b">scram::core::ProductContainer::Distribution</a></div><div class="ttdeci">std::vector&lt; int &gt; Distribution() const </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree__analysis_8cc_source.xhtml#l00081">fault_tree_analysis.cc:81</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Product_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1Product.xhtml">scram::core::Product</a></div><div class="ttdoc">Collection of unique literals. </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree__analysis_8h_source.xhtml#l00054">fault_tree_analysis.h:54</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a97786aaa61d59617a0b08dcd518d0d68"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a97786aaa61d59617a0b08dcd518d0d68">scram::mef::Model::event_trees</a></div><div class="ttdeci">const ElementTable&lt; EventTreePtr &gt; &amp; event_trees() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00084">model.h:84</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1Literal_xhtml"><div class="ttname"><a href="structscram_1_1core_1_1Literal.xhtml">scram::core::Literal</a></div><div class="ttdoc">Event or its complement that may appear in products. </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree__analysis_8h_source.xhtml#l00048">fault_tree_analysis.h:48</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1RiskAnalysis_xhtml_a9198a9d439e7559e7661aa664e172400"><div class="ttname"><a href="classscram_1_1core_1_1RiskAnalysis.xhtml#a9198a9d439e7559e7661aa664e172400">scram::core::RiskAnalysis::results</a></div><div class="ttdeci">const std::vector&lt; Result &gt; &amp; results() const </div><div class="ttdef"><b>Definition:</b> <a href="risk__analysis_8h_source.xhtml#l00106">risk_analysis.h:106</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a2ddd6d121e1ab6fbe140fc3fb449cd96"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a2ddd6d121e1ab6fbe140fc3fb449cd96">scram::mef::Model::house_events</a></div><div class="ttdeci">const IdTable&lt; HouseEventPtr &gt; &amp; house_events() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00095">model.h:95</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1BasicEvent_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1BasicEvent.xhtml">scram::mef::BasicEvent</a></div><div class="ttdoc">Representation of a basic event in a fault tree. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00075">event.h:75</a></div></div>
<div class="ttc" id="error_8h_xhtml"><div class="ttname"><a href="error_8h.xhtml">error.h</a></div><div class="ttdoc">Exceptions for SCRAM. </div></div>
<div class="ttc" id="classscram_1_1core_1_1RiskAnalysis_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1RiskAnalysis.xhtml">scram::core::RiskAnalysis</a></div><div class="ttdoc">Main system that performs analyses. </div><div class="ttdef"><b>Definition:</b> <a href="risk__analysis_8h_source.xhtml#l00043">risk_analysis.h:43</a></div></div>
<div class="ttc" id="element_8h_xhtml"><div class="ttname"><a href="element_8h.xhtml">element.h</a></div><div class="ttdoc">Helper classes, structs, and properties common to all other classes. </div></div>
<div class="ttc" id="classscram_1_1core_1_1ProductContainer_xhtml_ac48d179d37d1109d36bf2d36e02aebe7"><div class="ttname"><a href="classscram_1_1core_1_1ProductContainer.xhtml#ac48d179d37d1109d36bf2d36e02aebe7">scram::core::ProductContainer::empty</a></div><div class="ttdeci">bool empty() const </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree__analysis_8h_source.xhtml#l00158">fault_tree_analysis.h:158</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Id_xhtml_ad92eeb2ebe9c650e3c5ad90526f2d8f9"><div class="ttname"><a href="classscram_1_1mef_1_1Id.xhtml#ad92eeb2ebe9c650e3c5ad90526f2d8f9">scram::mef::Id::unique_name</a></div><div class="ttdeci">static const std::string &amp; unique_name(const Element &amp;element)</div><div class="ttdoc">Produces unique name for the model element within the same type. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00226">element.h:226</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1CcfGroup_xhtml_a06dd05cabcbeddf42090536f6a47a184"><div class="ttname"><a href="classscram_1_1mef_1_1CcfGroup.xhtml#a06dd05cabcbeddf42090536f6a47a184">scram::mef::CcfGroup::members</a></div><div class="ttdeci">const std::vector&lt; BasicEvent * &gt; &amp; members() const </div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8h_source.xhtml#l00093">ccf_group.h:93</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1RiskAnalysis_1_1Result_1_1Id_xhtml"><div class="ttname"><a href="structscram_1_1core_1_1RiskAnalysis_1_1Result_1_1Id.xhtml">scram::core::RiskAnalysis::Result::Id</a></div><div class="ttdoc">The analysis target type as a unique identifier. </div><div class="ttdef"><b>Definition:</b> <a href="risk__analysis_8h_source.xhtml#l00054">risk_analysis.h:54</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1ImportanceFactors_xhtml_a9b15309c0a69b54f80b8454129438f92"><div class="ttname"><a href="structscram_1_1core_1_1ImportanceFactors.xhtml#a9b15309c0a69b54f80b8454129438f92">scram::core::ImportanceFactors::occurrence</a></div><div class="ttdeci">int occurrence</div><div class="ttdoc">The number of products the variable is present in. </div><div class="ttdef"><b>Definition:</b> <a href="importance__analysis_8h_source.xhtml#l00038">importance_analysis.h:38</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1Sil_xhtml_a228170df249d366e83c572e88c00a7aa"><div class="ttname"><a href="structscram_1_1core_1_1Sil.xhtml#a228170df249d366e83c572e88c00a7aa">scram::core::Sil::pfh_fractions</a></div><div class="ttdeci">std::array&lt; std::pair&lt; const double, double &gt;, 6 &gt; pfh_fractions</div><div class="ttdoc">The SIL PFD and PFD fractions histogram in reverse order, i.e., 4 to 1. </div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8h_source.xhtml#l00051">probability_analysis.h:51</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1RiskAnalysis_1_1EtaResult_xhtml_acf1aabf44dd6676c3ff1f5ce48af6957"><div class="ttname"><a href="structscram_1_1core_1_1RiskAnalysis_1_1EtaResult.xhtml#acf1aabf44dd6676c3ff1f5ce48af6957">scram::core::RiskAnalysis::EtaResult::context</a></div><div class="ttdeci">std::optional&lt; Context &gt; context</div><div class="ttdoc">The alignment context. </div><div class="ttdef"><b>Definition:</b> <a href="risk__analysis_8h_source.xhtml#l00077">risk_analysis.h:77</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a698156baa445c530089d57601e19bb35"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a698156baa445c530089d57601e19bb35">scram::mef::Model::parameters</a></div><div class="ttdeci">const IdTable&lt; ParameterPtr &gt; &amp; parameters() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00092">model.h:92</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_ab67ee068ec7f783c7b3c573270cf4fdb"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#ab67ee068ec7f783c7b3c573270cf4fdb">scram::mef::Model::gates</a></div><div class="ttdeci">const IdTable&lt; GatePtr &gt; &amp; gates() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00097">model.h:97</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1RiskAnalysis_1_1EtaResult_xhtml_a2a4096d7aac930a19fbf458b6619a459"><div class="ttname"><a href="structscram_1_1core_1_1RiskAnalysis_1_1EtaResult.xhtml#a2a4096d7aac930a19fbf458b6619a459">scram::core::RiskAnalysis::EtaResult::event_tree_analysis</a></div><div class="ttdeci">std::unique_ptr&lt; const EventTreeAnalysis &gt; event_tree_analysis</div><div class="ttdoc">The holder of the analysis. </div><div class="ttdef"><b>Definition:</b> <a href="risk__analysis_8h_source.xhtml#l00079">risk_analysis.h:79</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1ImportanceAnalysis_xhtml_abb29c7fa7faf87cb8307588487cc4d75"><div class="ttname"><a href="classscram_1_1core_1_1ImportanceAnalysis.xhtml#abb29c7fa7faf87cb8307588487cc4d75">scram::core::ImportanceAnalysis::importance</a></div><div class="ttdeci">const std::vector&lt; ImportanceRecord &gt; &amp; importance() const </div><div class="ttdef"><b>Definition:</b> <a href="importance__analysis_8h_source.xhtml#l00075">importance_analysis.h:75</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a04f7628e1d3a27295d2ac7bbdc7ab26b"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a04f7628e1d3a27295d2ac7bbdc7ab26b">scram::mef::Model::initiating_events</a></div><div class="ttdeci">const ElementTable&lt; InitiatingEventPtr &gt; &amp; initiating_events() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00081">model.h:81</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1Sil_xhtml_ac3363b568b801041a429f7d69b214cea"><div class="ttname"><a href="structscram_1_1core_1_1Sil.xhtml#ac3363b568b801041a429f7d69b214cea">scram::core::Sil::pfh_avg</a></div><div class="ttdeci">double pfh_avg</div><div class="ttdoc">The average probability of failure hourly (PFH). </div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8h_source.xhtml#l00042">probability_analysis.h:42</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1ProbabilityAnalysis_xhtml_a93dffcc865268c92db5df98c5a3bed73"><div class="ttname"><a href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a93dffcc865268c92db5df98c5a3bed73">scram::core::ProbabilityAnalysis::sil</a></div><div class="ttdeci">const Sil &amp; sil() const </div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8h_source.xhtml#l00095">probability_analysis.h:95</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1RiskAnalysis_1_1Result_xhtml"><div class="ttname"><a href="structscram_1_1core_1_1RiskAnalysis_1_1Result.xhtml">scram::core::RiskAnalysis::Result</a></div><div class="ttdoc">The analysis results binding to the unique analysis target. </div><div class="ttdef"><b>Definition:</b> <a href="risk__analysis_8h_source.xhtml#l00052">risk_analysis.h:52</a></div></div>
<div class="ttc" id="logger_8h_xhtml"><div class="ttname"><a href="logger_8h.xhtml">logger.h</a></div><div class="ttdoc">Logging capability for various purposes, such as warnings and debugging. </div></div>
<div class="ttc" id="event__tree_8h_xhtml_a9fb29cbc2c3de675454fc41c493f1405"><div class="ttname"><a href="event__tree_8h.xhtml#a9fb29cbc2c3de675454fc41c493f1405">scram::mef::EventTreePtr</a></div><div class="ttdeci">std::unique_ptr&lt; EventTree &gt; EventTreePtr</div><div class="ttdoc">Unique trees in a model. </div><div class="ttdef"><b>Definition:</b> <a href="event__tree_8h_source.xhtml#l00211">event_tree.h:211</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1ProbabilityAnalysis_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml">scram::core::ProbabilityAnalysis</a></div><div class="ttdoc">Main quantitative analysis class. </div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8h_source.xhtml#l00057">probability_analysis.h:57</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1ProbabilityAnalysis_xhtml_a2298d982999f3cdf5b5d373f09af2cc3"><div class="ttname"><a href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a2298d982999f3cdf5b5d373f09af2cc3">scram::core::ProbabilityAnalysis::p_time</a></div><div class="ttdeci">const std::vector&lt; std::pair&lt; double, double &gt; &gt; &amp; p_time() const </div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8h_source.xhtml#l00088">probability_analysis.h:88</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1UncertaintyAnalysis_xhtml_aa8e1084309506bed6943dff274712b6b"><div class="ttname"><a href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml#aa8e1084309506bed6943dff274712b6b">scram::core::UncertaintyAnalysis::confidence_interval</a></div><div class="ttdeci">const std::pair&lt; double, double &gt; &amp; confidence_interval() const </div><div class="ttdef"><b>Definition:</b> <a href="uncertainty__analysis_8h_source.xhtml#l00066">uncertainty_analysis.h:66</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a742b8f5f989b633eeeeb192d2e793181"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a742b8f5f989b633eeeeb192d2e793181">scram::mef::Model::HasDefaultName</a></div><div class="ttdeci">bool HasDefaultName() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00059">model.h:59</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a079a335f4d28970ac3c548d5a28c558a"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a079a335f4d28970ac3c548d5a28c558a">scram::mef::Model::libraries</a></div><div class="ttdeci">const ElementTable&lt; std::unique_ptr&lt; ExternLibrary &gt; &gt; &amp; libraries() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00099">model.h:99</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1Literal_xhtml_a57f28025e4a697788da146a3eed5aa2f"><div class="ttname"><a href="structscram_1_1core_1_1Literal.xhtml#a57f28025e4a697788da146a3eed5aa2f">scram::core::Literal::event</a></div><div class="ttdeci">const mef::BasicEvent &amp; event</div><div class="ttdoc">The event in the product. </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree__analysis_8h_source.xhtml#l00050">fault_tree_analysis.h:50</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1EventTreeAnalysis_xhtml_a326dc3c6651fc036c86bebc3a2ba1a46"><div class="ttname"><a href="classscram_1_1core_1_1EventTreeAnalysis.xhtml#a326dc3c6651fc036c86bebc3a2ba1a46">scram::core::EventTreeAnalysis::sequences</a></div><div class="ttdeci">const std::vector&lt; Result &gt; &amp; sequences() const </div><div class="ttdef"><b>Definition:</b> <a href="event__tree__analysis_8h_source.xhtml#l00065">event_tree_analysis.h:65</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1ImportanceRecord_xhtml"><div class="ttname"><a href="structscram_1_1core_1_1ImportanceRecord.xhtml">scram::core::ImportanceRecord</a></div><div class="ttdoc">Mapping of an event and its importance. </div><div class="ttdef"><b>Definition:</b> <a href="importance__analysis_8h_source.xhtml#l00047">importance_analysis.h:47</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1FaultTreeAnalysis_xhtml_a2f72ce18bab118ab1949ae70f16d9203"><div class="ttname"><a href="classscram_1_1core_1_1FaultTreeAnalysis.xhtml#a2f72ce18bab118ab1949ae70f16d9203">scram::core::FaultTreeAnalysis::products</a></div><div class="ttdeci">const ProductContainer &amp; products() const </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree__analysis_8h_source.xhtml#l00246">fault_tree_analysis.h:246</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1ProbabilityAnalysis_xhtml_a1911b04166a0f1ee816410482f14fe9a"><div class="ttname"><a href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a1911b04166a0f1ee816410482f14fe9a">scram::core::ProbabilityAnalysis::p_total</a></div><div class="ttdeci">double p_total() const </div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8h_source.xhtml#l00082">probability_analysis.h:82</a></div></div>
<div class="ttc" id="classscram_1_1xml_1_1StreamElement_xhtml_a12256127d75537b64e53ccc1d7c0e07c"><div class="ttname"><a href="classscram_1_1xml_1_1StreamElement.xhtml#a12256127d75537b64e53ccc1d7c0e07c">scram::xml::StreamElement::AddChild</a></div><div class="ttdeci">StreamElement AddChild(const char *name)</div><div class="ttdoc">Adds a child element to the element. </div><div class="ttdef"><b>Definition:</b> <a href="xml__stream_8h_source.xhtml#l00287">xml_stream.h:287</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1Literal_xhtml_a8cc746f6ce760d42e552446050c2eb58"><div class="ttname"><a href="structscram_1_1core_1_1Literal.xhtml#a8cc746f6ce760d42e552446050c2eb58">scram::core::Literal::complement</a></div><div class="ttdeci">bool complement</div><div class="ttdoc">Indication of a complement event. </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree__analysis_8h_source.xhtml#l00049">fault_tree_analysis.h:49</a></div></div>
<div class="ttc" id="reporter_8h_xhtml"><div class="ttname"><a href="reporter_8h.xhtml">reporter.h</a></div><div class="ttdoc">Reporter of results. </div></div>
<div class="ttc" id="structscram_1_1core_1_1ImportanceFactors_xhtml_a71bd6627e21d040f51174727c7e6a0b6"><div class="ttname"><a href="structscram_1_1core_1_1ImportanceFactors.xhtml#a71bd6627e21d040f51174727c7e6a0b6">scram::core::ImportanceFactors::raw</a></div><div class="ttdeci">double raw</div><div class="ttdoc">Risk achievement worth factor. </div><div class="ttdef"><b>Definition:</b> <a href="importance__analysis_8h_source.xhtml#l00042">importance_analysis.h:42</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1ImportanceFactors_xhtml_a4d597a9bc0acaf0391768cbe5538d277"><div class="ttname"><a href="structscram_1_1core_1_1ImportanceFactors.xhtml#a4d597a9bc0acaf0391768cbe5538d277">scram::core::ImportanceFactors::cif</a></div><div class="ttdeci">double cif</div><div class="ttdoc">Critical importance factor. </div><div class="ttdef"><b>Definition:</b> <a href="importance__analysis_8h_source.xhtml#l00040">importance_analysis.h:40</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1ImportanceFactors_xhtml"><div class="ttname"><a href="structscram_1_1core_1_1ImportanceFactors.xhtml">scram::core::ImportanceFactors</a></div><div class="ttdoc">Collection of importance factors for variables. </div><div class="ttdef"><b>Definition:</b> <a href="importance__analysis_8h_source.xhtml#l00037">importance_analysis.h:37</a></div></div>
<div class="ttc" id="namespacescram_xhtml"><div class="ttname"><a href="namespacescram.xhtml">scram</a></div></div>
<div class="ttc" id="error_8h_xhtml_a766d8477fec3466ae1d75208fe0554e7"><div class="ttname"><a href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a></div><div class="ttdeci">#define SCRAM_THROW(err)</div><div class="ttdoc">Convenience macro to throw SCRAM exceptions. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00038">error.h:38</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml">scram::mef::Model</a></div><div class="ttdoc">This class represents a risk analysis model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00043">model.h:43</a></div></div>
<div class="ttc" id="classscram_1_1xml_1_1Stream_xhtml"><div class="ttname"><a href="classscram_1_1xml_1_1Stream.xhtml">scram::xml::Stream</a></div><div class="ttdoc">XML Stream document. </div><div class="ttdef"><b>Definition:</b> <a href="xml__stream_8h_source.xhtml#l00360">xml_stream.h:360</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Analysis_xhtml_ab04a96c555ba726368fa3868a8701610"><div class="ttname"><a href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">scram::core::Analysis::settings</a></div><div class="ttdeci">const Settings &amp; settings() const </div><div class="ttdef"><b>Definition:</b> <a href="analysis_8h_source.xhtml#l00042">analysis.h:42</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1UncertaintyAnalysis_xhtml_a059efd1d9540a5e11e11668cd4467145"><div class="ttname"><a href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml#a059efd1d9540a5e11e11668cd4467145">scram::core::UncertaintyAnalysis::mean</a></div><div class="ttdeci">double mean() const </div><div class="ttdef"><b>Definition:</b> <a href="uncertainty__analysis_8h_source.xhtml#l00057">uncertainty_analysis.h:57</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1UncertaintyAnalysis_xhtml_a94e6008ebcc6ae1f8c2d036837c8460d"><div class="ttname"><a href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml#a94e6008ebcc6ae1f8c2d036837c8460d">scram::core::UncertaintyAnalysis::sigma</a></div><div class="ttdeci">double sigma() const </div><div class="ttdef"><b>Definition:</b> <a href="uncertainty__analysis_8h_source.xhtml#l00060">uncertainty_analysis.h:60</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1ImportanceAnalysis_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1ImportanceAnalysis.xhtml">scram::core::ImportanceAnalysis</a></div><div class="ttdoc">Analysis of importance factors of risk model variables. </div><div class="ttdef"><b>Definition:</b> <a href="importance__analysis_8h_source.xhtml#l00055">importance_analysis.h:55</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a52198e362df1827d583eceed7306eb6f"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a52198e362df1827d583eceed7306eb6f">scram::mef::Model::rules</a></div><div class="ttdeci">const ElementTable&lt; RulePtr &gt; &amp; rules() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00086">model.h:86</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Settings_xhtml_a83ddd939f7217fb9f0438bd1dd01f7b1"><div class="ttname"><a href="classscram_1_1core_1_1Settings.xhtml#a83ddd939f7217fb9f0438bd1dd01f7b1">scram::core::Settings::probability_analysis</a></div><div class="ttdeci">bool probability_analysis() const </div><div class="ttdef"><b>Definition:</b> <a href="settings_8h_source.xhtml#l00211">settings.h:211</a></div></div>
<div class="ttc" id="classscram_1_1Reporter_xhtml_a87eeccfed9678b035c745b6ed1610dbf"><div class="ttname"><a href="classscram_1_1Reporter.xhtml#a87eeccfed9678b035c745b6ed1610dbf">scram::Reporter::Report</a></div><div class="ttdeci">void Report(const core::RiskAnalysis &amp;risk_an, std::FILE *out, bool indent=true)</div><div class="ttdoc">Reports the results of risk analysis on a model. </div><div class="ttdef"><b>Definition:</b> <a href="reporter_8cc_source.xhtml#l00071">reporter.cc:71</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Gate_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Gate.xhtml">scram::mef::Gate</a></div><div class="ttdoc">A representation of a gate in a fault tree. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00161">event.h:161</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1ProductContainer_xhtml_a4f01887850f3bf444d3e1c9ec5780b69"><div class="ttname"><a href="classscram_1_1core_1_1ProductContainer.xhtml#a4f01887850f3bf444d3e1c9ec5780b69">scram::core::ProductContainer::product_events</a></div><div class="ttdeci">const std::unordered_set&lt; const mef::BasicEvent * &gt; &amp; product_events() const </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree__analysis_8h_source.xhtml#l00141">fault_tree_analysis.h:141</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1EventTreeAnalysis_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1EventTreeAnalysis.xhtml">scram::core::EventTreeAnalysis</a></div><div class="ttdoc">Event tree analysis functionality. </div><div class="ttdef"><b>Definition:</b> <a href="event__tree__analysis_8h_source.xhtml#l00037">event_tree_analysis.h:37</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1ImportanceFactors_xhtml_a324bda1cd8f936f74b0cb90c742293d5"><div class="ttname"><a href="structscram_1_1core_1_1ImportanceFactors.xhtml#a324bda1cd8f936f74b0cb90c742293d5">scram::core::ImportanceFactors::dif</a></div><div class="ttdeci">double dif</div><div class="ttdoc">Fussel-Vesely diagnosis importance factor. </div><div class="ttdef"><b>Definition:</b> <a href="importance__analysis_8h_source.xhtml#l00041">importance_analysis.h:41</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1ImportanceFactors_xhtml_acd377958b0cbb3e58c3ffd6c3eaeaa23"><div class="ttname"><a href="structscram_1_1core_1_1ImportanceFactors.xhtml#acd377958b0cbb3e58c3ffd6c3eaeaa23">scram::core::ImportanceFactors::mif</a></div><div class="ttdeci">double mif</div><div class="ttdoc">Birnbaum marginal importance factor. </div><div class="ttdef"><b>Definition:</b> <a href="importance__analysis_8h_source.xhtml#l00039">importance_analysis.h:39</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_afbb8bfee9de066a3341d34ef5ce885e4"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#afbb8bfee9de066a3341d34ef5ce885e4">scram::mef::Model::sequences</a></div><div class="ttdeci">const ElementTable&lt; SequencePtr &gt; &amp; sequences() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00085">model.h:85</a></div></div>
<div class="ttc" id="classscram_1_1xml_1_1StreamElement_xhtml"><div class="ttname"><a href="classscram_1_1xml_1_1StreamElement.xhtml">scram::xml::StreamElement</a></div><div class="ttdoc">Writer of data formed as an XML element to a stream. </div><div class="ttdef"><b>Definition:</b> <a href="xml__stream_8h_source.xhtml#l00186">xml_stream.h:186</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1UncertaintyAnalysis_xhtml_a2601be0faf3e696d96e7d5fef3ff6fdc"><div class="ttname"><a href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml#a2601be0faf3e696d96e7d5fef3ff6fdc">scram::core::UncertaintyAnalysis::error_factor</a></div><div class="ttdeci">double error_factor() const </div><div class="ttdef"><b>Definition:</b> <a href="uncertainty__analysis_8h_source.xhtml#l00063">uncertainty_analysis.h:63</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1EventTreeAnalysis_1_1Result_xhtml"><div class="ttname"><a href="structscram_1_1core_1_1EventTreeAnalysis_1_1Result.xhtml">scram::core::EventTreeAnalysis::Result</a></div><div class="ttdoc">The analysis results binding to the unique analysis target. </div><div class="ttdef"><b>Definition:</b> <a href="event__tree__analysis_8h_source.xhtml#l00040">event_tree_analysis.h:40</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml_adb401e2ca84aa98cb60797bec2500a81"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">scram::mef::Element::name</a></div><div class="ttdeci">const std::string &amp; name() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00060">element.h:60</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Settings_xhtml_a694757a6ab5effaea2d585905950d6bd"><div class="ttname"><a href="classscram_1_1core_1_1Settings.xhtml#a694757a6ab5effaea2d585905950d6bd">scram::core::Settings::safety_integrity_levels</a></div><div class="ttdeci">bool safety_integrity_levels() const </div><div class="ttdef"><b>Definition:</b> <a href="settings_8h_source.xhtml#l00230">settings.h:230</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1CcfEvent_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1CcfEvent.xhtml">scram::mef::CcfEvent</a></div><div class="ttdoc">A basic event that represents a multiple failure of a group of events due to a common cause...</div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8h_source.xhtml#l00046">ccf_group.h:46</a></div></div>
<div class="ttc" id="logger_8h_xhtml_a8cc0e8b39d76d12fd165097dbc8cf81ea064d45d966cf5368bd8a5e317e65a0e6"><div class="ttname"><a href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea064d45d966cf5368bd8a5e317e65a0e6">scram::DEBUG2</a></div><div class="ttdoc">Debugging information for the code inside of DEBUG1. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00079">logger.h:79</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Settings_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1Settings.xhtml">scram::core::Settings</a></div><div class="ttdoc">Builder for analysis settings. </div><div class="ttdef"><b>Definition:</b> <a href="settings_8h_source.xhtml#l00049">settings.h:49</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1EventTreeAnalysis_xhtml_a091921b091dc2557541aeafbbf93a2d3"><div class="ttname"><a href="classscram_1_1core_1_1EventTreeAnalysis.xhtml#a091921b091dc2557541aeafbbf93a2d3">scram::core::EventTreeAnalysis::initiating_event</a></div><div class="ttdeci">const mef::InitiatingEvent &amp; initiating_event() const </div><div class="ttdef"><b>Definition:</b> <a href="event__tree__analysis_8h_source.xhtml#l00059">event_tree_analysis.h:59</a></div></div>
<div class="ttc" id="classscram_1_1xml_1_1StreamElement_xhtml_a7e3c09c8d2041452e04f31dd332b65a6"><div class="ttname"><a href="classscram_1_1xml_1_1StreamElement.xhtml#a7e3c09c8d2041452e04f31dd332b65a6">scram::xml::StreamElement::AddText</a></div><div class="ttdeci">void AddText(T &amp;&amp;text)</div><div class="ttdoc">Adds text to the element. </div><div class="ttdef"><b>Definition:</b> <a href="xml__stream_8h_source.xhtml#l00260">xml_stream.h:260</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_ada7804d62fc594bff7b080c680586209"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#ada7804d62fc594bff7b080c680586209">scram::mef::Model::basic_events</a></div><div class="ttdeci">const IdTable&lt; BasicEventPtr &gt; &amp; basic_events() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00096">model.h:96</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Analysis_xhtml_aaf2ae2ef3673c9d8006ec08f1cecb4d1"><div class="ttname"><a href="classscram_1_1core_1_1Analysis.xhtml#aaf2ae2ef3673c9d8006ec08f1cecb4d1">scram::core::Analysis::warnings</a></div><div class="ttdeci">const std::string &amp; warnings() const </div><div class="ttdef"><b>Definition:</b> <a href="analysis_8h_source.xhtml#l00045">analysis.h:45</a></div></div>
<div class="ttc" id="ccf__group_8h_xhtml"><div class="ttname"><a href="ccf__group_8h.xhtml">ccf_group.h</a></div><div class="ttdoc">Functional containers for basic events grouped by common cause failure. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a9bac9a7746026484f3dc69a3ccb2ac4a"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a9bac9a7746026484f3dc69a3ccb2ac4a">scram::mef::Model::fault_trees</a></div><div class="ttdeci">const ElementTable&lt; FaultTreePtr &gt; &amp; fault_trees() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00087">model.h:87</a></div></div>
<div class="ttc" id="version_8h_xhtml"><div class="ttname"><a href="version_8h.xhtml">version.h</a></div><div class="ttdoc">Set of functions with version information of the core and dependencies. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a440e609f51239a98f3c2d5256522dce7"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a440e609f51239a98f3c2d5256522dce7">scram::mef::Model::extern_functions</a></div><div class="ttdeci">const ElementTable&lt; ExternFunctionPtr &gt; &amp; extern_functions() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00102">model.h:102</a></div></div>
<div class="ttc" id="parameter_8h_xhtml"><div class="ttname"><a href="parameter_8h.xhtml">parameter.h</a></div><div class="ttdoc">Parameter expressions that act like a shareable variable. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a5c8b03561207b374fc06dd61c0cf3ace"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a5c8b03561207b374fc06dd61c0cf3ace">scram::mef::Model::ccf_groups</a></div><div class="ttdeci">const IdTable&lt; CcfGroupPtr &gt; &amp; ccf_groups() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00098">model.h:98</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1UncertaintyAnalysis_xhtml_a66a3d3404062e5fa1f27ba11c6d26a60"><div class="ttname"><a href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml#a66a3d3404062e5fa1f27ba11c6d26a60">scram::core::UncertaintyAnalysis::distribution</a></div><div class="ttdeci">const std::vector&lt; std::pair&lt; double, double &gt; &gt; &amp; distribution() const </div><div class="ttdef"><b>Definition:</b> <a href="uncertainty__analysis_8h_source.xhtml#l00071">uncertainty_analysis.h:71</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1UncertaintyAnalysis_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml">scram::core::UncertaintyAnalysis</a></div><div class="ttdoc">Uncertainty analysis and statistics for top event or gate probabilities with probability distribution...</div><div class="ttdef"><b>Definition:</b> <a href="uncertainty__analysis_8h_source.xhtml#l00040">uncertainty_analysis.h:40</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1RiskAnalysis_1_1EtaResult_xhtml"><div class="ttname"><a href="structscram_1_1core_1_1RiskAnalysis_1_1EtaResult.xhtml">scram::core::RiskAnalysis::EtaResult</a></div><div class="ttdoc">The analysis results grouped by an event-tree. </div><div class="ttdef"><b>Definition:</b> <a href="risk__analysis_8h_source.xhtml#l00075">risk_analysis.h:75</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1RiskAnalysis_xhtml_a337f7e9fe02b1581e872590d6f7baa01"><div class="ttname"><a href="classscram_1_1core_1_1RiskAnalysis.xhtml#a337f7e9fe02b1581e872590d6f7baa01">scram::core::RiskAnalysis::model</a></div><div class="ttdeci">const mef::Model &amp; model() const </div><div class="ttdef"><b>Definition:</b> <a href="risk__analysis_8h_source.xhtml#l00093">risk_analysis.h:93</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1RiskAnalysis_xhtml_a179feb51377899f5108fb2c8b13a18c5"><div class="ttname"><a href="classscram_1_1core_1_1RiskAnalysis.xhtml#a179feb51377899f5108fb2c8b13a18c5">scram::core::RiskAnalysis::event_tree_results</a></div><div class="ttdeci">const std::vector&lt; EtaResult &gt; &amp; event_tree_results() const </div><div class="ttdef"><b>Definition:</b> <a href="risk__analysis_8h_source.xhtml#l00109">risk_analysis.h:109</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1Sil_xhtml_a4ae38f79c20c009e70467b7c3e7cbab9"><div class="ttname"><a href="structscram_1_1core_1_1Sil.xhtml#a4ae38f79c20c009e70467b7c3e7cbab9">scram::core::Sil::pfd_avg</a></div><div class="ttdeci">double pfd_avg</div><div class="ttdoc">The average probability of failure on demand (PFD). </div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8h_source.xhtml#l00041">probability_analysis.h:41</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1UncertaintyAnalysis_xhtml_aeceb1ed0c937ff3972174dbcee0386d4"><div class="ttname"><a href="classscram_1_1core_1_1UncertaintyAnalysis.xhtml#aeceb1ed0c937ff3972174dbcee0386d4">scram::core::UncertaintyAnalysis::quantiles</a></div><div class="ttdeci">const std::vector&lt; double &gt; &amp; quantiles() const </div><div class="ttdef"><b>Definition:</b> <a href="uncertainty__analysis_8h_source.xhtml#l00076">uncertainty_analysis.h:76</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1FaultTreeAnalysis_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1FaultTreeAnalysis.xhtml">scram::core::FaultTreeAnalysis</a></div><div class="ttdoc">Fault tree analysis functionality. </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree__analysis_8h_source.xhtml#l00203">fault_tree_analysis.h:203</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1ImportanceFactors_xhtml_add0028639d89e2e6b0dd794446fc162a"><div class="ttname"><a href="structscram_1_1core_1_1ImportanceFactors.xhtml#add0028639d89e2e6b0dd794446fc162a">scram::core::ImportanceFactors::rrw</a></div><div class="ttdeci">double rrw</div><div class="ttdoc">Risk reduction worth factor. </div><div class="ttdef"><b>Definition:</b> <a href="importance__analysis_8h_source.xhtml#l00043">importance_analysis.h:43</a></div></div>
<div class="ttc" id="classscram_1_1xml_1_1Stream_xhtml_aef4e5bae1f92709e708c515a255fb5e4"><div class="ttname"><a href="classscram_1_1xml_1_1Stream.xhtml#aef4e5bae1f92709e708c515a255fb5e4">scram::xml::Stream::root</a></div><div class="ttdeci">StreamElement root(const char *name)</div><div class="ttdoc">Creates a root element for the document. </div><div class="ttdef"><b>Definition:</b> <a href="xml__stream_8h_source.xhtml#l00396">xml_stream.h:396</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1CcfGroup_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1CcfGroup.xhtml">scram::mef::CcfGroup</a></div><div class="ttdoc">Abstract base class for all common cause failure models. </div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8h_source.xhtml#l00086">ccf_group.h:86</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1Sil_xhtml_a97f774269a891daf5e7667896cdb3dfb"><div class="ttname"><a href="structscram_1_1core_1_1Sil.xhtml#a97f774269a891daf5e7667896cdb3dfb">scram::core::Sil::pfd_fractions</a></div><div class="ttdeci">std::array&lt; std::pair&lt; const double, double &gt;, 6 &gt; pfd_fractions</div><div class="ttdoc">The SIL PFD and PFD fractions histogram in reverse order, i.e., 4 to 1. </div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8h_source.xhtml#l00049">probability_analysis.h:49</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1ProductContainer_xhtml_ac02fbe13144218abf07fdd6ba9c8b532"><div class="ttname"><a href="classscram_1_1core_1_1ProductContainer.xhtml#ac02fbe13144218abf07fdd6ba9c8b532">scram::core::ProductContainer::size</a></div><div class="ttdeci">int size() const </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree__analysis_8h_source.xhtml#l00161">fault_tree_analysis.h:161</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:37 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
