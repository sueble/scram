<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>scram::core::CustomPreprocessor&lt; Bdd &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>scram</b></li><li class="navelem"><b>core</b></li><li class="navelem"><a class="el" href="classscram_1_1core_1_1CustomPreprocessor_3_01Bdd_01_4.xhtml">CustomPreprocessor&lt; Bdd &gt;</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classscram_1_1core_1_1CustomPreprocessor_3_01Bdd_01_4-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">scram::core::CustomPreprocessor&lt; Bdd &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Specialization of preprocessing for BDD based analyses.  
 <a href="classscram_1_1core_1_1CustomPreprocessor_3_01Bdd_01_4.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="preprocessor_8h_source.xhtml">preprocessor.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for scram::core::CustomPreprocessor&lt; Bdd &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1CustomPreprocessor_3_01Bdd_01_4__inherit__graph.svg" width="252" height="544"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_methods_classscram_1_1core_1_1Preprocessor"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classscram_1_1core_1_1Preprocessor')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml">scram::core::Preprocessor</a></td></tr>
<tr class="memitem:a41db9fe9261126a080c87113223eaf18 inherit pub_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a41db9fe9261126a080c87113223eaf18">Preprocessor</a> (<a class="el" href="classscram_1_1core_1_1Pdag.xhtml">Pdag</a> *graph) noexcept</td></tr>
<tr class="memdesc:a41db9fe9261126a080c87113223eaf18 inherit pub_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs a preprocessor of a PDAG representing a fault tree.  <a href="#a41db9fe9261126a080c87113223eaf18">More...</a><br /></td></tr>
<tr class="separator:a41db9fe9261126a080c87113223eaf18 inherit pub_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ee92284aef510ce01a71c962d50f51c inherit pub_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5ee92284aef510ce01a71c962d50f51c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a5ee92284aef510ce01a71c962d50f51c">operator()</a> () noexcept</td></tr>
<tr class="memdesc:a5ee92284aef510ce01a71c962d50f51c inherit pub_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Runs the graph preprocessing. <br /></td></tr>
<tr class="separator:a5ee92284aef510ce01a71c962d50f51c inherit pub_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classscram_1_1core_1_1Preprocessor"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classscram_1_1core_1_1Preprocessor')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml">scram::core::Preprocessor</a></td></tr>
<tr class="memitem:a44f820b6fe2c23594c818432b33e26a6 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a44f820b6fe2c23594c818432b33e26a6">RunPhaseOne</a> () noexcept</td></tr>
<tr class="memdesc:a44f820b6fe2c23594c818432b33e26a6 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">The initial phase of preprocessing.  <a href="#a44f820b6fe2c23594c818432b33e26a6">More...</a><br /></td></tr>
<tr class="separator:a44f820b6fe2c23594c818432b33e26a6 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d5f89471499508eb9e6c01ea43e0f15 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a9d5f89471499508eb9e6c01ea43e0f15">RunPhaseTwo</a> () noexcept</td></tr>
<tr class="memdesc:a9d5f89471499508eb9e6c01ea43e0f15 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Preprocessing phase of the original structure of the graph.  <a href="#a9d5f89471499508eb9e6c01ea43e0f15">More...</a><br /></td></tr>
<tr class="separator:a9d5f89471499508eb9e6c01ea43e0f15 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf2c66723172a85b2ae87ef2a034cd1f inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#abf2c66723172a85b2ae87ef2a034cd1f">RunPhaseThree</a> () noexcept</td></tr>
<tr class="memdesc:abf2c66723172a85b2ae87ef2a034cd1f inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Application of gate normalization.  <a href="#abf2c66723172a85b2ae87ef2a034cd1f">More...</a><br /></td></tr>
<tr class="separator:abf2c66723172a85b2ae87ef2a034cd1f inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c224938dfba861f061525658bd7b156 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a5c224938dfba861f061525658bd7b156">RunPhaseFour</a> () noexcept</td></tr>
<tr class="memdesc:a5c224938dfba861f061525658bd7b156 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Propagation of complements.  <a href="#a5c224938dfba861f061525658bd7b156">More...</a><br /></td></tr>
<tr class="separator:a5c224938dfba861f061525658bd7b156 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3569bbcd5e863c750cdfa69115399600 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a3569bbcd5e863c750cdfa69115399600">RunPhaseFive</a> () noexcept</td></tr>
<tr class="memdesc:a3569bbcd5e863c750cdfa69115399600 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">The final phase that cleans up the graph, and puts the structure of the graph ready for analysis.  <a href="#a3569bbcd5e863c750cdfa69115399600">More...</a><br /></td></tr>
<tr class="separator:a3569bbcd5e863c750cdfa69115399600 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad13e133278ea7563c1ba037c05c35aa2 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#ad13e133278ea7563c1ba037c05c35aa2">NormalizeGates</a> (bool full) noexcept</td></tr>
<tr class="memdesc:ad13e133278ea7563c1ba037c05c35aa2 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normalizes the gates of the whole PDAG into OR, AND gates.  <a href="#ad13e133278ea7563c1ba037c05c35aa2">More...</a><br /></td></tr>
<tr class="separator:ad13e133278ea7563c1ba037c05c35aa2 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ee8f65454835d8de931a2d38bf8b276 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a6ee8f65454835d8de931a2d38bf8b276">NotifyParentsOfNegativeGates</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate) noexcept</td></tr>
<tr class="memdesc:a6ee8f65454835d8de931a2d38bf8b276 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Notifies all parents of negative gates, such as NOT, NOR, and NAND, before transforming these gates into basic gates of OR and AND.  <a href="#a6ee8f65454835d8de931a2d38bf8b276">More...</a><br /></td></tr>
<tr class="separator:a6ee8f65454835d8de931a2d38bf8b276 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfe2eda90c983750e28db49900a4909d inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#abfe2eda90c983750e28db49900a4909d">NormalizeGate</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate, bool full) noexcept</td></tr>
<tr class="memdesc:abfe2eda90c983750e28db49900a4909d inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normalizes complex gates into OR, AND gates.  <a href="#abfe2eda90c983750e28db49900a4909d">More...</a><br /></td></tr>
<tr class="separator:abfe2eda90c983750e28db49900a4909d inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45cf08c3809e801be50eda53dd68fca6 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a45cf08c3809e801be50eda53dd68fca6">NormalizeXorGate</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate) noexcept</td></tr>
<tr class="memdesc:a45cf08c3809e801be50eda53dd68fca6 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normalizes a gate with XOR logic.  <a href="#a45cf08c3809e801be50eda53dd68fca6">More...</a><br /></td></tr>
<tr class="separator:a45cf08c3809e801be50eda53dd68fca6 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56b5719bcfcfd1678928befe31d9b729 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a56b5719bcfcfd1678928befe31d9b729">NormalizeVoteGate</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate) noexcept</td></tr>
<tr class="memdesc:a56b5719bcfcfd1678928befe31d9b729 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normalizes a VOTE gate with a vote number.  <a href="#a56b5719bcfcfd1678928befe31d9b729">More...</a><br /></td></tr>
<tr class="separator:a56b5719bcfcfd1678928befe31d9b729 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff25812178063fd0f9bfd9a87cebb5af inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#aff25812178063fd0f9bfd9a87cebb5af">PropagateComplements</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate, bool keep_modules, std::unordered_map&lt; int, <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &gt; *complements) noexcept</td></tr>
<tr class="memdesc:aff25812178063fd0f9bfd9a87cebb5af inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Propagates complements of argument gates down to leafs according to the De Morgan's law in order to remove any negative logic from the graph's gates.  <a href="#aff25812178063fd0f9bfd9a87cebb5af">More...</a><br /></td></tr>
<tr class="separator:aff25812178063fd0f9bfd9a87cebb5af inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00288bef180767d7c79e3c79a33ef2d8 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a00288bef180767d7c79e3c79a33ef2d8">CoalesceGates</a> (bool common) noexcept</td></tr>
<tr class="memdesc:a00288bef180767d7c79e3c79a33ef2d8 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Runs gate coalescence on the whole PDAG.  <a href="#a00288bef180767d7c79e3c79a33ef2d8">More...</a><br /></td></tr>
<tr class="separator:a00288bef180767d7c79e3c79a33ef2d8 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a0500bd52152df42fca486c97043140 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a3a0500bd52152df42fca486c97043140">CoalesceGates</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate, bool common) noexcept</td></tr>
<tr class="memdesc:a3a0500bd52152df42fca486c97043140 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Coalesces positive argument gates with the same OR or AND logic as parents.  <a href="#a3a0500bd52152df42fca486c97043140">More...</a><br /></td></tr>
<tr class="separator:a3a0500bd52152df42fca486c97043140 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0abd7f5b54f98643644110b160569bd inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#ac0abd7f5b54f98643644110b160569bd">ProcessMultipleDefinitions</a> () noexcept</td></tr>
<tr class="memdesc:ac0abd7f5b54f98643644110b160569bd inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detects and replaces multiple definitions of gates.  <a href="#ac0abd7f5b54f98643644110b160569bd">More...</a><br /></td></tr>
<tr class="separator:ac0abd7f5b54f98643644110b160569bd inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0bdf196274427420631bc20f95cb72a inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#ae0bdf196274427420631bc20f95cb72a">DetectMultipleDefinitions</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate, std::unordered_map&lt; <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a>, std::vector&lt; <a class="el" href="pdag_8h.xhtml#a2dd45b6c16940b9b60e4bc5b13ae6d6b">GateWeakPtr</a> &gt;&gt; *multi_def, <a class="el" href="classscram_1_1core_1_1Preprocessor_1_1GateSet.xhtml">GateSet</a> *unique_gates) noexcept</td></tr>
<tr class="memdesc:ae0bdf196274427420631bc20f95cb72a inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Traverses the PDAG to collect multiple definitions of gates.  <a href="#ae0bdf196274427420631bc20f95cb72a">More...</a><br /></td></tr>
<tr class="separator:ae0bdf196274427420631bc20f95cb72a inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9856913eee7b854abfbe8d8330566d3 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#aa9856913eee7b854abfbe8d8330566d3">DetectModules</a> () noexcept</td></tr>
<tr class="memdesc:aa9856913eee7b854abfbe8d8330566d3 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Traverses the PDAG to detect modules.  <a href="#aa9856913eee7b854abfbe8d8330566d3">More...</a><br /></td></tr>
<tr class="separator:aa9856913eee7b854abfbe8d8330566d3 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac83a0afe1f22761907f2a017abd96268 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#ac83a0afe1f22761907f2a017abd96268">AssignTiming</a> (int time, const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate) noexcept</td></tr>
<tr class="memdesc:ac83a0afe1f22761907f2a017abd96268 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Traverses the given gate and assigns time of visit to nodes.  <a href="#ac83a0afe1f22761907f2a017abd96268">More...</a><br /></td></tr>
<tr class="separator:ac83a0afe1f22761907f2a017abd96268 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbce0b5c45a445c3b70ae298b9518281 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#afbce0b5c45a445c3b70ae298b9518281">FindModules</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate) noexcept</td></tr>
<tr class="memdesc:afbce0b5c45a445c3b70ae298b9518281 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determines modules from original gates that have been already timed.  <a href="#afbce0b5c45a445c3b70ae298b9518281">More...</a><br /></td></tr>
<tr class="separator:afbce0b5c45a445c3b70ae298b9518281 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e97ffcda9c98ffc5aff93214f827c18 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a4e97ffcda9c98ffc5aff93214f827c18">ProcessModularArgs</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate, const std::vector&lt; std::pair&lt; int, <a class="el" href="pdag_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &gt;&gt; &amp;non_shared_args, std::vector&lt; std::pair&lt; int, <a class="el" href="pdag_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &gt;&gt; *modular_args, std::vector&lt; std::pair&lt; int, <a class="el" href="pdag_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &gt;&gt; *non_modular_args) noexcept</td></tr>
<tr class="memdesc:a4e97ffcda9c98ffc5aff93214f827c18 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processes gate arguments found during the module detection.  <a href="#a4e97ffcda9c98ffc5aff93214f827c18">More...</a><br /></td></tr>
<tr class="separator:a4e97ffcda9c98ffc5aff93214f827c18 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a434534b6a7c3fccc82c073e6aced90b1 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top"><a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a434534b6a7c3fccc82c073e6aced90b1">CreateNewModule</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate, const std::vector&lt; std::pair&lt; int, <a class="el" href="pdag_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &gt;&gt; &amp;args) noexcept</td></tr>
<tr class="memdesc:a434534b6a7c3fccc82c073e6aced90b1 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new module as an argument of an existing gate if the logic of the existing parent gate allows a sub-module.  <a href="#a434534b6a7c3fccc82c073e6aced90b1">More...</a><br /></td></tr>
<tr class="separator:a434534b6a7c3fccc82c073e6aced90b1 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa65bdffb78291a0e41a34d34bf3fa198 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#aa65bdffb78291a0e41a34d34bf3fa198">FilterModularArgs</a> (std::vector&lt; std::pair&lt; int, <a class="el" href="pdag_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &gt;&gt; *modular_args, std::vector&lt; std::pair&lt; int, <a class="el" href="pdag_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &gt;&gt; *non_modular_args) noexcept</td></tr>
<tr class="memdesc:aa65bdffb78291a0e41a34d34bf3fa198 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if a group of modular arguments share anything with non-modular arguments.  <a href="#aa65bdffb78291a0e41a34d34bf3fa198">More...</a><br /></td></tr>
<tr class="separator:aa65bdffb78291a0e41a34d34bf3fa198 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c10e807e558b06a1573c08ed13e205e inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a5c10e807e558b06a1573c08ed13e205e">GroupModularArgs</a> (std::vector&lt; std::pair&lt; int, <a class="el" href="pdag_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &gt;&gt; *modular_args, std::vector&lt; std::vector&lt; std::pair&lt; int, <a class="el" href="pdag_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &gt;&gt;&gt; *groups) noexcept</td></tr>
<tr class="memdesc:a5c10e807e558b06a1573c08ed13e205e inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Groups modular arguments by their common elements.  <a href="#a5c10e807e558b06a1573c08ed13e205e">More...</a><br /></td></tr>
<tr class="separator:a5c10e807e558b06a1573c08ed13e205e inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affe78b1e830afb73585affe0ada477be inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#affe78b1e830afb73585affe0ada477be">CreateNewModules</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate, const std::vector&lt; std::pair&lt; int, <a class="el" href="pdag_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &gt;&gt; &amp;modular_args, const std::vector&lt; std::vector&lt; std::pair&lt; int, <a class="el" href="pdag_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &gt;&gt;&gt; &amp;groups) noexcept</td></tr>
<tr class="memdesc:affe78b1e830afb73585affe0ada477be inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates new module gates from groups of modular arguments if the logic of the parent gate allows sub-modules.  <a href="#affe78b1e830afb73585affe0ada477be">More...</a><br /></td></tr>
<tr class="separator:affe78b1e830afb73585affe0ada477be inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4dae5abf76e5da8b8c9f4371550b7dc inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="pdag_8h.xhtml#a2dd45b6c16940b9b60e4bc5b13ae6d6b">GateWeakPtr</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#af4dae5abf76e5da8b8c9f4371550b7dc">GatherModules</a> () noexcept</td></tr>
<tr class="memdesc:af4dae5abf76e5da8b8c9f4371550b7dc inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gathers all modules in the PDAG.  <a href="#af4dae5abf76e5da8b8c9f4371550b7dc">More...</a><br /></td></tr>
<tr class="separator:af4dae5abf76e5da8b8c9f4371550b7dc inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab97a52e27ad8bf7ed049ae1a764f8fba inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#ab97a52e27ad8bf7ed049ae1a764f8fba">MergeCommonArgs</a> () noexcept</td></tr>
<tr class="memdesc:ab97a52e27ad8bf7ed049ae1a764f8fba inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identifies common arguments of gates, and merges the common arguments into new gates.  <a href="#ab97a52e27ad8bf7ed049ae1a764f8fba">More...</a><br /></td></tr>
<tr class="separator:ab97a52e27ad8bf7ed049ae1a764f8fba inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a651b32816243e37c58b7835220997ef2 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a651b32816243e37c58b7835220997ef2">MergeCommonArgs</a> (<a class="el" href="pdag_8h.xhtml#ad4c053147ae98b76f12620441f6d3800">Operator</a> <a class="el" href="pdag_8cc.xhtml#aefe4bda6c02d8395380962ebe1497fc8">op</a>) noexcept</td></tr>
<tr class="memdesc:a651b32816243e37c58b7835220997ef2 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Merges common arguments for a specific group of gates.  <a href="#a651b32816243e37c58b7835220997ef2">More...</a><br /></td></tr>
<tr class="separator:a651b32816243e37c58b7835220997ef2 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13778626bd9ce007e01b7bbd8d11e850 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a13778626bd9ce007e01b7bbd8d11e850">MarkCommonArgs</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate, <a class="el" href="pdag_8h.xhtml#ad4c053147ae98b76f12620441f6d3800">Operator</a> <a class="el" href="pdag_8cc.xhtml#aefe4bda6c02d8395380962ebe1497fc8">op</a>) noexcept</td></tr>
<tr class="memdesc:a13778626bd9ce007e01b7bbd8d11e850 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Marks common arguments of gates with a specific operator.  <a href="#a13778626bd9ce007e01b7bbd8d11e850">More...</a><br /></td></tr>
<tr class="separator:a13778626bd9ce007e01b7bbd8d11e850 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef197badfb47bb3c604fd93d6260e635 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#aef197badfb47bb3c604fd93d6260e635">GatherCommonArgs</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate, <a class="el" href="pdag_8h.xhtml#ad4c053147ae98b76f12620441f6d3800">Operator</a> <a class="el" href="pdag_8cc.xhtml#aefe4bda6c02d8395380962ebe1497fc8">op</a>, <a class="el" href="structscram_1_1core_1_1Preprocessor_1_1MergeTable.xhtml#a6179811cc1a2d65448aaacf5e65e038b">MergeTable::Candidates</a> *group) noexcept</td></tr>
<tr class="memdesc:aef197badfb47bb3c604fd93d6260e635 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gathers common arguments of the gates in the group of a specific operator.  <a href="#aef197badfb47bb3c604fd93d6260e635">More...</a><br /></td></tr>
<tr class="separator:aef197badfb47bb3c604fd93d6260e635 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba011f495cdec8449a315c17fe67a8c0 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#aba011f495cdec8449a315c17fe67a8c0">FilterMergeCandidates</a> (<a class="el" href="structscram_1_1core_1_1Preprocessor_1_1MergeTable.xhtml#a6179811cc1a2d65448aaacf5e65e038b">MergeTable::Candidates</a> *candidates) noexcept</td></tr>
<tr class="memdesc:aba011f495cdec8449a315c17fe67a8c0 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Filters merge candidates and their shared arguments to detect opportunities for simplifications like gate substitutions.  <a href="#aba011f495cdec8449a315c17fe67a8c0">More...</a><br /></td></tr>
<tr class="separator:aba011f495cdec8449a315c17fe67a8c0 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adabd895d60a8ee0950f75da9a98fa155 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#adabd895d60a8ee0950f75da9a98fa155">GroupCandidatesByArgs</a> (<a class="el" href="structscram_1_1core_1_1Preprocessor_1_1MergeTable.xhtml#a6179811cc1a2d65448aaacf5e65e038b">MergeTable::Candidates</a> *candidates, std::vector&lt; <a class="el" href="structscram_1_1core_1_1Preprocessor_1_1MergeTable.xhtml#a6179811cc1a2d65448aaacf5e65e038b">MergeTable::Candidates</a> &gt; *groups) noexcept</td></tr>
<tr class="memdesc:adabd895d60a8ee0950f75da9a98fa155 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Groups candidates with common arguments.  <a href="#adabd895d60a8ee0950f75da9a98fa155">More...</a><br /></td></tr>
<tr class="separator:adabd895d60a8ee0950f75da9a98fa155 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9b5fba2247a02afe6cf480a405b6ca0 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#af9b5fba2247a02afe6cf480a405b6ca0">GroupCommonParents</a> (int num_common_args, const <a class="el" href="structscram_1_1core_1_1Preprocessor_1_1MergeTable.xhtml#a6179811cc1a2d65448aaacf5e65e038b">MergeTable::Candidates</a> &amp;group, <a class="el" href="structscram_1_1core_1_1Preprocessor_1_1MergeTable.xhtml#a1b49978dd3eedcea36c54c6df20c6712">MergeTable::Collection</a> *parents) noexcept</td></tr>
<tr class="memdesc:af9b5fba2247a02afe6cf480a405b6ca0 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds intersections of common arguments of gates.  <a href="#af9b5fba2247a02afe6cf480a405b6ca0">More...</a><br /></td></tr>
<tr class="separator:af9b5fba2247a02afe6cf480a405b6ca0 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f35278c0542722dc42cc74358522a64 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a4f35278c0542722dc42cc74358522a64">GroupCommonArgs</a> (const <a class="el" href="structscram_1_1core_1_1Preprocessor_1_1MergeTable.xhtml#a1b49978dd3eedcea36c54c6df20c6712">MergeTable::Collection</a> &amp;options, <a class="el" href="structscram_1_1core_1_1Preprocessor_1_1MergeTable.xhtml">MergeTable</a> *table) noexcept</td></tr>
<tr class="memdesc:a4f35278c0542722dc42cc74358522a64 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Groups common args for merging.  <a href="#a4f35278c0542722dc42cc74358522a64">More...</a><br /></td></tr>
<tr class="separator:a4f35278c0542722dc42cc74358522a64 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c51e098f0ff45be068f68296323f45f inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a3c51e098f0ff45be068f68296323f45f">FindOptionGroup</a> (<a class="el" href="structscram_1_1core_1_1Preprocessor_1_1MergeTable.xhtml#acfce4c2fa17c6987cfec6c0bce917667">MergeTable::MergeGroup</a> *all_options, <a class="el" href="structscram_1_1core_1_1Preprocessor_1_1MergeTable.xhtml#af0cda955fb73a68ffbb9c44ddbfd71c8">MergeTable::OptionGroup</a> *best_group) noexcept</td></tr>
<tr class="memdesc:a3c51e098f0ff45be068f68296323f45f inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds an optimal way of grouping options.  <a href="#a3c51e098f0ff45be068f68296323f45f">More...</a><br /></td></tr>
<tr class="separator:a3c51e098f0ff45be068f68296323f45f inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbaee2a993e0538280dc437d0a3b849f inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#adbaee2a993e0538280dc437d0a3b849f">FindBaseOption</a> (<a class="el" href="structscram_1_1core_1_1Preprocessor_1_1MergeTable.xhtml#acfce4c2fa17c6987cfec6c0bce917667">MergeTable::MergeGroup</a> *all_options, MergeTable::MergeGroup::iterator *best_option) noexcept</td></tr>
<tr class="memdesc:adbaee2a993e0538280dc437d0a3b849f inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds the starting option for group formation.  <a href="#adbaee2a993e0538280dc437d0a3b849f">More...</a><br /></td></tr>
<tr class="separator:adbaee2a993e0538280dc437d0a3b849f inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf534fb9d9510d712a78cb5d27572ec1 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#acf534fb9d9510d712a78cb5d27572ec1">TransformCommonArgs</a> (<a class="el" href="structscram_1_1core_1_1Preprocessor_1_1MergeTable.xhtml#acfce4c2fa17c6987cfec6c0bce917667">MergeTable::MergeGroup</a> *group) noexcept</td></tr>
<tr class="memdesc:acf534fb9d9510d712a78cb5d27572ec1 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transforms common arguments of gates into new gates.  <a href="#acf534fb9d9510d712a78cb5d27572ec1">More...</a><br /></td></tr>
<tr class="separator:acf534fb9d9510d712a78cb5d27572ec1 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4737f354474154b3cea9773c25616d27 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a4737f354474154b3cea9773c25616d27">DetectDistributivity</a> () noexcept</td></tr>
<tr class="memdesc:a4737f354474154b3cea9773c25616d27 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detects and manipulates AND and OR gate distributivity for the whole graph.  <a href="#a4737f354474154b3cea9773c25616d27">More...</a><br /></td></tr>
<tr class="separator:a4737f354474154b3cea9773c25616d27 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79fe8e90f0e8fbc20a76610aaf09fe6e inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a79fe8e90f0e8fbc20a76610aaf09fe6e">DetectDistributivity</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate) noexcept</td></tr>
<tr class="memdesc:a79fe8e90f0e8fbc20a76610aaf09fe6e inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detects and manipulates AND and OR gate distributivity.  <a href="#a79fe8e90f0e8fbc20a76610aaf09fe6e">More...</a><br /></td></tr>
<tr class="separator:a79fe8e90f0e8fbc20a76610aaf09fe6e inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b29173b8f6d18031d7a8cacbac15ce1 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a4b29173b8f6d18031d7a8cacbac15ce1">HandleDistributiveArgs</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate, <a class="el" href="pdag_8h.xhtml#ad4c053147ae98b76f12620441f6d3800">Operator</a> distr_type, std::vector&lt; <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &gt; *candidates) noexcept</td></tr>
<tr class="memdesc:a4b29173b8f6d18031d7a8cacbac15ce1 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Manipulates gates with distributive arguments.  <a href="#a4b29173b8f6d18031d7a8cacbac15ce1">More...</a><br /></td></tr>
<tr class="separator:a4b29173b8f6d18031d7a8cacbac15ce1 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29d3775965ee487d000591739fdbaa4b inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a29d3775965ee487d000591739fdbaa4b">FilterDistributiveArgs</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate, std::vector&lt; <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &gt; *candidates) noexcept</td></tr>
<tr class="memdesc:a29d3775965ee487d000591739fdbaa4b inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detects relationships between the gate and its distributive arguments to remove unnecessary candidates.  <a href="#a29d3775965ee487d000591739fdbaa4b">More...</a><br /></td></tr>
<tr class="separator:a29d3775965ee487d000591739fdbaa4b inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51340a3bcfa9785e430bab27ee08bbbf inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a51340a3bcfa9785e430bab27ee08bbbf">GroupDistributiveArgs</a> (const <a class="el" href="structscram_1_1core_1_1Preprocessor_1_1MergeTable.xhtml#a1b49978dd3eedcea36c54c6df20c6712">MergeTable::Collection</a> &amp;options, <a class="el" href="structscram_1_1core_1_1Preprocessor_1_1MergeTable.xhtml">MergeTable</a> *table) noexcept</td></tr>
<tr class="memdesc:a51340a3bcfa9785e430bab27ee08bbbf inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Groups distributive gate arguments for future factorization.  <a href="#a51340a3bcfa9785e430bab27ee08bbbf">More...</a><br /></td></tr>
<tr class="separator:a51340a3bcfa9785e430bab27ee08bbbf inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2557ab80c04d7f91372992edfbedd93a inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a2557ab80c04d7f91372992edfbedd93a">TransformDistributiveArgs</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate, <a class="el" href="pdag_8h.xhtml#ad4c053147ae98b76f12620441f6d3800">Operator</a> distr_type, <a class="el" href="structscram_1_1core_1_1Preprocessor_1_1MergeTable.xhtml#acfce4c2fa17c6987cfec6c0bce917667">MergeTable::MergeGroup</a> *group) noexcept</td></tr>
<tr class="memdesc:a2557ab80c04d7f91372992edfbedd93a inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transforms distributive of arguments gates into a new subgraph.  <a href="#a2557ab80c04d7f91372992edfbedd93a">More...</a><br /></td></tr>
<tr class="separator:a2557ab80c04d7f91372992edfbedd93a inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebc709ad2e097c24e837889a6a9e4696 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#aebc709ad2e097c24e837889a6a9e4696">BooleanOptimization</a> () noexcept</td></tr>
<tr class="memdesc:aebc709ad2e097c24e837889a6a9e4696 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Propagates failures of common nodes to detect redundancy.  <a href="#aebc709ad2e097c24e837889a6a9e4696">More...</a><br /></td></tr>
<tr class="separator:aebc709ad2e097c24e837889a6a9e4696 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a394fb1b5b5f9ee31dc81ad8d64353ee3 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a394fb1b5b5f9ee31dc81ad8d64353ee3">GatherCommonNodes</a> (std::vector&lt; <a class="el" href="pdag_8h.xhtml#a2dd45b6c16940b9b60e4bc5b13ae6d6b">GateWeakPtr</a> &gt; *common_gates, std::vector&lt; std::weak_ptr&lt; <a class="el" href="classscram_1_1core_1_1Variable.xhtml">Variable</a> &gt;&gt; *common_variables) noexcept</td></tr>
<tr class="memdesc:a394fb1b5b5f9ee31dc81ad8d64353ee3 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Traverses the graph to find nodes that have more than one parent.  <a href="#a394fb1b5b5f9ee31dc81ad8d64353ee3">More...</a><br /></td></tr>
<tr class="separator:a394fb1b5b5f9ee31dc81ad8d64353ee3 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4086c57695d49b4770915d5d53bd47de inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memTemplParams" colspan="2">template&lt;class N &gt; </td></tr>
<tr class="memitem:a4086c57695d49b4770915d5d53bd47de inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a4086c57695d49b4770915d5d53bd47de">ProcessCommonNode</a> (const std::weak_ptr&lt; N &gt; &amp;common_node) noexcept</td></tr>
<tr class="memdesc:a4086c57695d49b4770915d5d53bd47de inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to simplify the graph by removing redundancies generated by a common node.  <a href="#a4086c57695d49b4770915d5d53bd47de">More...</a><br /></td></tr>
<tr class="separator:a4086c57695d49b4770915d5d53bd47de inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b83bc14261cee28f0e1553222b7d5e5 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a3b83bc14261cee28f0e1553222b7d5e5">MarkAncestors</a> (const <a class="el" href="pdag_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &amp;node, <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> *module) noexcept</td></tr>
<tr class="memdesc:a3b83bc14261cee28f0e1553222b7d5e5 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Marks ancestor gates true.  <a href="#a3b83bc14261cee28f0e1553222b7d5e5">More...</a><br /></td></tr>
<tr class="separator:a3b83bc14261cee28f0e1553222b7d5e5 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9a8bac98061d7f82633486ed6a36861 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#ae9a8bac98061d7f82633486ed6a36861">PropagateState</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate, const <a class="el" href="pdag_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &amp;node) noexcept</td></tr>
<tr class="memdesc:ae9a8bac98061d7f82633486ed6a36861 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Propagates failure or success of a common node by setting its ancestors' optimization values to 1 or -1 if they fail or succeed according to their Boolean logic.  <a href="#ae9a8bac98061d7f82633486ed6a36861">More...</a><br /></td></tr>
<tr class="separator:ae9a8bac98061d7f82633486ed6a36861 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a019e679ad9077caac8c48253d42647ff inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a019e679ad9077caac8c48253d42647ff">DetermineGateState</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate, int num_failure, int num_success) noexcept</td></tr>
<tr class="memdesc:a019e679ad9077caac8c48253d42647ff inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determines if a gate fails or succeeds due to failed/succeeded arguments.  <a href="#a019e679ad9077caac8c48253d42647ff">More...</a><br /></td></tr>
<tr class="separator:a019e679ad9077caac8c48253d42647ff inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4539f18d3dde97514ca267b41d30d220 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a4539f18d3dde97514ca267b41d30d220">CollectStateDestinations</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate, int index, std::unordered_map&lt; int, <a class="el" href="pdag_8h.xhtml#a2dd45b6c16940b9b60e4bc5b13ae6d6b">GateWeakPtr</a> &gt; *destinations) noexcept</td></tr>
<tr class="memdesc:a4539f18d3dde97514ca267b41d30d220 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Collects failure or success destinations and marks non-redundant nodes.  <a href="#a4539f18d3dde97514ca267b41d30d220">More...</a><br /></td></tr>
<tr class="separator:a4539f18d3dde97514ca267b41d30d220 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad79145fdd5487ef0537728f74e6a94e4 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#ad79145fdd5487ef0537728f74e6a94e4">CollectRedundantParents</a> (const <a class="el" href="pdag_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &amp;node, std::unordered_map&lt; int, <a class="el" href="pdag_8h.xhtml#a2dd45b6c16940b9b60e4bc5b13ae6d6b">GateWeakPtr</a> &gt; *destinations, std::vector&lt; <a class="el" href="pdag_8h.xhtml#a2dd45b6c16940b9b60e4bc5b13ae6d6b">GateWeakPtr</a> &gt; *redundant_parents) noexcept</td></tr>
<tr class="memdesc:ad79145fdd5487ef0537728f74e6a94e4 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detects if parents of a node are redundant.  <a href="#ad79145fdd5487ef0537728f74e6a94e4">More...</a><br /></td></tr>
<tr class="separator:ad79145fdd5487ef0537728f74e6a94e4 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6edfe2a6d9836942944921a8de0c011e inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a6edfe2a6d9836942944921a8de0c011e">ProcessRedundantParents</a> (const <a class="el" href="pdag_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &amp;node, const std::vector&lt; <a class="el" href="pdag_8h.xhtml#a2dd45b6c16940b9b60e4bc5b13ae6d6b">GateWeakPtr</a> &gt; &amp;redundant_parents) noexcept</td></tr>
<tr class="memdesc:a6edfe2a6d9836942944921a8de0c011e inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detects if parents of a node are redundant.  <a href="#a6edfe2a6d9836942944921a8de0c011e">More...</a><br /></td></tr>
<tr class="separator:a6edfe2a6d9836942944921a8de0c011e inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa42b66bb888f665bc68324cca15452ad inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memTemplParams" colspan="2">template&lt;class N &gt; </td></tr>
<tr class="memitem:aa42b66bb888f665bc68324cca15452ad inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#aa42b66bb888f665bc68324cca15452ad">ProcessStateDestinations</a> (const std::shared_ptr&lt; N &gt; &amp;node, const std::unordered_map&lt; int, <a class="el" href="pdag_8h.xhtml#a2dd45b6c16940b9b60e4bc5b13ae6d6b">GateWeakPtr</a> &gt; &amp;destinations) noexcept</td></tr>
<tr class="memdesc:aa42b66bb888f665bc68324cca15452ad inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transforms failure or success destination according to the logic and the common node.  <a href="#aa42b66bb888f665bc68324cca15452ad">More...</a><br /></td></tr>
<tr class="separator:aa42b66bb888f665bc68324cca15452ad inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5eb477e9ecd0552b2b554d7df56df652 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a5eb477e9ecd0552b2b554d7df56df652">ClearStateMarks</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate) noexcept</td></tr>
<tr class="memdesc:a5eb477e9ecd0552b2b554d7df56df652 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears all the ancestor marks used in Boolean optimization steps.  <a href="#a5eb477e9ecd0552b2b554d7df56df652">More...</a><br /></td></tr>
<tr class="separator:a5eb477e9ecd0552b2b554d7df56df652 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae12f3096132d7f6e9daa779724255f7e inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#ae12f3096132d7f6e9daa779724255f7e">DecomposeCommonNodes</a> () noexcept</td></tr>
<tr class="memdesc:ae12f3096132d7f6e9daa779724255f7e inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">The Shannon decomposition for common nodes in the PDAG.  <a href="#ae12f3096132d7f6e9daa779724255f7e">More...</a><br /></td></tr>
<tr class="separator:ae12f3096132d7f6e9daa779724255f7e inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26434bec1bc5a496f80c9cbad1ed3a62 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a26434bec1bc5a496f80c9cbad1ed3a62">ReplaceGate</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate, const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;replacement) noexcept</td></tr>
<tr class="memdesc:a26434bec1bc5a496f80c9cbad1ed3a62 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Replaces one gate in the graph with another.  <a href="#a26434bec1bc5a496f80c9cbad1ed3a62">More...</a><br /></td></tr>
<tr class="separator:a26434bec1bc5a496f80c9cbad1ed3a62 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c6e290b05a37759627487a6e028b1ca inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a1c6e290b05a37759627487a6e028b1ca">RegisterToClear</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate) noexcept</td></tr>
<tr class="memdesc:a1c6e290b05a37759627487a6e028b1ca inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers mutated gates for potential deletion later.  <a href="#a1c6e290b05a37759627487a6e028b1ca">More...</a><br /></td></tr>
<tr class="separator:a1c6e290b05a37759627487a6e028b1ca inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fa7788f0a789a43a8bd1bb7ee8a5e22 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a3fa7788f0a789a43a8bd1bb7ee8a5e22">GatherNodes</a> (std::vector&lt; <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &gt; *<a class="el" href="pdag_8cc.xhtml#a7880117e5dd7fc82f420e32606266bbd">gates</a>, std::vector&lt; <a class="el" href="pdag_8h.xhtml#a028cc62c4e510cb3063384dd75a36ed5">VariablePtr</a> &gt; *<a class="el" href="pdag_8cc.xhtml#ab366f39e035d7034632ee3f27f8fb380">variables</a>) noexcept</td></tr>
<tr class="memdesc:a3fa7788f0a789a43a8bd1bb7ee8a5e22 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gathers all nodes in the PDAG.  <a href="#a3fa7788f0a789a43a8bd1bb7ee8a5e22">More...</a><br /></td></tr>
<tr class="separator:a3fa7788f0a789a43a8bd1bb7ee8a5e22 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9caf4677a024ed935d831210b57b8ed9 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a9caf4677a024ed935d831210b57b8ed9">GatherNodes</a> (const <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;gate, std::vector&lt; <a class="el" href="pdag_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &gt; *<a class="el" href="pdag_8cc.xhtml#a7880117e5dd7fc82f420e32606266bbd">gates</a>, std::vector&lt; <a class="el" href="pdag_8h.xhtml#a028cc62c4e510cb3063384dd75a36ed5">VariablePtr</a> &gt; *<a class="el" href="pdag_8cc.xhtml#ab366f39e035d7034632ee3f27f8fb380">variables</a>) noexcept</td></tr>
<tr class="memdesc:a9caf4677a024ed935d831210b57b8ed9 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gathers nodes in the sub-graph.  <a href="#a9caf4677a024ed935d831210b57b8ed9">More...</a><br /></td></tr>
<tr class="separator:a9caf4677a024ed935d831210b57b8ed9 inherit pro_methods_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classscram_1_1core_1_1Preprocessor"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classscram_1_1core_1_1Preprocessor')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml">scram::core::Preprocessor</a></td></tr>
<tr class="memitem:a0786b7068cd15b0ffd76a71e33e898e6 inherit pro_attribs_classscram_1_1core_1_1Preprocessor"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Pdag.xhtml">Pdag</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Preprocessor.xhtml#a0786b7068cd15b0ffd76a71e33e898e6">graph_</a></td></tr>
<tr class="memdesc:a0786b7068cd15b0ffd76a71e33e898e6 inherit pro_attribs_classscram_1_1core_1_1Preprocessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">The PDAG to preprocess.  <a href="#a0786b7068cd15b0ffd76a71e33e898e6">More...</a><br /></td></tr>
<tr class="separator:a0786b7068cd15b0ffd76a71e33e898e6 inherit pro_attribs_classscram_1_1core_1_1Preprocessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;&gt;<br />
class scram::core::CustomPreprocessor&lt; Bdd &gt;</h3>

<p>Specialization of preprocessing for BDD based analyses. </p>

<p>Definition at line <a class="el" href="preprocessor_8h_source.xhtml#l01009">1009</a> of file <a class="el" href="preprocessor_8h_source.xhtml">preprocessor.h</a>.</p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="preprocessor_8h_source.xhtml">preprocessor.h</a></li>
<li><a class="el" href="preprocessor_8cc_source.xhtml">preprocessor.cc</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:37 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
