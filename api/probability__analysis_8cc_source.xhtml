<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>probability_analysis.cc Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">probability_analysis.cc</div>  </div>
</div><!--header-->
<div class="contents">
<a href="probability__analysis_8cc.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2014-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// Implementations of functions to provide</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/// probability analysis.</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="probability__analysis_8h.xhtml">probability_analysis.h</a>&quot;</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;boost/range/algorithm/find_if.hpp&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="event_8h.xhtml">event.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="logger_8h.xhtml">logger.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="parameter_8h.xhtml">parameter.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="settings_8h.xhtml">settings.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="zbdd_8h.xhtml">zbdd.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram_1_1core.xhtml">scram::core</a> {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a82f8b59ec2fe15be5b9d34d6e21ecf28">   34</a></span>&#160;<a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a82f8b59ec2fe15be5b9d34d6e21ecf28">ProbabilityAnalysis::ProbabilityAnalysis</a>(<span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1FaultTreeAnalysis.xhtml">FaultTreeAnalysis</a>* fta,</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                                         <a class="code" href="classscram_1_1mef_1_1MissionTime.xhtml">mef::MissionTime</a>* mission_time)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    : <a class="code" href="classscram_1_1core_1_1Analysis.xhtml">Analysis</a>(fta-&gt;settings()), p_total_(0), mission_time_(mission_time) {}</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#ab68a356b0bdeb793d30d3b6e84847d12">   38</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#ab68a356b0bdeb793d30d3b6e84847d12">ProbabilityAnalysis::Analyze</a>() noexcept {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <a class="code" href="logger_8h.xhtml#a8501f67861832d9efa717e17010648f5">CLOCK</a>(<a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a2298d982999f3cdf5b5d373f09af2cc3">p_time</a>);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea1571c622645c44a111d16a86ebde8b44">DEBUG3</a>) &lt;&lt; <span class="stringliteral">&quot;Calculating probabilities...&quot;</span>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="comment">// Get the total probability.</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  p_total_ = this-&gt;CalculateTotalProbability();</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  assert(p_total_ &gt;= 0 &amp;&amp; p_total_ &lt;= 1 &amp;&amp; <span class="stringliteral">&quot;The total probability is invalid.&quot;</span>);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keywordflow">if</span> (p_total_ == 1 &amp;&amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      <a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>().approximation() != Approximation::kNone) {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="classscram_1_1core_1_1Analysis.xhtml#abb78b5ecbaae6f4e7ccbca0b51cf2187">Analysis::AddWarning</a>(<span class="stringliteral">&quot;Probability may have been adjusted to 1.&quot;</span>);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  }</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  p_time_ = this-&gt;CalculateProbabilityOverTime();</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>().safety_integrity_levels())</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    ComputeSil();</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea1571c622645c44a111d16a86ebde8b44">DEBUG3</a>) &lt;&lt; <span class="stringliteral">&quot;Finished probability calculations in &quot;</span> &lt;&lt; <a class="code" href="logger_8h.xhtml#afbc1fb2843a8415445a0528c5212eeb9">DUR</a>(<a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a2298d982999f3cdf5b5d373f09af2cc3">p_time</a>);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <a class="code" href="classscram_1_1core_1_1Analysis.xhtml#a1a4f345f29240b0236853641f728a103">Analysis::AddAnalysisTime</a>(<a class="code" href="logger_8h.xhtml#afbc1fb2843a8415445a0528c5212eeb9">DUR</a>(<a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a2298d982999f3cdf5b5d373f09af2cc3">p_time</a>));</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">///&lt; @todo Use Boost math integration instead.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"></span><span class="keyword">namespace </span>{  <span class="comment">// Integration primitives.</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">/// Ordered points in ascending X.</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"></span><span class="keyword">using</span> Points = std::vector&lt;std::pair&lt;double, double&gt;&gt;;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">/// Integrates over &lt;y, x&gt; points.</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"></span><span class="keywordtype">double</span> Integrate(<span class="keyword">const</span> Points&amp; points) {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  assert(points.size() &gt; 1 &amp;&amp; <span class="stringliteral">&quot;Not enough points for integration.&quot;</span>);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordtype">double</span> trapezoid_area = 0;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 1; i &lt; points.size(); ++i) {  <span class="comment">// This should get vectorized.</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    trapezoid_area += (points[i].first + points[i - 1].first) *</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                      (points[i].second - points[i - 1].second);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  }</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  trapezoid_area /= 2;  <span class="comment">// The division is hoisted out of the loop.</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keywordflow">return</span> trapezoid_area;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">/// Finds the average y over x with &lt;y, x&gt; points.</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"></span><span class="keywordtype">double</span> AverageY(<span class="keyword">const</span> Points&amp; points) {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordtype">double</span> range_x = points.back().second - points.front().second;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  assert(range_x);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keywordflow">return</span> Integrate(points) / range_x;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">/// Partitions the f(x) over y axis.</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">/// Partitioning is normalized.</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">/// @tparam T  The output container type</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">///            with std::pair&lt;const double, double&gt; value type.</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">/// @param[in] points  The function &lt;y, x&gt; points.</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">/// @param[out] y_fractions  The ordered buckets to partition Y into.</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">/// @pre The lowest bound for the y_fractions is implicit 0.</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keywordtype">void</span> PartitionY(<span class="keyword">const</span> Points&amp; points, T* y_fractions) {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 1; i &lt; points.size(); ++i) {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordtype">double</span> p_0 = points[i - 1].first;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">double</span> p_1 = points[i].first;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordtype">double</span> t_0 = points[i - 1].second;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">double</span> t_1 = points[i].second;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    assert(t_1 &gt; t_0);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordtype">double</span> k = (p_1 - p_0) / (t_1 - t_0);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">if</span> (k &lt; 0) {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      k = -k;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      std::swap(p_1, p_0);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">auto</span> fraction = [&amp;k, &amp;p_1, &amp;p_0, &amp;t_1, &amp;t_0](<span class="keywordtype">double</span> b_0, <span class="keywordtype">double</span> b_1) {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      <span class="keywordflow">if</span> (p_0 &lt;= b_0 &amp;&amp; b_1 &lt;= p_1)  <span class="comment">// Sub-range.</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">return</span> (b_1 - b_0) / k;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keywordflow">if</span> (b_0 &lt;= p_0 &amp;&amp; p_1 &lt;= b_1)  <span class="comment">// Super-range.</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">return</span> t_1 - t_0;  <span class="comment">// Covers the case when k == 0.</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      <span class="comment">// The cases of partially overlapping intervals.</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      <span class="keywordflow">if</span> (p_0 &lt;= b_0 &amp;&amp; b_0 &lt;= p_1)  <span class="comment">// b_1 is outside (&gt;) of the range.</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keywordflow">return</span> (p_1 - b_0) / k;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      <span class="keywordflow">if</span> (p_0 &lt;= b_1 &amp;&amp; b_1 &lt;= p_1)  <span class="comment">// b_0 is outside (&lt;) of the range.</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">return</span> (b_1 - p_0) / k;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      <span class="keywordflow">return</span> 0.0;  <span class="comment">// Ranges do not overlap.</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    };</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordtype">double</span> b_0 = 0;  <span class="comment">// The lower bound of the Y bucket.</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordflow">for</span> (std::pair&lt;const double, double&gt;&amp; y_bucket : *y_fractions) {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      <span class="keywordtype">double</span> b_1 = y_bucket.first;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      y_bucket.second += fraction(b_0, b_1);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      b_0 = b_1;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  }</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <span class="comment">// Normalize the fractions.</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keywordtype">double</span> range_x = points.back().second - points.front().second;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  assert(range_x &gt; 0);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keywordflow">for</span> (std::pair&lt;const double, double&gt;&amp; y_bucket : *y_fractions)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    y_bucket.second /= range_x;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}  <span class="comment">// namespace</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keywordtype">void</span> ProbabilityAnalysis::ComputeSil() noexcept {</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  assert(!p_time_.empty() &amp;&amp; <span class="stringliteral">&quot;The probability over time must be available.&quot;</span>);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  assert(!sil_ &amp;&amp; <span class="stringliteral">&quot;Recomputing the SIL.&quot;</span>);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  sil_ = std::make_unique&lt;Sil&gt;();</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keywordflow">if</span> (p_time_.size() == 1) {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    sil_-&gt;pfd_avg = p_time_.front().first;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keyword">auto</span> it =</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        boost::find_if(sil_-&gt;pfd_fractions,</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                       [<span class="keyword">this</span>](<span class="keyword">const</span> std::pair&lt;const double, double&gt;&amp; level) {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                         return sil_-&gt;pfd_avg &lt;= level.first;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                       });</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    assert(it != sil_-&gt;pfd_fractions.end());</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    it-&gt;second = 1;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    sil_-&gt;pfd_avg = core::AverageY(p_time_);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    core::PartitionY(p_time_, &amp;sil_-&gt;pfd_fractions);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    decltype(p_time_) pfh_time;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    pfh_time.reserve(p_time_.size());</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> std::pair&lt;double, double&gt;&amp; point : p_time_) {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      pfh_time.emplace_back(point.second ? point.first / point.second : 0,</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                            point.second);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    sil_-&gt;pfh_avg = core::AverageY(pfh_time);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    core::PartitionY(pfh_time, &amp;sil_-&gt;pfh_fractions);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  }</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;}</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="classscram_1_1core_1_1CutSetProbabilityCalculator.xhtml#ac07d9fe45e02f3c6ef0b25a111684b2d">  159</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classscram_1_1core_1_1CutSetProbabilityCalculator.xhtml#ac07d9fe45e02f3c6ef0b25a111684b2d">CutSetProbabilityCalculator::Calculate</a>(</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keyword">const</span> std::vector&lt;int&gt;&amp; cut_set,</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keyword">const</span> <a class="code" href="classext_1_1index__map.xhtml">Pdag::IndexMap&lt;double&gt;</a>&amp; p_vars) noexcept {</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keywordtype">double</span> p_sub_set = 1;  <span class="comment">// 1 is for multiplication.</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> member : cut_set) {</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    assert(member &gt; 0 &amp;&amp; <span class="stringliteral">&quot;Complements in a cut set.&quot;</span>);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    p_sub_set *= p_vars[member];</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keywordflow">return</span> p_sub_set;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;}</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="classscram_1_1core_1_1RareEventCalculator.xhtml#a338c4038209d0a6e311d913df8b684f9">  170</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classscram_1_1core_1_1RareEventCalculator.xhtml#a338c4038209d0a6e311d913df8b684f9">RareEventCalculator::Calculate</a>(</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1Zbdd.xhtml">Zbdd</a>&amp; cut_sets, <span class="keyword">const</span> <a class="code" href="classext_1_1index__map.xhtml">Pdag::IndexMap&lt;double&gt;</a>&amp; p_vars) noexcept {</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keywordtype">double</span> sum = 0;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">const</span> std::vector&lt;int&gt;&amp; cut_set : cut_sets) {</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    sum += <a class="code" href="classscram_1_1core_1_1CutSetProbabilityCalculator.xhtml#ac07d9fe45e02f3c6ef0b25a111684b2d">CutSetProbabilityCalculator::Calculate</a>(cut_set, p_vars);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  }</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keywordflow">return</span> sum &gt; 1 ? 1 : sum;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="classscram_1_1core_1_1McubCalculator.xhtml#af47379d2ba9190b34aef1acfa402e15c">  179</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classscram_1_1core_1_1McubCalculator.xhtml#af47379d2ba9190b34aef1acfa402e15c">McubCalculator::Calculate</a>(</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1Zbdd.xhtml">Zbdd</a>&amp; cut_sets, <span class="keyword">const</span> <a class="code" href="classext_1_1index__map.xhtml">Pdag::IndexMap&lt;double&gt;</a>&amp; p_vars) noexcept {</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <span class="keywordtype">double</span> m = 1;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">const</span> std::vector&lt;int&gt;&amp; cut_set : cut_sets) {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    m *= 1 - <a class="code" href="classscram_1_1core_1_1CutSetProbabilityCalculator.xhtml#ac07d9fe45e02f3c6ef0b25a111684b2d">CutSetProbabilityCalculator::Calculate</a>(cut_set, p_vars);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  }</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  <span class="keywordflow">return</span> 1 - m;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;}</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keywordtype">void</span> ProbabilityAnalyzerBase::ExtractVariableProbabilities() {</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  p_vars_.reserve(graph_-&gt;basic_events().size());</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1BasicEvent.xhtml">mef::BasicEvent</a>* event : graph_-&gt;basic_events())</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    p_vars_.push_back(event-&gt;p());</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;}</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;std::vector&lt;std::pair&lt;double, double&gt;&gt;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;ProbabilityAnalyzerBase::CalculateProbabilityOverTime() noexcept {</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  std::vector&lt;std::pair&lt;double, double&gt;&gt; <a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a2298d982999f3cdf5b5d373f09af2cc3">p_time</a>;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="keywordtype">double</span> time_step = <a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>().<a class="code" href="classscram_1_1core_1_1Settings.xhtml#a2bc9e5d7c8028a8fd8e2ea02d766bb2b">time_step</a>();</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  <span class="keywordflow">if</span> (!time_step)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a2298d982999f3cdf5b5d373f09af2cc3">p_time</a>;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  assert(<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>().<a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a685fa5d713675951b5f6738631debf1d">mission_time</a>() ==</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;         <a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a685fa5d713675951b5f6738631debf1d">ProbabilityAnalysis::mission_time</a>().value());</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  <span class="keywordtype">double</span> total_time = <a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a685fa5d713675951b5f6738631debf1d">ProbabilityAnalysis::mission_time</a>().<a class="code" href="classscram_1_1mef_1_1MissionTime.xhtml#abedd4c16a7c428fc8192ec32d51beb3e">value</a>();</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="keyword">auto</span> update = [<span class="keyword">this</span>, &amp;<a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a2298d982999f3cdf5b5d373f09af2cc3">p_time</a>](<span class="keywordtype">double</span> time) {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a685fa5d713675951b5f6738631debf1d">mission_time</a>().<a class="code" href="classscram_1_1mef_1_1MissionTime.xhtml#abedd4c16a7c428fc8192ec32d51beb3e">value</a>(time);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keyword">auto</span> it_p = p_vars_.begin();</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1BasicEvent.xhtml">mef::BasicEvent</a>* event : graph_-&gt;basic_events())</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;      *it_p++ = event-&gt;p();</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    p_time.emplace_back(this-&gt;CalculateTotalProbability(p_vars_), time);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  };</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  <span class="keywordflow">for</span> (<span class="keywordtype">double</span> time = 0; time &lt; total_time; time += time_step)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    update(time);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  update(total_time);  <span class="comment">// Handle cases when total_time is not divisible by step.</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a2298d982999f3cdf5b5d373f09af2cc3">p_time</a>;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;}</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno"><a class="line" href="classscram_1_1core_1_1ProbabilityAnalyzer_3_01Bdd_01_4.xhtml#afcfc98b0b573c5cc5d62125a7272f09d">  219</a></span>&#160;<a class="code" href="classscram_1_1core_1_1ProbabilityAnalyzer.xhtml">ProbabilityAnalyzer&lt;Bdd&gt;::ProbabilityAnalyzer</a>(<a class="code" href="classscram_1_1core_1_1FaultTreeAnalyzer.xhtml">FaultTreeAnalyzer&lt;Bdd&gt;</a>* fta,</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                                              <a class="code" href="classscram_1_1mef_1_1MissionTime.xhtml">mef::MissionTime</a>* <a class="code" href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a685fa5d713675951b5f6738631debf1d">mission_time</a>)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    : <a class="code" href="classscram_1_1core_1_1ProbabilityAnalyzerBase.xhtml">ProbabilityAnalyzerBase</a>(fta, mission_time), owner_(false) {</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea064d45d966cf5368bd8a5e317e65a0e6">DEBUG2</a>) &lt;&lt; <span class="stringliteral">&quot;Re-using BDD from FaultTreeAnalyzer for ProbabilityAnalyzer&quot;</span>;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  bdd_graph_ = fta-&gt;<a class="code" href="classscram_1_1core_1_1FaultTreeAnalyzer.xhtml#a306ce3db289e08e34def4337360b117b">algorithm</a>();</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  <span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1Bdd.xhtml#abac07f2126ed657d744a92e4f88415fd">Bdd::VertexPtr</a>&amp; root = bdd_graph_-&gt;root().vertex;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  current_mark_ = root-&gt;terminal() ? <span class="keyword">false</span> : <a class="code" href="structscram_1_1core_1_1IntrusivePtrCast.xhtml#af153c12dc6133b7d9f9b7a57bba29f1d">Ite::Ref</a>(root).<a class="code" href="classscram_1_1core_1_1NonTerminal.xhtml#a7b70ab1b978f3197458c95e0891fd79c">mark</a>();</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;}</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="classscram_1_1core_1_1ProbabilityAnalyzer_3_01Bdd_01_4.xhtml#a79349044e61f34c3d7e6e58780e4072c">  228</a></span>&#160;<a class="code" href="classscram_1_1core_1_1ProbabilityAnalyzer.xhtml">ProbabilityAnalyzer&lt;Bdd&gt;::~ProbabilityAnalyzer</a>() noexcept {</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  <span class="keywordflow">if</span> (owner_)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keyword">delete</span> bdd_graph_;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;}</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno"><a class="line" href="classscram_1_1core_1_1ProbabilityAnalyzer_3_01Bdd_01_4.xhtml#a45b66605634ae60f1c00e3ac469a7c7a">  233</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classscram_1_1core_1_1ProbabilityAnalyzer.xhtml">ProbabilityAnalyzer&lt;Bdd&gt;::CalculateTotalProbability</a>(</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keyword">const</span> <a class="code" href="classext_1_1index__map.xhtml">Pdag::IndexMap&lt;double&gt;</a>&amp; <a class="code" href="classscram_1_1core_1_1ProbabilityAnalyzerBase.xhtml#a509947ba8cc81815779840c27c5bba09">p_vars</a>) noexcept {</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  <a class="code" href="logger_8h.xhtml#a8501f67861832d9efa717e17010648f5">CLOCK</a>(calc_time);  <span class="comment">// BDD based calculation time.</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea2a5fff04371a557db59be045fd44fc04">DEBUG4</a>) &lt;&lt; <span class="stringliteral">&quot;Calculating probability with BDD...&quot;</span>;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  current_mark_ = !current_mark_;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;  <span class="keywordtype">double</span> prob =</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;      CalculateProbability(bdd_graph_-&gt;root().vertex, current_mark_, <a class="code" href="classscram_1_1core_1_1ProbabilityAnalyzerBase.xhtml#a509947ba8cc81815779840c27c5bba09">p_vars</a>);</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  <span class="keywordflow">if</span> (bdd_graph_-&gt;root().complement)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    prob = 1 - prob;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea2a5fff04371a557db59be045fd44fc04">DEBUG4</a>) &lt;&lt; <span class="stringliteral">&quot;Calculated probability &quot;</span> &lt;&lt; prob &lt;&lt; <span class="stringliteral">&quot; in &quot;</span> &lt;&lt; <a class="code" href="logger_8h.xhtml#afbc1fb2843a8415445a0528c5212eeb9">DUR</a>(calc_time);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  <span class="keywordflow">return</span> prob;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;}</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1core_1_1ProbabilityAnalyzer.xhtml">ProbabilityAnalyzer&lt;Bdd&gt;::CreateBdd</a>(</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1FaultTreeAnalysis.xhtml">FaultTreeAnalysis</a>&amp; fta) noexcept {</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  <a class="code" href="logger_8h.xhtml#a8501f67861832d9efa717e17010648f5">CLOCK</a>(total_time);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  <a class="code" href="logger_8h.xhtml#a8501f67861832d9efa717e17010648f5">CLOCK</a>(ft_creation);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  <a class="code" href="classscram_1_1core_1_1Pdag.xhtml">Pdag</a> <a class="code" href="classscram_1_1core_1_1ProbabilityAnalyzerBase.xhtml#a95a4dfedc736e018dcb6b0b50fe6a21d">graph</a>(fta.<a class="code" href="classscram_1_1core_1_1FaultTreeAnalysis.xhtml#a92d788d624b1d726fadf51960af052a9">top_event</a>(), <a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>().<a class="code" href="classscram_1_1core_1_1Settings.xhtml#a4a71410d7b91bb82cadc29c0fe0b2506">ccf_analysis</a>());</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea064d45d966cf5368bd8a5e317e65a0e6">DEBUG2</a>) &lt;&lt; <span class="stringliteral">&quot;PDAG is created in &quot;</span> &lt;&lt; <a class="code" href="logger_8h.xhtml#afbc1fb2843a8415445a0528c5212eeb9">DUR</a>(ft_creation);</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  <a class="code" href="logger_8h.xhtml#a8501f67861832d9efa717e17010648f5">CLOCK</a>(prep_time);  <span class="comment">// Overall preprocessing time.</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea064d45d966cf5368bd8a5e317e65a0e6">DEBUG2</a>) &lt;&lt; <span class="stringliteral">&quot;Preprocessing...&quot;</span>;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  <a class="code" href="classscram_1_1core_1_1CustomPreprocessor_3_01Bdd_01_4.xhtml">CustomPreprocessor&lt;Bdd&gt;</a>{&amp;<a class="code" href="classscram_1_1core_1_1ProbabilityAnalyzerBase.xhtml#a95a4dfedc736e018dcb6b0b50fe6a21d">graph</a>}();</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea064d45d966cf5368bd8a5e317e65a0e6">DEBUG2</a>) &lt;&lt; <span class="stringliteral">&quot;Finished preprocessing in &quot;</span> &lt;&lt; <a class="code" href="logger_8h.xhtml#afbc1fb2843a8415445a0528c5212eeb9">DUR</a>(prep_time);</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  <a class="code" href="logger_8h.xhtml#a8501f67861832d9efa717e17010648f5">CLOCK</a>(bdd_time);  <span class="comment">// BDD based calculation time.</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;  <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea064d45d966cf5368bd8a5e317e65a0e6">DEBUG2</a>) &lt;&lt; <span class="stringliteral">&quot;Creating BDD for Probability Analysis...&quot;</span>;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  bdd_graph_ = <span class="keyword">new</span> <a class="code" href="classscram_1_1core_1_1Bdd.xhtml">Bdd</a>(&amp;<a class="code" href="classscram_1_1core_1_1ProbabilityAnalyzerBase.xhtml#a95a4dfedc736e018dcb6b0b50fe6a21d">graph</a>, <a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>());</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;  <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea064d45d966cf5368bd8a5e317e65a0e6">DEBUG2</a>) &lt;&lt; <span class="stringliteral">&quot;BDD is created in &quot;</span> &lt;&lt; <a class="code" href="logger_8h.xhtml#afbc1fb2843a8415445a0528c5212eeb9">DUR</a>(bdd_time);</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;  <a class="code" href="classscram_1_1core_1_1Analysis.xhtml#a1a4f345f29240b0236853641f728a103">Analysis::AddAnalysisTime</a>(<a class="code" href="logger_8h.xhtml#afbc1fb2843a8415445a0528c5212eeb9">DUR</a>(total_time));</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;}</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keywordtype">double</span> <a class="code" href="classscram_1_1core_1_1ProbabilityAnalyzer.xhtml">ProbabilityAnalyzer&lt;Bdd&gt;::CalculateProbability</a>(</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1Bdd.xhtml#abac07f2126ed657d744a92e4f88415fd">Bdd::VertexPtr</a>&amp; vertex, <span class="keywordtype">bool</span> mark,</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="keyword">const</span> <a class="code" href="classext_1_1index__map.xhtml">Pdag::IndexMap&lt;double&gt;</a>&amp; <a class="code" href="classscram_1_1core_1_1ProbabilityAnalyzerBase.xhtml#a509947ba8cc81815779840c27c5bba09">p_vars</a>) noexcept {</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  <span class="keywordflow">if</span> (vertex-&gt;terminal())</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keywordflow">return</span> 1;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  <a class="code" href="classscram_1_1core_1_1Ite.xhtml">Ite</a>&amp; ite = <a class="code" href="structscram_1_1core_1_1IntrusivePtrCast.xhtml#af153c12dc6133b7d9f9b7a57bba29f1d">Ite::Ref</a>(vertex);</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  <span class="keywordflow">if</span> (ite.<a class="code" href="classscram_1_1core_1_1NonTerminal.xhtml#a7b70ab1b978f3197458c95e0891fd79c">mark</a>() == mark)</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="keywordflow">return</span> ite.<a class="code" href="classscram_1_1core_1_1Ite.xhtml#ac059e4ac83547ef311c55b7ab1954a57">p</a>();</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  ite.<a class="code" href="classscram_1_1core_1_1NonTerminal.xhtml#a7b70ab1b978f3197458c95e0891fd79c">mark</a>(mark);</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;  <span class="keywordtype">double</span> p_var = 0;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  <span class="keywordflow">if</span> (ite.<a class="code" href="classscram_1_1core_1_1NonTerminal.xhtml#a9230422e92d086c34f67bcb864bfc8a9">module</a>()) {</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keyword">const</span> <a class="code" href="structscram_1_1core_1_1Bdd_1_1Function.xhtml">Bdd::Function</a>&amp; res = bdd_graph_-&gt;modules().find(ite.<a class="code" href="classscram_1_1core_1_1NonTerminal.xhtml#aeeaafd82ae5890a7ec3462c68ffc8628">index</a>())-&gt;second;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    p_var = CalculateProbability(res.<a class="code" href="structscram_1_1core_1_1Bdd_1_1Function.xhtml#a2b5daa48590ae16124dfd66271439c5e">vertex</a>, mark, p_vars);</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="keywordflow">if</span> (res.<a class="code" href="structscram_1_1core_1_1Bdd_1_1Function.xhtml#aa0c4dba36b68a6a2ae496573346b887c">complement</a>)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;      p_var = 1 - p_var;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    p_var = p_vars[ite.<a class="code" href="classscram_1_1core_1_1NonTerminal.xhtml#aeeaafd82ae5890a7ec3462c68ffc8628">index</a>()];</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  }</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;  <span class="keywordtype">double</span> high = CalculateProbability(ite.<a class="code" href="classscram_1_1core_1_1NonTerminal.xhtml#a7b184b2ba68a289aae9f3737f1d13b97">high</a>(), mark, <a class="code" href="classscram_1_1core_1_1ProbabilityAnalyzerBase.xhtml#a509947ba8cc81815779840c27c5bba09">p_vars</a>);</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  <span class="keywordtype">double</span> low = CalculateProbability(ite.<a class="code" href="classscram_1_1core_1_1NonTerminal.xhtml#adeb100923176ebd5f820c75b79280796">low</a>(), mark, <a class="code" href="classscram_1_1core_1_1ProbabilityAnalyzerBase.xhtml#a509947ba8cc81815779840c27c5bba09">p_vars</a>);</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;  <span class="keywordflow">if</span> (ite.<a class="code" href="classscram_1_1core_1_1Ite.xhtml#afc14becd66d22adf37cf1177671d5a2c">complement_edge</a>())</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    low = 1 - low;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  ite.<a class="code" href="classscram_1_1core_1_1Ite.xhtml#ac059e4ac83547ef311c55b7ab1954a57">p</a>(p_var * high + (1 - p_var) * low);</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;  <span class="keywordflow">return</span> ite.<a class="code" href="classscram_1_1core_1_1Ite.xhtml#ac059e4ac83547ef311c55b7ab1954a57">p</a>();</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;}</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;}  <span class="comment">// namespace scram::core</span></div><div class="ttc" id="classscram_1_1core_1_1Ite_xhtml_afc14becd66d22adf37cf1177671d5a2c"><div class="ttname"><a href="classscram_1_1core_1_1Ite.xhtml#afc14becd66d22adf37cf1177671d5a2c">scram::core::Ite::complement_edge</a></div><div class="ttdeci">bool complement_edge() const </div><div class="ttdef"><b>Definition:</b> <a href="bdd_8h_source.xhtml#l00341">bdd.h:341</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1NonTerminal_xhtml_adeb100923176ebd5f820c75b79280796"><div class="ttname"><a href="classscram_1_1core_1_1NonTerminal.xhtml#adeb100923176ebd5f820c75b79280796">scram::core::NonTerminal::low</a></div><div class="ttdeci">const VertexPtr &amp; low() const </div><div class="ttdef"><b>Definition:</b> <a href="bdd_8h_source.xhtml#l00296">bdd.h:296</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Zbdd_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1Zbdd.xhtml">scram::core::Zbdd</a></div><div class="ttdoc">Zero-Suppressed Binary Decision Diagrams for set manipulations. </div><div class="ttdef"><b>Definition:</b> <a href="zbdd_8h_source.xhtml#l00130">zbdd.h:130</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1CutSetProbabilityCalculator_xhtml_ac07d9fe45e02f3c6ef0b25a111684b2d"><div class="ttname"><a href="classscram_1_1core_1_1CutSetProbabilityCalculator.xhtml#ac07d9fe45e02f3c6ef0b25a111684b2d">scram::core::CutSetProbabilityCalculator::Calculate</a></div><div class="ttdeci">double Calculate(const std::vector&lt; int &gt; &amp;cut_set, const Pdag::IndexMap&lt; double &gt; &amp;p_vars) noexcept</div><div class="ttdoc">Calculates a probability of a cut set, whose members are in AND relationship with each other...</div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8cc_source.xhtml#l00159">probability_analysis.cc:159</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Bdd_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1Bdd.xhtml">scram::core::Bdd</a></div><div class="ttdoc">Analysis of PDAGs with Binary Decision Diagrams. </div><div class="ttdef"><b>Definition:</b> <a href="bdd_8h_source.xhtml#l00690">bdd.h:690</a></div></div>
<div class="ttc" id="zbdd_8h_xhtml"><div class="ttname"><a href="zbdd_8h.xhtml">zbdd.h</a></div><div class="ttdoc">Zero-Suppressed Binary Decision Diagram facilities. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1BasicEvent_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1BasicEvent.xhtml">scram::mef::BasicEvent</a></div><div class="ttdoc">Representation of a basic event in a fault tree. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00075">event.h:75</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1RareEventCalculator_xhtml_a338c4038209d0a6e311d913df8b684f9"><div class="ttname"><a href="classscram_1_1core_1_1RareEventCalculator.xhtml#a338c4038209d0a6e311d913df8b684f9">scram::core::RareEventCalculator::Calculate</a></div><div class="ttdeci">double Calculate(const Zbdd &amp;cut_sets, const Pdag::IndexMap&lt; double &gt; &amp;p_vars) noexcept</div><div class="ttdoc">Calculates probabilities using the Rare-Event approximation. </div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8cc_source.xhtml#l00170">probability_analysis.cc:170</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1FaultTreeAnalyzer_xhtml_a306ce3db289e08e34def4337360b117b"><div class="ttname"><a href="classscram_1_1core_1_1FaultTreeAnalyzer.xhtml#a306ce3db289e08e34def4337360b117b">scram::core::FaultTreeAnalyzer::algorithm</a></div><div class="ttdeci">const Algorithm * algorithm() const </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree__analysis_8h_source.xhtml#l00298">fault_tree_analysis.h:298</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1ProbabilityAnalysis_xhtml_a685fa5d713675951b5f6738631debf1d"><div class="ttname"><a href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a685fa5d713675951b5f6738631debf1d">scram::core::ProbabilityAnalysis::mission_time</a></div><div class="ttdeci">mef::MissionTime &amp; mission_time()</div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8h_source.xhtml#l00102">probability_analysis.h:102</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1FaultTreeAnalysis_xhtml_a92d788d624b1d726fadf51960af052a9"><div class="ttname"><a href="classscram_1_1core_1_1FaultTreeAnalysis.xhtml#a92d788d624b1d726fadf51960af052a9">scram::core::FaultTreeAnalysis::top_event</a></div><div class="ttdeci">const mef::Gate &amp; top_event() const </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree__analysis_8h_source.xhtml#l00226">fault_tree_analysis.h:226</a></div></div>
<div class="ttc" id="logger_8h_xhtml_afbc1fb2843a8415445a0528c5212eeb9"><div class="ttname"><a href="logger_8h.xhtml#afbc1fb2843a8415445a0528c5212eeb9">DUR</a></div><div class="ttdeci">#define DUR(var)</div><div class="ttdoc">Calculates the time duration since the start of the clock in seconds. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00052">logger.h:52</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1Bdd_1_1Function_xhtml"><div class="ttname"><a href="structscram_1_1core_1_1Bdd_1_1Function.xhtml">scram::core::Bdd::Function</a></div><div class="ttdoc">Holder of computation resultant functions and gate representations. </div><div class="ttdef"><b>Definition:</b> <a href="bdd_8h_source.xhtml#l00696">bdd.h:696</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1MissionTime_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1MissionTime.xhtml">scram::mef::MissionTime</a></div><div class="ttdoc">The special parameter for system mission time. </div><div class="ttdef"><b>Definition:</b> <a href="parameter_8h_source.xhtml#l00055">parameter.h:55</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1ProbabilityAnalyzerBase_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1ProbabilityAnalyzerBase.xhtml">scram::core::ProbabilityAnalyzerBase</a></div><div class="ttdoc">Base class for Probability analyzers. </div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8h_source.xhtml#l00183">probability_analysis.h:183</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1CustomPreprocessor_3_01Bdd_01_4_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1CustomPreprocessor_3_01Bdd_01_4.xhtml">scram::core::CustomPreprocessor&lt; Bdd &gt;</a></div><div class="ttdoc">Specialization of preprocessing for BDD based analyses. </div><div class="ttdef"><b>Definition:</b> <a href="preprocessor_8h_source.xhtml#l01009">preprocessor.h:1009</a></div></div>
<div class="ttc" id="logger_8h_xhtml"><div class="ttname"><a href="logger_8h.xhtml">logger.h</a></div><div class="ttdoc">Logging capability for various purposes, such as warnings and debugging. </div></div>
<div class="ttc" id="classscram_1_1core_1_1NonTerminal_xhtml_a9230422e92d086c34f67bcb864bfc8a9"><div class="ttname"><a href="classscram_1_1core_1_1NonTerminal.xhtml#a9230422e92d086c34f67bcb864bfc8a9">scram::core::NonTerminal::module</a></div><div class="ttdeci">bool module() const </div><div class="ttdef"><b>Definition:</b> <a href="bdd_8h_source.xhtml#l00276">bdd.h:276</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1ProbabilityAnalysis_xhtml_a2298d982999f3cdf5b5d373f09af2cc3"><div class="ttname"><a href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a2298d982999f3cdf5b5d373f09af2cc3">scram::core::ProbabilityAnalysis::p_time</a></div><div class="ttdeci">const std::vector&lt; std::pair&lt; double, double &gt; &gt; &amp; p_time() const </div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8h_source.xhtml#l00088">probability_analysis.h:88</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1ProbabilityAnalyzerBase_xhtml_a95a4dfedc736e018dcb6b0b50fe6a21d"><div class="ttname"><a href="classscram_1_1core_1_1ProbabilityAnalyzerBase.xhtml#a95a4dfedc736e018dcb6b0b50fe6a21d">scram::core::ProbabilityAnalyzerBase::graph</a></div><div class="ttdeci">const Pdag * graph() const </div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8h_source.xhtml#l00200">probability_analysis.h:200</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Analysis_xhtml_abb78b5ecbaae6f4e7ccbca0b51cf2187"><div class="ttname"><a href="classscram_1_1core_1_1Analysis.xhtml#abb78b5ecbaae6f4e7ccbca0b51cf2187">scram::core::Analysis::AddWarning</a></div><div class="ttdeci">void AddWarning(std::string msg)</div><div class="ttdoc">Appends a warning message to the analysis warnings. </div><div class="ttdef"><b>Definition:</b> <a href="analysis_8h_source.xhtml#l00058">analysis.h:58</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Bdd_xhtml_abac07f2126ed657d744a92e4f88415fd"><div class="ttname"><a href="classscram_1_1core_1_1Bdd.xhtml#abac07f2126ed657d744a92e4f88415fd">scram::core::Bdd::VertexPtr</a></div><div class="ttdeci">IntrusivePtr&lt; Vertex&lt; Ite &gt;&gt; VertexPtr</div><div class="ttdoc">BDD vertex base. </div><div class="ttdef"><b>Definition:</b> <a href="bdd_8h_source.xhtml#l00692">bdd.h:692</a></div></div>
<div class="ttc" id="event_8h_xhtml"><div class="ttname"><a href="event_8h.xhtml">event.h</a></div><div class="ttdoc">Contains event classes for fault trees. </div></div>
<div class="ttc" id="namespacescram_1_1core_xhtml"><div class="ttname"><a href="namespacescram_1_1core.xhtml">scram::core</a></div><div class="ttdef"><b>Definition:</b> <a href="analysis_8cc_source.xhtml#l00023">analysis.cc:23</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1NonTerminal_xhtml_a7b184b2ba68a289aae9f3737f1d13b97"><div class="ttname"><a href="classscram_1_1core_1_1NonTerminal.xhtml#a7b184b2ba68a289aae9f3737f1d13b97">scram::core::NonTerminal::high</a></div><div class="ttdeci">const VertexPtr &amp; high() const </div><div class="ttdef"><b>Definition:</b> <a href="bdd_8h_source.xhtml#l00293">bdd.h:293</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Ite_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1Ite.xhtml">scram::core::Ite</a></div><div class="ttdoc">Representation of non-terminal if-then-else vertices in BDD graphs. </div><div class="ttdef"><b>Definition:</b> <a href="bdd_8h_source.xhtml#l00327">bdd.h:327</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1Bdd_1_1Function_xhtml_a2b5daa48590ae16124dfd66271439c5e"><div class="ttname"><a href="structscram_1_1core_1_1Bdd_1_1Function.xhtml#a2b5daa48590ae16124dfd66271439c5e">scram::core::Bdd::Function::vertex</a></div><div class="ttdeci">VertexPtr vertex</div><div class="ttdoc">The root vertex of the BDD function graph. </div><div class="ttdef"><b>Definition:</b> <a href="bdd_8h_source.xhtml#l00698">bdd.h:698</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1NonTerminal_xhtml_aeeaafd82ae5890a7ec3462c68ffc8628"><div class="ttname"><a href="classscram_1_1core_1_1NonTerminal.xhtml#aeeaafd82ae5890a7ec3462c68ffc8628">scram::core::NonTerminal::index</a></div><div class="ttdeci">int index() const </div><div class="ttdef"><b>Definition:</b> <a href="bdd_8h_source.xhtml#l00267">bdd.h:267</a></div></div>
<div class="ttc" id="logger_8h_xhtml_a8cc0e8b39d76d12fd165097dbc8cf81ea1571c622645c44a111d16a86ebde8b44"><div class="ttname"><a href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea1571c622645c44a111d16a86ebde8b44">scram::DEBUG3</a></div><div class="ttdoc">Debugging information for the code inside of DEBUG2. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00080">logger.h:80</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1NonTerminal_xhtml_a7b70ab1b978f3197458c95e0891fd79c"><div class="ttname"><a href="classscram_1_1core_1_1NonTerminal.xhtml#a7b70ab1b978f3197458c95e0891fd79c">scram::core::NonTerminal::mark</a></div><div class="ttdeci">bool mark() const </div><div class="ttdef"><b>Definition:</b> <a href="bdd_8h_source.xhtml#l00299">bdd.h:299</a></div></div>
<div class="ttc" id="logger_8h_xhtml_aba7b09d6e8fbe414c23705ad24dde6ff"><div class="ttname"><a href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a></div><div class="ttdeci">#define LOG(level)</div><div class="ttdoc">Logging with a level. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00060">logger.h:60</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Analysis_xhtml_ab04a96c555ba726368fa3868a8701610"><div class="ttname"><a href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">scram::core::Analysis::settings</a></div><div class="ttdeci">const Settings &amp; settings() const </div><div class="ttdef"><b>Definition:</b> <a href="analysis_8h_source.xhtml#l00042">analysis.h:42</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Settings_xhtml_a4a71410d7b91bb82cadc29c0fe0b2506"><div class="ttname"><a href="classscram_1_1core_1_1Settings.xhtml#a4a71410d7b91bb82cadc29c0fe0b2506">scram::core::Settings::ccf_analysis</a></div><div class="ttdeci">bool ccf_analysis() const </div><div class="ttdef"><b>Definition:</b> <a href="settings_8h_source.xhtml#l00278">settings.h:278</a></div></div>
<div class="ttc" id="probability__analysis_8h_xhtml"><div class="ttname"><a href="probability__analysis_8h.xhtml">probability_analysis.h</a></div><div class="ttdoc">Contains functionality to do numerical analysis of probabilities. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1MissionTime_xhtml_abedd4c16a7c428fc8192ec32d51beb3e"><div class="ttname"><a href="classscram_1_1mef_1_1MissionTime.xhtml#abedd4c16a7c428fc8192ec32d51beb3e">scram::mef::MissionTime::value</a></div><div class="ttdeci">void value(double time)</div><div class="ttdoc">Changes the mission time value. </div><div class="ttdef"><b>Definition:</b> <a href="parameter_8cc_source.xhtml#l00031">parameter.cc:31</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1ProbabilityAnalysis_xhtml_a82f8b59ec2fe15be5b9d34d6e21ecf28"><div class="ttname"><a href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#a82f8b59ec2fe15be5b9d34d6e21ecf28">scram::core::ProbabilityAnalysis::ProbabilityAnalysis</a></div><div class="ttdeci">ProbabilityAnalysis(const FaultTreeAnalysis *fta, mef::MissionTime *mission_time)</div><div class="ttdoc">Probability analysis with the results of qualitative analysis. </div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8cc_source.xhtml#l00034">probability_analysis.cc:34</a></div></div>
<div class="ttc" id="logger_8h_xhtml_a8cc0e8b39d76d12fd165097dbc8cf81ea2a5fff04371a557db59be045fd44fc04"><div class="ttname"><a href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea2a5fff04371a557db59be045fd44fc04">scram::DEBUG4</a></div><div class="ttdoc">Debugging information for the code inside of DEBUG3. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00081">logger.h:81</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1McubCalculator_xhtml_af47379d2ba9190b34aef1acfa402e15c"><div class="ttname"><a href="classscram_1_1core_1_1McubCalculator.xhtml#af47379d2ba9190b34aef1acfa402e15c">scram::core::McubCalculator::Calculate</a></div><div class="ttdeci">double Calculate(const Zbdd &amp;cut_sets, const Pdag::IndexMap&lt; double &gt; &amp;p_vars) noexcept</div><div class="ttdoc">Calculates probabilities using the minimal cut set upper bound (MCUB) approximation. </div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8cc_source.xhtml#l00179">probability_analysis.cc:179</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1ProbabilityAnalysis_xhtml_ab68a356b0bdeb793d30d3b6e84847d12"><div class="ttname"><a href="classscram_1_1core_1_1ProbabilityAnalysis.xhtml#ab68a356b0bdeb793d30d3b6e84847d12">scram::core::ProbabilityAnalysis::Analyze</a></div><div class="ttdeci">void Analyze() noexcept</div><div class="ttdoc">Performs quantitative analysis on the supplied fault tree. </div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8cc_source.xhtml#l00038">probability_analysis.cc:38</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Analysis_xhtml_a1a4f345f29240b0236853641f728a103"><div class="ttname"><a href="classscram_1_1core_1_1Analysis.xhtml#a1a4f345f29240b0236853641f728a103">scram::core::Analysis::AddAnalysisTime</a></div><div class="ttdeci">void AddAnalysisTime(double time)</div><div class="ttdoc">Adds time to the total analysis time. </div><div class="ttdef"><b>Definition:</b> <a href="analysis_8h_source.xhtml#l00066">analysis.h:66</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Ite_xhtml_ac059e4ac83547ef311c55b7ab1954a57"><div class="ttname"><a href="classscram_1_1core_1_1Ite.xhtml#ac059e4ac83547ef311c55b7ab1954a57">scram::core::Ite::p</a></div><div class="ttdeci">double p() const </div><div class="ttdef"><b>Definition:</b> <a href="bdd_8h_source.xhtml#l00349">bdd.h:349</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1ProbabilityAnalyzer_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1ProbabilityAnalyzer.xhtml">scram::core::ProbabilityAnalyzer</a></div><div class="ttdoc">Fault-tree-analysis-aware probability analyzer. </div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8h_source.xhtml#l00251">probability_analysis.h:251</a></div></div>
<div class="ttc" id="settings_8h_xhtml"><div class="ttname"><a href="settings_8h.xhtml">settings.h</a></div><div class="ttdoc">Builder for settings. </div></div>
<div class="ttc" id="structscram_1_1core_1_1Bdd_1_1Function_xhtml_aa0c4dba36b68a6a2ae496573346b887c"><div class="ttname"><a href="structscram_1_1core_1_1Bdd_1_1Function.xhtml#aa0c4dba36b68a6a2ae496573346b887c">scram::core::Bdd::Function::complement</a></div><div class="ttdeci">bool complement</div><div class="ttdoc">The interpretation of the function. </div><div class="ttdef"><b>Definition:</b> <a href="bdd_8h_source.xhtml#l00697">bdd.h:697</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Analysis_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1Analysis.xhtml">scram::core::Analysis</a></div><div class="ttdoc">Base abstract class for all analysis with settings. </div><div class="ttdef"><b>Definition:</b> <a href="analysis_8h_source.xhtml#l00034">analysis.h:34</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Settings_xhtml_a2bc9e5d7c8028a8fd8e2ea02d766bb2b"><div class="ttname"><a href="classscram_1_1core_1_1Settings.xhtml#a2bc9e5d7c8028a8fd8e2ea02d766bb2b">scram::core::Settings::time_step</a></div><div class="ttdeci">double time_step() const </div><div class="ttdef"><b>Definition:</b> <a href="settings_8h_source.xhtml#l00196">settings.h:196</a></div></div>
<div class="ttc" id="logger_8h_xhtml_a8cc0e8b39d76d12fd165097dbc8cf81ea064d45d966cf5368bd8a5e317e65a0e6"><div class="ttname"><a href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea064d45d966cf5368bd8a5e317e65a0e6">scram::DEBUG2</a></div><div class="ttdoc">Debugging information for the code inside of DEBUG1. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00079">logger.h:79</a></div></div>
<div class="ttc" id="classext_1_1index__map_xhtml"><div class="ttname"><a href="classext_1_1index__map.xhtml">ext::index_map</a></div><div class="ttdoc">An adaptor map to shift zero-based containers to a different base. </div><div class="ttdef"><b>Definition:</b> <a href="index__map_8h_source.xhtml#l00037">index_map.h:37</a></div></div>
<div class="ttc" id="logger_8h_xhtml_a8501f67861832d9efa717e17010648f5"><div class="ttname"><a href="logger_8h.xhtml#a8501f67861832d9efa717e17010648f5">CLOCK</a></div><div class="ttdeci">#define CLOCK(var)</div><div class="ttdoc">Starts the timing in nanoseconds. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00047">logger.h:47</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1IntrusivePtrCast_xhtml_af153c12dc6133b7d9f9b7a57bba29f1d"><div class="ttname"><a href="structscram_1_1core_1_1IntrusivePtrCast.xhtml#af153c12dc6133b7d9f9b7a57bba29f1d">scram::core::IntrusivePtrCast&lt; Ite &gt;::Ref</a></div><div class="ttdeci">static Ite &amp; Ref(const IntrusivePtr&lt; Vertex&lt; Ite &gt;&gt; &amp;vertex)</div><div class="ttdef"><b>Definition:</b> <a href="bdd_8h_source.xhtml#l00067">bdd.h:67</a></div></div>
<div class="ttc" id="parameter_8h_xhtml"><div class="ttname"><a href="parameter_8h.xhtml">parameter.h</a></div><div class="ttdoc">Parameter expressions that act like a shareable variable. </div></div>
<div class="ttc" id="classscram_1_1core_1_1Pdag_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1Pdag.xhtml">scram::core::Pdag</a></div><div class="ttdoc">PDAG is a propositional directed acyclic graph. </div><div class="ttdef"><b>Definition:</b> <a href="pdag_8h_source.xhtml#l00780">pdag.h:780</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1FaultTreeAnalysis_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1FaultTreeAnalysis.xhtml">scram::core::FaultTreeAnalysis</a></div><div class="ttdoc">Fault tree analysis functionality. </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree__analysis_8h_source.xhtml#l00203">fault_tree_analysis.h:203</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1ProbabilityAnalyzerBase_xhtml_a509947ba8cc81815779840c27c5bba09"><div class="ttname"><a href="classscram_1_1core_1_1ProbabilityAnalyzerBase.xhtml#a509947ba8cc81815779840c27c5bba09">scram::core::ProbabilityAnalyzerBase::p_vars</a></div><div class="ttdeci">const Pdag::IndexMap&lt; double &gt; &amp; p_vars() const </div><div class="ttdef"><b>Definition:</b> <a href="probability__analysis_8h_source.xhtml#l00206">probability_analysis.h:206</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1FaultTreeAnalyzer_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1FaultTreeAnalyzer.xhtml">scram::core::FaultTreeAnalyzer</a></div><div class="ttdoc">Fault tree analysis facility with specific algorithms. </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree__analysis_8h_source.xhtml#l00291">fault_tree_analysis.h:291</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:37 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
