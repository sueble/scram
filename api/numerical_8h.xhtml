<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>numerical.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_eacaf28dc2715349d1b93fdb7927a3cb.xhtml">expression</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a>  </div>
  <div class="headertitle">
<div class="title">numerical.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A collection of numerical expressions.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &lt;cmath&gt;</code><br />
<code>#include &lt;functional&gt;</code><br />
<code>#include &lt;vector&gt;</code><br />
<code>#include &quot;<a class="el" href="constant_8h_source.xhtml">constant.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="expression_8h_source.xhtml">src/expression.h</a>&quot;</code><br />
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for numerical.h:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="numerical_8h__incl.svg" width="100%" height="507"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</div><div class="textblock"><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> This graph shows which files directly or indirectly include this file:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="numerical_8h__dep__incl.svg" width="550" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div>
<p><a href="numerical_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structscram_1_1mef_1_1Functor.xhtml">scram::mef::Functor&lt; F &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a functor out of function pointer to common cmath functions.  <a href="structscram_1_1mef_1_1Functor.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structscram_1_1mef_1_1Bifunctor.xhtml">scram::mef::Bifunctor&lt; F &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a functor for functions with two arguments.  <a href="structscram_1_1mef_1_1Bifunctor.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1mef_1_1Mean.xhtml">scram::mef::Mean</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The average of argument expression values.  <a href="classscram_1_1mef_1_1Mean.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a5a459c2c80e5c53c6f81efef19f07d92"><td class="memTemplParams" colspan="2"><a class="anchor" id="a5a459c2c80e5c53c6f81efef19f07d92"></a>
template&lt;double(*)(double) F&gt; </td></tr>
<tr class="memitem:a5a459c2c80e5c53c6f81efef19f07d92"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a5a459c2c80e5c53c6f81efef19f07d92">scram::mef::FunctorExpression</a> = NaryExpression&lt; Functor&lt; F &gt;, 1 &gt;</td></tr>
<tr class="memdesc:a5a459c2c80e5c53c6f81efef19f07d92"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classscram_1_1mef_1_1Expression.xhtml" title="Abstract base class for all sorts of expressions to describe events. ">Expression</a> with a functor wrapping a function. <br /></td></tr>
<tr class="separator:a5a459c2c80e5c53c6f81efef19f07d92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07e3874256114af5dbe4b8c9c5af326c"><td class="memTemplParams" colspan="2"><a class="anchor" id="a07e3874256114af5dbe4b8c9c5af326c"></a>
template&lt;double(*)(double, double) F&gt; </td></tr>
<tr class="memitem:a07e3874256114af5dbe4b8c9c5af326c"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a07e3874256114af5dbe4b8c9c5af326c">scram::mef::BifunctorExpression</a> = NaryExpression&lt; Bifunctor&lt; F &gt;, 2 &gt;</td></tr>
<tr class="memdesc:a07e3874256114af5dbe4b8c9c5af326c"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classscram_1_1mef_1_1Expression.xhtml" title="Abstract base class for all sorts of expressions to describe events. ">Expression</a> with a bifunctor wrapping a function. <br /></td></tr>
<tr class="separator:a07e3874256114af5dbe4b8c9c5af326c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7e465d054e927e109802a577bf1a2cb"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af7e465d054e927e109802a577bf1a2cb"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#af7e465d054e927e109802a577bf1a2cb">scram::mef::Neg</a> = NaryExpression&lt; std::negate&lt;&gt;, 1 &gt;</td></tr>
<tr class="memdesc:af7e465d054e927e109802a577bf1a2cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Negation. <br /></td></tr>
<tr class="separator:af7e465d054e927e109802a577bf1a2cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a804ce76c83542eb53d6da4c06cb9c1f0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a804ce76c83542eb53d6da4c06cb9c1f0"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a804ce76c83542eb53d6da4c06cb9c1f0">scram::mef::Add</a> = NaryExpression&lt; std::plus&lt;&gt;,-1 &gt;</td></tr>
<tr class="memdesc:a804ce76c83542eb53d6da4c06cb9c1f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sum operation. <br /></td></tr>
<tr class="separator:a804ce76c83542eb53d6da4c06cb9c1f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa97069a2c920e07990f6f10edbc49e77"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa97069a2c920e07990f6f10edbc49e77"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#aa97069a2c920e07990f6f10edbc49e77">scram::mef::Sub</a> = NaryExpression&lt; std::minus&lt;&gt;,-1 &gt;</td></tr>
<tr class="memdesc:aa97069a2c920e07990f6f10edbc49e77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtraction from the first. <br /></td></tr>
<tr class="separator:aa97069a2c920e07990f6f10edbc49e77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ae608a3e3a5e95704c103b9925e4c5c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7ae608a3e3a5e95704c103b9925e4c5c"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a7ae608a3e3a5e95704c103b9925e4c5c">scram::mef::Mul</a> = NaryExpression&lt; std::multiplies&lt;&gt;,-1 &gt;</td></tr>
<tr class="memdesc:a7ae608a3e3a5e95704c103b9925e4c5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Product. <br /></td></tr>
<tr class="separator:a7ae608a3e3a5e95704c103b9925e4c5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a625a191f5089e546a071872fbcf2eed9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a625a191f5089e546a071872fbcf2eed9"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a625a191f5089e546a071872fbcf2eed9">scram::mef::Div</a> = NaryExpression&lt; std::divides&lt;&gt;,-1 &gt;</td></tr>
<tr class="memdesc:a625a191f5089e546a071872fbcf2eed9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Division of the first. <br /></td></tr>
<tr class="separator:a625a191f5089e546a071872fbcf2eed9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79328e01db5a3951cba70eb221ac869e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a79328e01db5a3951cba70eb221ac869e"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a79328e01db5a3951cba70eb221ac869e">scram::mef::Abs</a> = FunctorExpression&lt;&amp;std::abs &gt;</td></tr>
<tr class="memdesc:a79328e01db5a3951cba70eb221ac869e"><td class="mdescLeft">&#160;</td><td class="mdescRight">The absolute value. <br /></td></tr>
<tr class="separator:a79328e01db5a3951cba70eb221ac869e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad263e38c78f975ec1a8946f4e954ed47"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad263e38c78f975ec1a8946f4e954ed47"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#ad263e38c78f975ec1a8946f4e954ed47">scram::mef::Acos</a> = FunctorExpression&lt;&amp;std::acos &gt;</td></tr>
<tr class="memdesc:ad263e38c78f975ec1a8946f4e954ed47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Arc cosine. <br /></td></tr>
<tr class="separator:ad263e38c78f975ec1a8946f4e954ed47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a9a53b2d91c007820dc0c4536f2f2ae"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0a9a53b2d91c007820dc0c4536f2f2ae"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a0a9a53b2d91c007820dc0c4536f2f2ae">scram::mef::Asin</a> = FunctorExpression&lt;&amp;std::asin &gt;</td></tr>
<tr class="memdesc:a0a9a53b2d91c007820dc0c4536f2f2ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Arc sine. <br /></td></tr>
<tr class="separator:a0a9a53b2d91c007820dc0c4536f2f2ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f735336f89f8238f9b7cdec05761276"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9f735336f89f8238f9b7cdec05761276"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a9f735336f89f8238f9b7cdec05761276">scram::mef::Atan</a> = FunctorExpression&lt;&amp;std::atan &gt;</td></tr>
<tr class="memdesc:a9f735336f89f8238f9b7cdec05761276"><td class="mdescLeft">&#160;</td><td class="mdescRight">Arc tangent. <br /></td></tr>
<tr class="separator:a9f735336f89f8238f9b7cdec05761276"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ff7b2f059c0169cdb892c620dc31613"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3ff7b2f059c0169cdb892c620dc31613"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a3ff7b2f059c0169cdb892c620dc31613">scram::mef::Cos</a> = FunctorExpression&lt;&amp;std::cos &gt;</td></tr>
<tr class="memdesc:a3ff7b2f059c0169cdb892c620dc31613"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cosine. <br /></td></tr>
<tr class="separator:a3ff7b2f059c0169cdb892c620dc31613"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e230bf04444cb8dbf37aa55dee66fb9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2e230bf04444cb8dbf37aa55dee66fb9"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a2e230bf04444cb8dbf37aa55dee66fb9">scram::mef::Sin</a> = FunctorExpression&lt;&amp;std::sin &gt;</td></tr>
<tr class="memdesc:a2e230bf04444cb8dbf37aa55dee66fb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sine. <br /></td></tr>
<tr class="separator:a2e230bf04444cb8dbf37aa55dee66fb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfc2deab5f3d565487a9172eb46e3b80"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adfc2deab5f3d565487a9172eb46e3b80"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#adfc2deab5f3d565487a9172eb46e3b80">scram::mef::Tan</a> = FunctorExpression&lt;&amp;std::tan &gt;</td></tr>
<tr class="memdesc:adfc2deab5f3d565487a9172eb46e3b80"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tangent. <br /></td></tr>
<tr class="separator:adfc2deab5f3d565487a9172eb46e3b80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c83ea88335abcc87bf57f04760448f0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0c83ea88335abcc87bf57f04760448f0"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a0c83ea88335abcc87bf57f04760448f0">scram::mef::Cosh</a> = FunctorExpression&lt;&amp;std::cosh &gt;</td></tr>
<tr class="memdesc:a0c83ea88335abcc87bf57f04760448f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Hyperbolic cosine. <br /></td></tr>
<tr class="separator:a0c83ea88335abcc87bf57f04760448f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf46d63365c2a7617042bfdc8d2fa990"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abf46d63365c2a7617042bfdc8d2fa990"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#abf46d63365c2a7617042bfdc8d2fa990">scram::mef::Sinh</a> = FunctorExpression&lt;&amp;std::sinh &gt;</td></tr>
<tr class="memdesc:abf46d63365c2a7617042bfdc8d2fa990"><td class="mdescLeft">&#160;</td><td class="mdescRight">Hyperbolic sine. <br /></td></tr>
<tr class="separator:abf46d63365c2a7617042bfdc8d2fa990"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c0944be0aa4f6a553bc5072da0758db"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3c0944be0aa4f6a553bc5072da0758db"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a3c0944be0aa4f6a553bc5072da0758db">scram::mef::Tanh</a> = FunctorExpression&lt;&amp;std::tanh &gt;</td></tr>
<tr class="memdesc:a3c0944be0aa4f6a553bc5072da0758db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Hyperbolic tangent. <br /></td></tr>
<tr class="separator:a3c0944be0aa4f6a553bc5072da0758db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29e02ec7f01721fb70b4f418c7427922"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a29e02ec7f01721fb70b4f418c7427922"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a29e02ec7f01721fb70b4f418c7427922">scram::mef::Exp</a> = FunctorExpression&lt;&amp;std::exp &gt;</td></tr>
<tr class="memdesc:a29e02ec7f01721fb70b4f418c7427922"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classscram_1_1mef_1_1Exponential.xhtml" title="Negative exponential distribution with hourly failure rate and time. ">Exponential</a>. <br /></td></tr>
<tr class="separator:a29e02ec7f01721fb70b4f418c7427922"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3b350057c8fd2b7e553aefdb40fc8a4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af3b350057c8fd2b7e553aefdb40fc8a4"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#af3b350057c8fd2b7e553aefdb40fc8a4">scram::mef::Log</a> = FunctorExpression&lt;&amp;std::log &gt;</td></tr>
<tr class="memdesc:af3b350057c8fd2b7e553aefdb40fc8a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Natural logarithm. <br /></td></tr>
<tr class="separator:af3b350057c8fd2b7e553aefdb40fc8a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93b551f6095c44bcd103e81fe0f4e7a6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a93b551f6095c44bcd103e81fe0f4e7a6"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a93b551f6095c44bcd103e81fe0f4e7a6">scram::mef::Log10</a> = FunctorExpression&lt;&amp;std::log10 &gt;</td></tr>
<tr class="memdesc:a93b551f6095c44bcd103e81fe0f4e7a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decimal logarithm. <br /></td></tr>
<tr class="separator:a93b551f6095c44bcd103e81fe0f4e7a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb7ec0a34f20c551a2b0b94e8e773892"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acb7ec0a34f20c551a2b0b94e8e773892"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#acb7ec0a34f20c551a2b0b94e8e773892">scram::mef::Mod</a> = NaryExpression&lt; std::modulus&lt; int &gt;, 2 &gt;</td></tr>
<tr class="memdesc:acb7ec0a34f20c551a2b0b94e8e773892"><td class="mdescLeft">&#160;</td><td class="mdescRight">Modulo (%) operation. <br /></td></tr>
<tr class="separator:acb7ec0a34f20c551a2b0b94e8e773892"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba4d83136de297ce76261c42b0ca726a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aba4d83136de297ce76261c42b0ca726a"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#aba4d83136de297ce76261c42b0ca726a">scram::mef::Pow</a> = BifunctorExpression&lt;&amp;std::pow &gt;</td></tr>
<tr class="memdesc:aba4d83136de297ce76261c42b0ca726a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base raised to a power. <br /></td></tr>
<tr class="separator:aba4d83136de297ce76261c42b0ca726a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23bd4e9aa922595ef8df4a3cbb566ea9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a23bd4e9aa922595ef8df4a3cbb566ea9"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a23bd4e9aa922595ef8df4a3cbb566ea9">scram::mef::Sqrt</a> = FunctorExpression&lt;&amp;std::sqrt &gt;</td></tr>
<tr class="memdesc:a23bd4e9aa922595ef8df4a3cbb566ea9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Square root. <br /></td></tr>
<tr class="separator:a23bd4e9aa922595ef8df4a3cbb566ea9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ea5f6e503f2be363f44c6741707d249"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3ea5f6e503f2be363f44c6741707d249"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a3ea5f6e503f2be363f44c6741707d249">scram::mef::Ceil</a> = FunctorExpression&lt;&amp;std::ceil &gt;</td></tr>
<tr class="memdesc:a3ea5f6e503f2be363f44c6741707d249"><td class="mdescLeft">&#160;</td><td class="mdescRight">Nearest (&gt;=) integer. <br /></td></tr>
<tr class="separator:a3ea5f6e503f2be363f44c6741707d249"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81ed353f4487f9d0c79353236794cfaa"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a81ed353f4487f9d0c79353236794cfaa"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a81ed353f4487f9d0c79353236794cfaa">scram::mef::Floor</a> = FunctorExpression&lt;&amp;std::floor &gt;</td></tr>
<tr class="memdesc:a81ed353f4487f9d0c79353236794cfaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Nearest (&lt;=) integer. <br /></td></tr>
<tr class="separator:a81ed353f4487f9d0c79353236794cfaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc5aeca6ec55b883ba77ea9f2a117aca"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afc5aeca6ec55b883ba77ea9f2a117aca"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#afc5aeca6ec55b883ba77ea9f2a117aca">scram::mef::Min</a> = NaryExpression&lt; Bifunctor&lt;&amp;std::fmin &gt;,-1 &gt;</td></tr>
<tr class="memdesc:afc5aeca6ec55b883ba77ea9f2a117aca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Minimum value. <br /></td></tr>
<tr class="separator:afc5aeca6ec55b883ba77ea9f2a117aca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91037c9334f528bf475a047fa5c47ecf"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a91037c9334f528bf475a047fa5c47ecf"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="numerical_8h.xhtml#a91037c9334f528bf475a047fa5c47ecf">scram::mef::Max</a> = NaryExpression&lt; Bifunctor&lt;&amp;std::fmax &gt;,-1 &gt;</td></tr>
<tr class="memdesc:a91037c9334f528bf475a047fa5c47ecf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Maximum value. <br /></td></tr>
<tr class="separator:a91037c9334f528bf475a047fa5c47ecf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A collection of numerical expressions. </p>
<dl class="section note"><dt>Note</dt><dd>The PI value is located in constant expressions. </dd></dl>

<p>Definition in file <a class="el" href="numerical_8h_source.xhtml">numerical.h</a>.</p>
</div></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:37 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
