<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>risk_analysis.cc Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">risk_analysis.cc</div>  </div>
</div><!--header-->
<div class="contents">
<a href="risk__analysis_8cc.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2014-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// Implementation of risk analysis handler.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="risk__analysis_8h.xhtml">risk_analysis.h</a>&quot;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="bdd_8h.xhtml">bdd.h</a>&quot;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="random__deviate_8h.xhtml">expression/random_deviate.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="scope__guard_8h.xhtml">ext/scope_guard.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="fault__tree_8h.xhtml">fault_tree.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="logger_8h.xhtml">logger.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="mocus_8h.xhtml">mocus.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="zbdd_8h.xhtml">zbdd.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram_1_1core.xhtml">scram::core</a> {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a008399361b34a979653806bb032582c0">   33</a></span>&#160;<a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a008399361b34a979653806bb032582c0">RiskAnalysis::RiskAnalysis</a>(<a class="code" href="classscram_1_1mef_1_1Model.xhtml">mef::Model</a>* model, <span class="keyword">const</span> <a class="code" href="classscram_1_1core_1_1Settings.xhtml">Settings</a>&amp; settings)</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    : <a class="code" href="classscram_1_1core_1_1Analysis.xhtml">Analysis</a>(settings), model_(model) {}</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a7aed757ac5a7a96878c2706a7a9710bb">   36</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1core_1_1RiskAnalysis.xhtml#a7aed757ac5a7a96878c2706a7a9710bb">RiskAnalysis::Analyze</a>() noexcept {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  assert(results_.empty() &amp;&amp; <span class="stringliteral">&quot;Rerunning the analysis.&quot;</span>);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="comment">// Set the seed for the pseudo-random number generator if given explicitly.</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="comment">// Otherwise it defaults to the implementation dependent value.</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>().<a class="code" href="classscram_1_1core_1_1Settings.xhtml#a9937a41d3fd1369f2eea59e1f33a1ac5">seed</a>() &gt;= 0)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="classscram_1_1mef_1_1RandomDeviate.xhtml#a078bf1c19e467ec90c578e0f388155d9">mef::RandomDeviate::seed</a>(<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>().<a class="code" href="classscram_1_1core_1_1Settings.xhtml#a9937a41d3fd1369f2eea59e1f33a1ac5">seed</a>());</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordflow">if</span> (model_-&gt;<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a2b8db43cf577f66dbdcae54e4065d552">alignments</a>().empty()) {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    RunAnalysis();</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="alignment_8h.xhtml#a1db04a95962852f2791c86ea3bcf9861">mef::AlignmentPtr</a>&amp; alignment : model_-&gt;<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a2b8db43cf577f66dbdcae54e4065d552">alignments</a>()) {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="alignment_8h.xhtml#a6c8bec380e8765eecb85692acce281bf">mef::PhasePtr</a>&amp; phase : alignment-&gt;phases())</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        RunAnalysis(<a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1Context.xhtml">Context</a>{*alignment, *phase});</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    }</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  }</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">void</span> RiskAnalysis::RunAnalysis(std::optional&lt;Context&gt; context) noexcept {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  std::vector&lt;std::pair&lt;mef::HouseEvent*, bool&gt;&gt; house_events;<span class="comment"></span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">  /// Restores the model after application of the context.</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"></span>  ext::scope_guard restorator(</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      [&amp;house_events, <span class="keyword">this</span>, init_time = model_-&gt;<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a8a215a2dd25789bfa65d41cc28b0ac4f">mission_time</a>().<a class="code" href="classscram_1_1mef_1_1MissionTime.xhtml#abedd4c16a7c428fc8192ec32d51beb3e">value</a>() ] {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        model_-&gt;<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a8a215a2dd25789bfa65d41cc28b0ac4f">mission_time</a>().<a class="code" href="classscram_1_1mef_1_1MissionTime.xhtml#abedd4c16a7c428fc8192ec32d51beb3e">value</a>(init_time);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>().<a class="code" href="classscram_1_1core_1_1Settings.xhtml#a0c130c599ff39bd4a5b269907f06b66d">mission_time</a>(init_time);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">const</span> std::pair&lt;mef::HouseEvent*, bool&gt;&amp; entry : house_events)</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;          entry.first-&gt;state(entry.second);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      });</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordflow">if</span> (context) {</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">double</span> mission_time =</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        context-&gt;phase.time_fraction() * model_-&gt;<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a8a215a2dd25789bfa65d41cc28b0ac4f">mission_time</a>().<a class="code" href="classscram_1_1mef_1_1MissionTime.xhtml#abedd4c16a7c428fc8192ec32d51beb3e">value</a>();</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    model_-&gt;<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a8a215a2dd25789bfa65d41cc28b0ac4f">mission_time</a>().<a class="code" href="classscram_1_1mef_1_1MissionTime.xhtml#abedd4c16a7c428fc8192ec32d51beb3e">value</a>(mission_time);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>().<a class="code" href="classscram_1_1core_1_1Settings.xhtml#a0c130c599ff39bd4a5b269907f06b66d">mission_time</a>(mission_time);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1SetHouseEvent.xhtml">mef::SetHouseEvent</a>* instruction :</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;         context-&gt;phase.instructions()) {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      <span class="keyword">auto</span> it = model_-&gt;<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a2ddd6d121e1ab6fbe140fc3fb449cd96">house_events</a>().find(instruction-&gt;name());</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      assert(it != model_-&gt;<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a2ddd6d121e1ab6fbe140fc3fb449cd96">house_events</a>().end() &amp;&amp; <span class="stringliteral">&quot;Invalid instruction.&quot;</span>);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <a class="code" href="classscram_1_1mef_1_1HouseEvent.xhtml">mef::HouseEvent</a>* house_event = it-&gt;get();</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      <span class="keywordflow">if</span> (house_event-&gt;state() != instruction-&gt;state()) {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        house_events.emplace_back(house_event, house_event-&gt;state());</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        house_event-&gt;<a class="code" href="classscram_1_1mef_1_1HouseEvent.xhtml#a15ab4daf36b62127703cf610bdc80183">state</a>(instruction-&gt;state());</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      }</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="event__tree_8h.xhtml#a11e578b8e757b3eaa293a1c657f1f29a">mef::InitiatingEventPtr</a>&amp; initiating_event :</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;       model_-&gt;<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a04f7628e1d3a27295d2ac7bbdc7ab26b">initiating_events</a>()) {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">if</span> (initiating_event-&gt;event_tree()) {</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea7df87650b378ce7a39dec3fad22844b2">INFO</a>) &lt;&lt; <span class="stringliteral">&quot;Running event tree analysis: &quot;</span> &lt;&lt; initiating_event-&gt;name();</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      <span class="keyword">auto</span> eta = std::make_unique&lt;EventTreeAnalysis&gt;(</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;          *initiating_event, <a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>(), model_-&gt;<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a13bd4eb71c3f15f4eece041f19488744">context</a>());</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      eta-&gt;Analyze();</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordflow">for</span> (<a class="code" href="structscram_1_1core_1_1EventTreeAnalysis_1_1Result.xhtml">EventTreeAnalysis::Result</a>&amp; result : eta-&gt;sequences()) {</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1Sequence.xhtml">mef::Sequence</a>&amp; sequence = result.sequence;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea7df87650b378ce7a39dec3fad22844b2">INFO</a>) &lt;&lt; <span class="stringliteral">&quot;Running analysis for sequence: &quot;</span> &lt;&lt; sequence.<a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a>();</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        results_.push_back(</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            {{std::pair&lt;const mef::InitiatingEvent&amp;, const mef::Sequence&amp;&gt;{</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                  *initiating_event, sequence},</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;              context}});</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        RunAnalysis(*result.gate, &amp;results_.back());</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">if</span> (result.is_expression_only) {</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;          results_.back().fault_tree_analysis = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;          results_.back().importance_analysis = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        }</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>().probability_analysis())</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;          result.p_sequence = results_.back().probability_analysis-&gt;p_total();</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea7df87650b378ce7a39dec3fad22844b2">INFO</a>) &lt;&lt; <span class="stringliteral">&quot;Finished analysis for sequence: &quot;</span> &lt;&lt; sequence.<a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a>();</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      }</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      event_tree_results_.push_back(</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;          {*initiating_event, context, std::move(eta)});</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea7df87650b378ce7a39dec3fad22844b2">INFO</a>) &lt;&lt; <span class="stringliteral">&quot;Finished event tree analysis: &quot;</span> &lt;&lt; initiating_event-&gt;name();</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  }</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="fault__tree_8h.xhtml#a8538f816ccf630916e93bd1432fa07d6">mef::FaultTreePtr</a>&amp; ft : model_-&gt;<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a9bac9a7746026484f3dc69a3ccb2ac4a">fault_trees</a>()) {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1Gate.xhtml">mef::Gate</a>* target : ft-&gt;top_events()) {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea7df87650b378ce7a39dec3fad22844b2">INFO</a>) &lt;&lt; <span class="stringliteral">&quot;Running analysis for gate: &quot;</span> &lt;&lt; target-&gt;id();</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      results_.push_back({{target, context}});</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      RunAnalysis(*target, &amp;results_.back());</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea7df87650b378ce7a39dec3fad22844b2">INFO</a>) &lt;&lt; <span class="stringliteral">&quot;Finished analysis for gate: &quot;</span> &lt;&lt; target-&gt;id();</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    }</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  }</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keywordtype">void</span> RiskAnalysis::RunAnalysis(<span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1Gate.xhtml">mef::Gate</a>&amp; target,</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                               <a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1Result.xhtml">Result</a>* result) noexcept {</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keywordflow">switch</span> (<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>().algorithm()) {</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">case</span> Algorithm::kBdd:</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      <span class="keywordflow">return</span> RunAnalysis&lt;Bdd&gt;(target, result);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">case</span> Algorithm::kZbdd:</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <span class="keywordflow">return</span> RunAnalysis&lt;Zbdd&gt;(target, result);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">case</span> Algorithm::kMocus:</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;      <span class="keywordflow">return</span> RunAnalysis&lt;Mocus&gt;(target, result);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> Algorithm&gt;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keywordtype">void</span> RiskAnalysis::RunAnalysis(<span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1Gate.xhtml">mef::Gate</a>&amp; target,</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                               <a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1Result.xhtml">Result</a>* result) noexcept {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keyword">auto</span> fta = std::make_unique&lt;FaultTreeAnalyzer&lt;Algorithm&gt;&gt;(</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      target, <a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>(), model_);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  fta-&gt;Analyze();</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>().probability_analysis()) {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">switch</span> (<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>().approximation()) {</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      <span class="keywordflow">case</span> Approximation::kNone:</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        RunAnalysis&lt;Algorithm, Bdd&gt;(fta.get(), result);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      <span class="keywordflow">case</span> Approximation::kRareEvent:</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        RunAnalysis&lt;Algorithm, RareEventCalculator&gt;(fta.get(), result);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      <span class="keywordflow">case</span> Approximation::kMcub:</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        RunAnalysis&lt;Algorithm, McubCalculator&gt;(fta.get(), result);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    }</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  result-&gt;<a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1Result.xhtml#a2ed7d4755b51021fdee882da66dcdfbe">fault_tree_analysis</a> = std::move(fta);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> Algorithm, <span class="keyword">class</span> Calculator&gt;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keywordtype">void</span> RiskAnalysis::RunAnalysis(<a class="code" href="classscram_1_1core_1_1FaultTreeAnalyzer.xhtml">FaultTreeAnalyzer&lt;Algorithm&gt;</a>* fta,</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                               <a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1Result.xhtml">Result</a>* result) noexcept {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="keyword">auto</span> pa = std::make_unique&lt;ProbabilityAnalyzer&lt;Calculator&gt;&gt;(</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      fta, &amp;model_-&gt;<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a8a215a2dd25789bfa65d41cc28b0ac4f">mission_time</a>());</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  pa-&gt;Analyze();</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>().importance_analysis()) {</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keyword">auto</span> ia = std::make_unique&lt;ImportanceAnalyzer&lt;Calculator&gt;&gt;(pa.get());</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    ia-&gt;Analyze();</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    result-&gt;<a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1Result.xhtml#a7b0d69c18a64b053940281fd0621b232">importance_analysis</a> = std::move(ia);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  }</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">Analysis::settings</a>().uncertainty_analysis()) {</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keyword">auto</span> ua = std::make_unique&lt;UncertaintyAnalyzer&lt;Calculator&gt;&gt;(pa.get());</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    ua-&gt;Analyze();</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    result-&gt;<a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1Result.xhtml#a37d2b420de2f9917fa377954f696fcc9">uncertainty_analysis</a> = std::move(ua);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  }</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  result-&gt;<a class="code" href="structscram_1_1core_1_1RiskAnalysis_1_1Result.xhtml#afc6f62c22491a5d1d284cde559d87f7d">probability_analysis</a> = std::move(pa);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;}</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;}  <span class="comment">// namespace scram::core</span></div><div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a2b8db43cf577f66dbdcae54e4065d552"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a2b8db43cf577f66dbdcae54e4065d552">scram::mef::Model::alignments</a></div><div class="ttdeci">const ElementTable&lt; AlignmentPtr &gt; &amp; alignments() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00088">model.h:88</a></div></div>
<div class="ttc" id="alignment_8h_xhtml_a1db04a95962852f2791c86ea3bcf9861"><div class="ttname"><a href="alignment_8h.xhtml#a1db04a95962852f2791c86ea3bcf9861">scram::mef::AlignmentPtr</a></div><div class="ttdeci">std::unique_ptr&lt; Alignment &gt; AlignmentPtr</div><div class="ttdoc">Unique model alignments. </div><div class="ttdef"><b>Definition:</b> <a href="alignment_8h_source.xhtml#l00086">alignment.h:86</a></div></div>
<div class="ttc" id="bdd_8h_xhtml"><div class="ttname"><a href="bdd_8h.xhtml">bdd.h</a></div><div class="ttdoc">Fault tree analysis with the Binary Decision Diagram algorithms. </div></div>
<div class="ttc" id="alignment_8h_xhtml_a6c8bec380e8765eecb85692acce281bf"><div class="ttname"><a href="alignment_8h.xhtml#a6c8bec380e8765eecb85692acce281bf">scram::mef::PhasePtr</a></div><div class="ttdeci">std::unique_ptr&lt; Phase &gt; PhasePtr</div><div class="ttdoc">Phases are unique to alignments. </div><div class="ttdef"><b>Definition:</b> <a href="alignment_8h_source.xhtml#l00060">alignment.h:60</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a2ddd6d121e1ab6fbe140fc3fb449cd96"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a2ddd6d121e1ab6fbe140fc3fb449cd96">scram::mef::Model::house_events</a></div><div class="ttdeci">const IdTable&lt; HouseEventPtr &gt; &amp; house_events() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00095">model.h:95</a></div></div>
<div class="ttc" id="fault__tree_8h_xhtml"><div class="ttname"><a href="fault__tree_8h.xhtml">fault_tree.h</a></div><div class="ttdoc">Fault Tree and Component containers. </div></div>
<div class="ttc" id="zbdd_8h_xhtml"><div class="ttname"><a href="zbdd_8h.xhtml">zbdd.h</a></div><div class="ttdoc">Zero-Suppressed Binary Decision Diagram facilities. </div></div>
<div class="ttc" id="event__tree_8h_xhtml_a11e578b8e757b3eaa293a1c657f1f29a"><div class="ttname"><a href="event__tree_8h.xhtml#a11e578b8e757b3eaa293a1c657f1f29a">scram::mef::InitiatingEventPtr</a></div><div class="ttdeci">std::unique_ptr&lt; InitiatingEvent &gt; InitiatingEventPtr</div><div class="ttdoc">Unique initiating events in a model. </div><div class="ttdef"><b>Definition:</b> <a href="event__tree_8h_source.xhtml#l00238">event_tree.h:238</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1RiskAnalysis_1_1Result_xhtml_a7b0d69c18a64b053940281fd0621b232"><div class="ttname"><a href="structscram_1_1core_1_1RiskAnalysis_1_1Result.xhtml#a7b0d69c18a64b053940281fd0621b232">scram::core::RiskAnalysis::Result::importance_analysis</a></div><div class="ttdeci">std::unique_ptr&lt; const ImportanceAnalysis &gt; importance_analysis</div><div class="ttdoc">Optional analyses, i.e., may be nullptr. </div><div class="ttdef"><b>Definition:</b> <a href="risk__analysis_8h_source.xhtml#l00067">risk_analysis.h:67</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1HouseEvent_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1HouseEvent.xhtml">scram::mef::HouseEvent</a></div><div class="ttdoc">Representation of a house event in a fault tree. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00049">event.h:49</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a04f7628e1d3a27295d2ac7bbdc7ab26b"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a04f7628e1d3a27295d2ac7bbdc7ab26b">scram::mef::Model::initiating_events</a></div><div class="ttdeci">const ElementTable&lt; InitiatingEventPtr &gt; &amp; initiating_events() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00081">model.h:81</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1RiskAnalysis_1_1Result_xhtml"><div class="ttname"><a href="structscram_1_1core_1_1RiskAnalysis_1_1Result.xhtml">scram::core::RiskAnalysis::Result</a></div><div class="ttdoc">The analysis results binding to the unique analysis target. </div><div class="ttdef"><b>Definition:</b> <a href="risk__analysis_8h_source.xhtml#l00052">risk_analysis.h:52</a></div></div>
<div class="ttc" id="mocus_8h_xhtml"><div class="ttname"><a href="mocus_8h.xhtml">mocus.h</a></div><div class="ttdoc">Fault tree analysis with the MOCUS algorithm. </div></div>
<div class="ttc" id="logger_8h_xhtml"><div class="ttname"><a href="logger_8h.xhtml">logger.h</a></div><div class="ttdoc">Logging capability for various purposes, such as warnings and debugging. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1HouseEvent_xhtml_a15ab4daf36b62127703cf610bdc80183"><div class="ttname"><a href="classscram_1_1mef_1_1HouseEvent.xhtml#a15ab4daf36b62127703cf610bdc80183">scram::mef::HouseEvent::state</a></div><div class="ttdeci">void state(bool constant)</div><div class="ttdoc">Sets the state for House event. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00061">event.h:61</a></div></div>
<div class="ttc" id="risk__analysis_8h_xhtml"><div class="ttname"><a href="risk__analysis_8h.xhtml">risk_analysis.h</a></div><div class="ttdoc">Contains the main system for performing analysis. </div></div>
<div class="ttc" id="classscram_1_1core_1_1Settings_xhtml_a0c130c599ff39bd4a5b269907f06b66d"><div class="ttname"><a href="classscram_1_1core_1_1Settings.xhtml#a0c130c599ff39bd4a5b269907f06b66d">scram::core::Settings::mission_time</a></div><div class="ttdeci">double mission_time() const </div><div class="ttdef"><b>Definition:</b> <a href="settings_8h_source.xhtml#l00183">settings.h:183</a></div></div>
<div class="ttc" id="namespacescram_1_1core_xhtml"><div class="ttname"><a href="namespacescram_1_1core.xhtml">scram::core</a></div><div class="ttdef"><b>Definition:</b> <a href="analysis_8cc_source.xhtml#l00023">analysis.cc:23</a></div></div>
<div class="ttc" id="fault__tree_8h_xhtml_a8538f816ccf630916e93bd1432fa07d6"><div class="ttname"><a href="fault__tree_8h.xhtml#a8538f816ccf630916e93bd1432fa07d6">scram::mef::FaultTreePtr</a></div><div class="ttdeci">std::unique_ptr&lt; FaultTree &gt; FaultTreePtr</div><div class="ttdoc">Unique trees in models. </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree_8h_source.xhtml#l00178">fault_tree.h:178</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1RiskAnalysis_1_1Result_xhtml_afc6f62c22491a5d1d284cde559d87f7d"><div class="ttname"><a href="structscram_1_1core_1_1RiskAnalysis_1_1Result.xhtml#afc6f62c22491a5d1d284cde559d87f7d">scram::core::RiskAnalysis::Result::probability_analysis</a></div><div class="ttdeci">std::unique_ptr&lt; const ProbabilityAnalysis &gt; probability_analysis</div><div class="ttdoc">Optional analyses, i.e., may be nullptr. </div><div class="ttdef"><b>Definition:</b> <a href="risk__analysis_8h_source.xhtml#l00066">risk_analysis.h:66</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1RandomDeviate_xhtml_a078bf1c19e467ec90c578e0f388155d9"><div class="ttname"><a href="classscram_1_1mef_1_1RandomDeviate.xhtml#a078bf1c19e467ec90c578e0f388155d9">scram::mef::RandomDeviate::seed</a></div><div class="ttdeci">static void seed(unsigned seed) noexcept</div><div class="ttdoc">Sets the seed of the underlying random number generator. </div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00053">random_deviate.h:53</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1RiskAnalysis_1_1Result_xhtml_a37d2b420de2f9917fa377954f696fcc9"><div class="ttname"><a href="structscram_1_1core_1_1RiskAnalysis_1_1Result.xhtml#a37d2b420de2f9917fa377954f696fcc9">scram::core::RiskAnalysis::Result::uncertainty_analysis</a></div><div class="ttdeci">std::unique_ptr&lt; const UncertaintyAnalysis &gt; uncertainty_analysis</div><div class="ttdoc">Optional analyses, i.e., may be nullptr. </div><div class="ttdef"><b>Definition:</b> <a href="risk__analysis_8h_source.xhtml#l00068">risk_analysis.h:68</a></div></div>
<div class="ttc" id="scope__guard_8h_xhtml"><div class="ttname"><a href="scope__guard_8h.xhtml">scope_guard.h</a></div><div class="ttdoc">Scope guard functionality with C++17. </div></div>
<div class="ttc" id="random__deviate_8h_xhtml"><div class="ttname"><a href="random__deviate_8h.xhtml">random_deviate.h</a></div><div class="ttdoc">A collection of deviate expressions with random distributions sampled at run-time. </div></div>
<div class="ttc" id="structscram_1_1core_1_1RiskAnalysis_1_1Result_xhtml_a2ed7d4755b51021fdee882da66dcdfbe"><div class="ttname"><a href="structscram_1_1core_1_1RiskAnalysis_1_1Result.xhtml#a2ed7d4755b51021fdee882da66dcdfbe">scram::core::RiskAnalysis::Result::fault_tree_analysis</a></div><div class="ttdeci">std::unique_ptr&lt; const FaultTreeAnalysis &gt; fault_tree_analysis</div><div class="ttdoc">Optional analyses, i.e., may be nullptr. </div><div class="ttdef"><b>Definition:</b> <a href="risk__analysis_8h_source.xhtml#l00065">risk_analysis.h:65</a></div></div>
<div class="ttc" id="logger_8h_xhtml_aba7b09d6e8fbe414c23705ad24dde6ff"><div class="ttname"><a href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a></div><div class="ttdeci">#define LOG(level)</div><div class="ttdoc">Logging with a level. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00060">logger.h:60</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Settings_xhtml_a9937a41d3fd1369f2eea59e1f33a1ac5"><div class="ttname"><a href="classscram_1_1core_1_1Settings.xhtml#a9937a41d3fd1369f2eea59e1f33a1ac5">scram::core::Settings::seed</a></div><div class="ttdeci">int seed() const </div><div class="ttdef"><b>Definition:</b> <a href="settings_8h_source.xhtml#l00171">settings.h:171</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml">scram::mef::Model</a></div><div class="ttdoc">This class represents a risk analysis model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00043">model.h:43</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1SetHouseEvent_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1SetHouseEvent.xhtml">scram::mef::SetHouseEvent</a></div><div class="ttdoc">The operation to change house-events. </div><div class="ttdef"><b>Definition:</b> <a href="instruction_8h_source.xhtml#l00055">instruction.h:55</a></div></div>
<div class="ttc" id="logger_8h_xhtml_a8cc0e8b39d76d12fd165097dbc8cf81ea7df87650b378ce7a39dec3fad22844b2"><div class="ttname"><a href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea7df87650b378ce7a39dec3fad22844b2">scram::INFO</a></div><div class="ttdoc">Information for users, such as running time and complexity. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00072">logger.h:72</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1RiskAnalysis_1_1Context_xhtml"><div class="ttname"><a href="structscram_1_1core_1_1RiskAnalysis_1_1Context.xhtml">scram::core::RiskAnalysis::Context</a></div><div class="ttdoc">Provides the optional context of the analysis. </div><div class="ttdef"><b>Definition:</b> <a href="risk__analysis_8h_source.xhtml#l00046">risk_analysis.h:46</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Analysis_xhtml_ab04a96c555ba726368fa3868a8701610"><div class="ttname"><a href="classscram_1_1core_1_1Analysis.xhtml#ab04a96c555ba726368fa3868a8701610">scram::core::Analysis::settings</a></div><div class="ttdeci">const Settings &amp; settings() const </div><div class="ttdef"><b>Definition:</b> <a href="analysis_8h_source.xhtml#l00042">analysis.h:42</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1RiskAnalysis_xhtml_a008399361b34a979653806bb032582c0"><div class="ttname"><a href="classscram_1_1core_1_1RiskAnalysis.xhtml#a008399361b34a979653806bb032582c0">scram::core::RiskAnalysis::RiskAnalysis</a></div><div class="ttdeci">RiskAnalysis(mef::Model *model, const Settings &amp;settings)</div><div class="ttdef"><b>Definition:</b> <a href="risk__analysis_8cc_source.xhtml#l00033">risk_analysis.cc:33</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1MissionTime_xhtml_abedd4c16a7c428fc8192ec32d51beb3e"><div class="ttname"><a href="classscram_1_1mef_1_1MissionTime.xhtml#abedd4c16a7c428fc8192ec32d51beb3e">scram::mef::MissionTime::value</a></div><div class="ttdeci">void value(double time)</div><div class="ttdoc">Changes the mission time value. </div><div class="ttdef"><b>Definition:</b> <a href="parameter_8cc_source.xhtml#l00031">parameter.cc:31</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Gate_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Gate.xhtml">scram::mef::Gate</a></div><div class="ttdoc">A representation of a gate in a fault tree. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00161">event.h:161</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1RiskAnalysis_xhtml_a7aed757ac5a7a96878c2706a7a9710bb"><div class="ttname"><a href="classscram_1_1core_1_1RiskAnalysis.xhtml#a7aed757ac5a7a96878c2706a7a9710bb">scram::core::RiskAnalysis::Analyze</a></div><div class="ttdeci">void Analyze() noexcept</div><div class="ttdoc">Analyzes the model and performs computations specified in the settings. </div><div class="ttdef"><b>Definition:</b> <a href="risk__analysis_8cc_source.xhtml#l00036">risk_analysis.cc:36</a></div></div>
<div class="ttc" id="structscram_1_1core_1_1EventTreeAnalysis_1_1Result_xhtml"><div class="ttname"><a href="structscram_1_1core_1_1EventTreeAnalysis_1_1Result.xhtml">scram::core::EventTreeAnalysis::Result</a></div><div class="ttdoc">The analysis results binding to the unique analysis target. </div><div class="ttdef"><b>Definition:</b> <a href="event__tree__analysis_8h_source.xhtml#l00040">event_tree_analysis.h:40</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Sequence_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Sequence.xhtml">scram::mef::Sequence</a></div><div class="ttdoc">Representation of sequences in event trees. </div><div class="ttdef"><b>Definition:</b> <a href="event__tree_8h_source.xhtml#l00035">event_tree.h:35</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Analysis_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1Analysis.xhtml">scram::core::Analysis</a></div><div class="ttdoc">Base abstract class for all analysis with settings. </div><div class="ttdef"><b>Definition:</b> <a href="analysis_8h_source.xhtml#l00034">analysis.h:34</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml_adb401e2ca84aa98cb60797bec2500a81"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">scram::mef::Element::name</a></div><div class="ttdeci">const std::string &amp; name() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00060">element.h:60</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1Settings_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1Settings.xhtml">scram::core::Settings</a></div><div class="ttdoc">Builder for analysis settings. </div><div class="ttdef"><b>Definition:</b> <a href="settings_8h_source.xhtml#l00049">settings.h:49</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a8a215a2dd25789bfa65d41cc28b0ac4f"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a8a215a2dd25789bfa65d41cc28b0ac4f">scram::mef::Model::mission_time</a></div><div class="ttdeci">const MissionTime &amp; mission_time() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00093">model.h:93</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a9bac9a7746026484f3dc69a3ccb2ac4a"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a9bac9a7746026484f3dc69a3ccb2ac4a">scram::mef::Model::fault_trees</a></div><div class="ttdeci">const ElementTable&lt; FaultTreePtr &gt; &amp; fault_trees() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00087">model.h:87</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a13bd4eb71c3f15f4eece041f19488744"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a13bd4eb71c3f15f4eece041f19488744">scram::mef::Model::context</a></div><div class="ttdeci">Context * context() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00077">model.h:77</a></div></div>
<div class="ttc" id="classscram_1_1core_1_1FaultTreeAnalyzer_xhtml"><div class="ttname"><a href="classscram_1_1core_1_1FaultTreeAnalyzer.xhtml">scram::core::FaultTreeAnalyzer</a></div><div class="ttdoc">Fault tree analysis facility with specific algorithms. </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree__analysis_8h_source.xhtml#l00291">fault_tree_analysis.h:291</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:37 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
