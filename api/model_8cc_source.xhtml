<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>model.cc Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">model.cc</div>  </div>
</div><!--header-->
<div class="contents">
<a href="model_8cc.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2014-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// Implementation of functions in Model class.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="model_8h.xhtml">model.h</a>&quot;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="error_8h.xhtml">error.h</a>&quot;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="find__iterator_8h.xhtml">ext/find_iterator.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="multi__index_8h.xhtml">ext/multi_index.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram_1_1mef.xhtml">scram::mef</a> {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a7b7106f97e635f838e07eefd8e7e363a">Model::kDefaultName</a>[] = <span class="stringliteral">&quot;__unnamed-model__&quot;</span>;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a9cc591bf6c40805064ea0a9ec0c453c7">   31</a></span>&#160;<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a9cc591bf6c40805064ea0a9ec0c453c7">Model::Model</a>(std::string name)</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    : <a class="code" href="classscram_1_1mef_1_1Element.xhtml">Element</a>(name.empty() ? kDefaultName : std::move(name)),</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      mission_time_(std::make_unique&lt;<a class="code" href="classscram_1_1mef_1_1MissionTime.xhtml">MissionTime</a>&gt;()) {}</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a73983f66319f63a3f663c5fb318a2620">   35</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a73983f66319f63a3f663c5fb318a2620">Model::Add</a>(<a class="code" href="event__tree_8h.xhtml#a11e578b8e757b3eaa293a1c657f1f29a">InitiatingEventPtr</a> initiating_event) {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  mef::AddElement&lt;RedefinitionError&gt;(std::move(initiating_event),</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                                     &amp;initiating_events_,</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                                     <span class="stringliteral">&quot;Redefinition of initiating event: &quot;</span>);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a1ebc111c90194d255400e58a8ab02563">   41</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a73983f66319f63a3f663c5fb318a2620">Model::Add</a>(<a class="code" href="event__tree_8h.xhtml#a9fb29cbc2c3de675454fc41c493f1405">EventTreePtr</a> event_tree) {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  mef::AddElement&lt;RedefinitionError&gt;(std::move(event_tree), &amp;event_trees_,</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                                     <span class="stringliteral">&quot;Redefinition of event tree: &quot;</span>);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#af3c011c10779c073b9b371ffbba56abf">   46</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a73983f66319f63a3f663c5fb318a2620">Model::Add</a>(<a class="code" href="event__tree_8h.xhtml#a14bbb8758b9a4fb43a532a385f9d72d6">SequencePtr</a> sequence) {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  mef::AddElement&lt;RedefinitionError&gt;(std::move(sequence), &amp;sequences_,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                     <span class="stringliteral">&quot;Redefinition of sequence: &quot;</span>);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#af0566e010ffda5dd81fd3b6efe493554">   51</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a73983f66319f63a3f663c5fb318a2620">Model::Add</a>(<a class="code" href="instruction_8h.xhtml#a7766297ed0a530a6c53fa56a0747f331">RulePtr</a> rule) {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  mef::AddElement&lt;RedefinitionError&gt;(std::move(rule), &amp;rules_,</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                                     <span class="stringliteral">&quot;Redefinition of rule: &quot;</span>);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#ab67ad000d7494da9f37e7e6a23433e01">   56</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a73983f66319f63a3f663c5fb318a2620">Model::Add</a>(<a class="code" href="fault__tree_8h.xhtml#a8538f816ccf630916e93bd1432fa07d6">FaultTreePtr</a> fault_tree) {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  mef::AddElement&lt;RedefinitionError&gt;(std::move(fault_tree), &amp;fault_trees_,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                     <span class="stringliteral">&quot;Redefinition of fault tree: &quot;</span>);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#ab8f534d31c9e1947f8afb71a7ee23e14">   61</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a73983f66319f63a3f663c5fb318a2620">Model::Add</a>(<a class="code" href="alignment_8h.xhtml#a1db04a95962852f2791c86ea3bcf9861">AlignmentPtr</a> alignment) {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  mef::AddElement&lt;RedefinitionError&gt;(std::move(alignment), &amp;alignments_,</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                     <span class="stringliteral">&quot;Redefinition of alignment: &quot;</span>);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a89480efab7a217ba9ce4e9608135204f">   66</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a73983f66319f63a3f663c5fb318a2620">Model::Add</a>(<a class="code" href="substitution_8h.xhtml#a96c7da3ca9d39dfdeeb908c4a8e0a3bf">SubstitutionPtr</a> substitution) {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  mef::AddElement&lt;RedefinitionError&gt;(std::move(substitution), &amp;substitutions_,</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                                     <span class="stringliteral">&quot;Redefinition of substitution: &quot;</span>);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a5b01f08ee5c8b4278cfb95d08a135792">   71</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a73983f66319f63a3f663c5fb318a2620">Model::Add</a>(<a class="code" href="parameter_8h.xhtml#a3e911a6ca6c5efb5779ff4deed577171">ParameterPtr</a> parameter) {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  mef::AddElement&lt;RedefinitionError&gt;(std::move(parameter), &amp;parameters_,</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                                     <span class="stringliteral">&quot;Redefinition of parameter: &quot;</span>);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keywordtype">void</span> Model::CheckDuplicateEvent(<span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1Event.xhtml">Event</a>&amp; event) {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keyword">const</span> std::string&amp; <span class="keywordtype">id</span> = <span class="keyword">event</span>.id();</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keywordflow">if</span> (gates_.count(<span class="keywordtype">id</span>) || basic_events_.count(<span class="keywordtype">id</span>) || house_events_.count(<span class="keywordtype">id</span>))</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(<a class="code" href="structscram_1_1mef_1_1RedefinitionError.xhtml">RedefinitionError</a>(<span class="stringliteral">&quot;Redefinition of event: &quot;</span> + <span class="keywordtype">id</span>));</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a16be6b17332e5ab16a548f52981c2cf5">   82</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a73983f66319f63a3f663c5fb318a2620">Model::Add</a>(<a class="code" href="event_8h.xhtml#af2bc060f951b2dcb63fb313d3800f9f3">HouseEventPtr</a> house_event) {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  CheckDuplicateEvent(*house_event);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  house_events_.insert(std::move(house_event));</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a7293a872e2d3baebe37df0703b823b54">   87</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a73983f66319f63a3f663c5fb318a2620">Model::Add</a>(<a class="code" href="event_8h.xhtml#a77a3414d54d1ed73527bc929354d0508">BasicEventPtr</a> basic_event) {</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  CheckDuplicateEvent(*basic_event);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  basic_events_.insert(std::move(basic_event));</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a1db6fdc8d682d9dd4c40cf0f91fa5f55">   92</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a73983f66319f63a3f663c5fb318a2620">Model::Add</a>(<a class="code" href="event_8h.xhtml#a87cdc93e494b5e957991657303a2e30b">GatePtr</a> gate) {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  CheckDuplicateEvent(*gate);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  gates_.insert(std::move(gate));</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#afcb2a07f2cfd1f086582f87f68e80aa6">   97</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a73983f66319f63a3f663c5fb318a2620">Model::Add</a>(<a class="code" href="ccf__group_8h.xhtml#a0a5b86b780d70d8111700ec834ee7217">CcfGroupPtr</a> ccf_group) {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  mef::AddElement&lt;RedefinitionError&gt;(std::move(ccf_group), &amp;ccf_groups_,</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                                     <span class="stringliteral">&quot;Redefinition of CCF group: &quot;</span>);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a4d49bb5f030630c93db0e44dd6ee49ed">  102</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a73983f66319f63a3f663c5fb318a2620">Model::Add</a>(std::unique_ptr&lt;ExternLibrary&gt; library) {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  mef::AddElement&lt;RedefinitionError&gt;(std::move(library), &amp;libraries_,</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                                     <span class="stringliteral">&quot;Redefinition of extern library: &quot;</span>);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a51acc949f5616734727f8833665518b8">  107</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a73983f66319f63a3f663c5fb318a2620">Model::Add</a>(<a class="code" href="extern_8h.xhtml#acabf761a0fe95a2e0b243d577e39d5e2">ExternFunctionPtr</a> extern_function) {</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  mef::AddElement&lt;RedefinitionError&gt;(std::move(extern_function),</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                                     &amp;extern_functions_,</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                                     <span class="stringliteral">&quot;Redefinition of extern function: &quot;</span>);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#aaebfa79fb3fbf5d2987f6bbc9c4a9b67">  113</a></span>&#160;<a class="code" href="classscram_1_1mef_1_1Formula.xhtml#a358b7ba8bf8488abfcd22516474b2ad5">Formula::EventArg</a> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#aaebfa79fb3fbf5d2987f6bbc9c4a9b67">Model::GetEvent</a>(<span class="keyword">const</span> std::string&amp; <span class="keywordtype">id</span>) {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keywordflow">if</span> (<span class="keyword">auto</span> it = ext::find(<a class="code" href="classscram_1_1mef_1_1Model.xhtml#ada7804d62fc594bff7b080c680586209">basic_events</a>(), <span class="keywordtype">id</span>))</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">return</span> it-&gt;get();</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordflow">if</span> (<span class="keyword">auto</span> it = ext::find(<a class="code" href="classscram_1_1mef_1_1Model.xhtml#ab67ee068ec7f783c7b3c573270cf4fdb">gates</a>(), <span class="keywordtype">id</span>))</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordflow">return</span> it-&gt;get();</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordflow">if</span> (<span class="keyword">auto</span> it = ext::find(<a class="code" href="classscram_1_1mef_1_1Model.xhtml#a2ddd6d121e1ab6fbe140fc3fb449cd96">house_events</a>(), <span class="keywordtype">id</span>))</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">return</span> it-&gt;get();</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(<a class="code" href="structscram_1_1mef_1_1UndefinedElement.xhtml">UndefinedElement</a>(<span class="stringliteral">&quot;The event &quot;</span> + <span class="keywordtype">id</span> + <span class="stringliteral">&quot; is not in the model.&quot;</span>));</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keyword">namespace </span>{</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">/// Helper function to remove events from containers.</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> Table&gt;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;std::unique_ptr&lt;T&gt; RemoveEvent(T* event, Table* table) {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keyword">auto</span> it = table-&gt;find(event-&gt;id());</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keywordflow">if</span> (it == table-&gt;end())</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <a class="code" href="structscram_1_1mef_1_1UndefinedElement.xhtml">UndefinedElement</a>(<span class="stringliteral">&quot;Event &quot;</span> + event-&gt;id() + <span class="stringliteral">&quot; is not in the model.&quot;</span>));</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordflow">if</span> (it-&gt;get() != event)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(<a class="code" href="structscram_1_1mef_1_1UndefinedElement.xhtml">UndefinedElement</a>(<span class="stringliteral">&quot;Duplicate event &quot;</span> + event-&gt;id() +</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                                 <span class="stringliteral">&quot; does not belong to the model.&quot;</span>));</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keywordflow">return</span> ext::extract(it, table);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;}  <span class="comment">// namespace</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a29c599ffb3b083ebc34fc0cef1ceeac7">  141</a></span>&#160;<a class="code" href="event_8h.xhtml#af2bc060f951b2dcb63fb313d3800f9f3">HouseEventPtr</a> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a29c599ffb3b083ebc34fc0cef1ceeac7">Model::Remove</a>(<a class="code" href="classscram_1_1mef_1_1HouseEvent.xhtml">HouseEvent</a>* house_event) {</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordflow">return</span> RemoveEvent(house_event, &amp;house_events_);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;}</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#ab5c48af22f88abed51d7b09d82927a54">  145</a></span>&#160;<a class="code" href="event_8h.xhtml#a77a3414d54d1ed73527bc929354d0508">BasicEventPtr</a> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a29c599ffb3b083ebc34fc0cef1ceeac7">Model::Remove</a>(<a class="code" href="classscram_1_1mef_1_1BasicEvent.xhtml">BasicEvent</a>* basic_event) {</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keywordflow">return</span> RemoveEvent(basic_event, &amp;basic_events_);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;}</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#abcf7f3ff253e98ddfc9a566f23e02aff">  149</a></span>&#160;<a class="code" href="event_8h.xhtml#a87cdc93e494b5e957991657303a2e30b">GatePtr</a> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a29c599ffb3b083ebc34fc0cef1ceeac7">Model::Remove</a>(<a class="code" href="classscram_1_1mef_1_1Gate.xhtml">Gate</a>* gate) { <span class="keywordflow">return</span> RemoveEvent(gate, &amp;gates_); }</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a111c96980bb9a43b19aaccd7e7baa641">  151</a></span>&#160;<a class="code" href="fault__tree_8h.xhtml#a8538f816ccf630916e93bd1432fa07d6">FaultTreePtr</a> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a29c599ffb3b083ebc34fc0cef1ceeac7">Model::Remove</a>(<a class="code" href="classscram_1_1mef_1_1FaultTree.xhtml">FaultTree</a>* fault_tree) {</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keyword">auto</span> it = fault_trees_.find(fault_tree-&gt;<a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a>());</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="keywordflow">if</span> (it == fault_trees_.end())</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(<a class="code" href="structscram_1_1mef_1_1UndefinedElement.xhtml">UndefinedElement</a>(<span class="stringliteral">&quot;Fault tree &quot;</span> + fault_tree-&gt;<a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a>() +</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                                 <span class="stringliteral">&quot; is not in the model.&quot;</span>));</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="keywordflow">if</span> (it-&gt;get() != fault_tree)</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(<a class="code" href="structscram_1_1mef_1_1UndefinedElement.xhtml">UndefinedElement</a>(<span class="stringliteral">&quot;Duplicate fault tree &quot;</span> + fault_tree-&gt;<a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a>() +</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                 <span class="stringliteral">&quot; does not belong to the model.&quot;</span>));</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keywordflow">return</span> ext::extract(it, &amp;fault_trees_);</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}  <span class="comment">// namespace scram::mef</span></div><div class="ttc" id="alignment_8h_xhtml_a1db04a95962852f2791c86ea3bcf9861"><div class="ttname"><a href="alignment_8h.xhtml#a1db04a95962852f2791c86ea3bcf9861">scram::mef::AlignmentPtr</a></div><div class="ttdeci">std::unique_ptr&lt; Alignment &gt; AlignmentPtr</div><div class="ttdoc">Unique model alignments. </div><div class="ttdef"><b>Definition:</b> <a href="alignment_8h_source.xhtml#l00086">alignment.h:86</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Event_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Event.xhtml">scram::mef::Event</a></div><div class="ttdoc">Abstract base class for general fault tree events. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00039">event.h:39</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a2ddd6d121e1ab6fbe140fc3fb449cd96"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a2ddd6d121e1ab6fbe140fc3fb449cd96">scram::mef::Model::house_events</a></div><div class="ttdeci">const IdTable&lt; HouseEventPtr &gt; &amp; house_events() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00095">model.h:95</a></div></div>
<div class="ttc" id="event__tree_8h_xhtml_a11e578b8e757b3eaa293a1c657f1f29a"><div class="ttname"><a href="event__tree_8h.xhtml#a11e578b8e757b3eaa293a1c657f1f29a">scram::mef::InitiatingEventPtr</a></div><div class="ttdeci">std::unique_ptr&lt; InitiatingEvent &gt; InitiatingEventPtr</div><div class="ttdoc">Unique initiating events in a model. </div><div class="ttdef"><b>Definition:</b> <a href="event__tree_8h_source.xhtml#l00238">event_tree.h:238</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1BasicEvent_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1BasicEvent.xhtml">scram::mef::BasicEvent</a></div><div class="ttdoc">Representation of a basic event in a fault tree. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00075">event.h:75</a></div></div>
<div class="ttc" id="error_8h_xhtml"><div class="ttname"><a href="error_8h.xhtml">error.h</a></div><div class="ttdoc">Exceptions for SCRAM. </div></div>
<div class="ttc" id="model_8h_xhtml"><div class="ttname"><a href="model_8h.xhtml">model.h</a></div><div class="ttdoc">Representation for a model container for risk analysis. </div></div>
<div class="ttc" id="multi__index_8h_xhtml"><div class="ttname"><a href="multi__index_8h.xhtml">multi_index.h</a></div><div class="ttdoc">Helper functions to boost multi_index_container. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a73983f66319f63a3f663c5fb318a2620"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a73983f66319f63a3f663c5fb318a2620">scram::mef::Model::Add</a></div><div class="ttdeci">void Add(InitiatingEventPtr element)</div><div class="ttdoc">Adds MEF constructs into the model container. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00035">model.cc:35</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a9cc591bf6c40805064ea0a9ec0c453c7"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a9cc591bf6c40805064ea0a9ec0c453c7">scram::mef::Model::Model</a></div><div class="ttdeci">Model(std::string name=&quot;&quot;)</div><div class="ttdoc">Creates a model container. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00031">model.cc:31</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Formula_xhtml_a358b7ba8bf8488abfcd22516474b2ad5"><div class="ttname"><a href="classscram_1_1mef_1_1Formula.xhtml#a358b7ba8bf8488abfcd22516474b2ad5">scram::mef::Formula::EventArg</a></div><div class="ttdeci">std::variant&lt; Gate *, BasicEvent *, HouseEvent * &gt; EventArg</div><div class="ttdoc">Event arguments of a formula. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00230">event.h:230</a></div></div>
<div class="ttc" id="event__tree_8h_xhtml_a14bbb8758b9a4fb43a532a385f9d72d6"><div class="ttname"><a href="event__tree_8h.xhtml#a14bbb8758b9a4fb43a532a385f9d72d6">scram::mef::SequencePtr</a></div><div class="ttdeci">std::unique_ptr&lt; Sequence &gt; SequencePtr</div><div class="ttdoc">Sequences are defined in event trees but referenced in other constructs. </div><div class="ttdef"><b>Definition:</b> <a href="event__tree_8h_source.xhtml#l00055">event_tree.h:55</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1HouseEvent_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1HouseEvent.xhtml">scram::mef::HouseEvent</a></div><div class="ttdoc">Representation of a house event in a fault tree. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00049">event.h:49</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_ab67ee068ec7f783c7b3c573270cf4fdb"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#ab67ee068ec7f783c7b3c573270cf4fdb">scram::mef::Model::gates</a></div><div class="ttdeci">const IdTable&lt; GatePtr &gt; &amp; gates() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00097">model.h:97</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1MissionTime_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1MissionTime.xhtml">scram::mef::MissionTime</a></div><div class="ttdoc">The special parameter for system mission time. </div><div class="ttdef"><b>Definition:</b> <a href="parameter_8h_source.xhtml#l00055">parameter.h:55</a></div></div>
<div class="ttc" id="structscram_1_1mef_1_1RedefinitionError_xhtml"><div class="ttname"><a href="structscram_1_1mef_1_1RedefinitionError.xhtml">scram::mef::RedefinitionError</a></div><div class="ttdoc">For cases when events or practically anything is redefined. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00104">error.h:104</a></div></div>
<div class="ttc" id="event_8h_xhtml_af2bc060f951b2dcb63fb313d3800f9f3"><div class="ttname"><a href="event_8h.xhtml#af2bc060f951b2dcb63fb313d3800f9f3">scram::mef::HouseEventPtr</a></div><div class="ttdeci">std::unique_ptr&lt; HouseEvent &gt; HouseEventPtr</div><div class="ttdoc">Convenience aliases for smart pointers. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00152">event.h:152</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a29c599ffb3b083ebc34fc0cef1ceeac7"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a29c599ffb3b083ebc34fc0cef1ceeac7">scram::mef::Model::Remove</a></div><div class="ttdeci">HouseEventPtr Remove(HouseEvent *element)</div><div class="ttdoc">Removes MEF constructs from the model container. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00141">model.cc:141</a></div></div>
<div class="ttc" id="event__tree_8h_xhtml_a9fb29cbc2c3de675454fc41c493f1405"><div class="ttname"><a href="event__tree_8h.xhtml#a9fb29cbc2c3de675454fc41c493f1405">scram::mef::EventTreePtr</a></div><div class="ttdeci">std::unique_ptr&lt; EventTree &gt; EventTreePtr</div><div class="ttdoc">Unique trees in a model. </div><div class="ttdef"><b>Definition:</b> <a href="event__tree_8h_source.xhtml#l00211">event_tree.h:211</a></div></div>
<div class="ttc" id="namespacescram_1_1mef_xhtml"><div class="ttname"><a href="namespacescram_1_1mef.xhtml">scram::mef</a></div><div class="ttdef"><b>Definition:</b> <a href="alignment_8cc_source.xhtml#l00026">alignment.cc:26</a></div></div>
<div class="ttc" id="fault__tree_8h_xhtml_a8538f816ccf630916e93bd1432fa07d6"><div class="ttname"><a href="fault__tree_8h.xhtml#a8538f816ccf630916e93bd1432fa07d6">scram::mef::FaultTreePtr</a></div><div class="ttdeci">std::unique_ptr&lt; FaultTree &gt; FaultTreePtr</div><div class="ttdoc">Unique trees in models. </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree_8h_source.xhtml#l00178">fault_tree.h:178</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a7b7106f97e635f838e07eefd8e7e363a"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a7b7106f97e635f838e07eefd8e7e363a">scram::mef::Model::kDefaultName</a></div><div class="ttdeci">static const char kDefaultName[]</div><div class="ttdoc">Only Model is allowed to have an optional name, while all other Elements require names. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00049">model.h:49</a></div></div>
<div class="ttc" id="error_8h_xhtml_a766d8477fec3466ae1d75208fe0554e7"><div class="ttname"><a href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a></div><div class="ttdeci">#define SCRAM_THROW(err)</div><div class="ttdoc">Convenience macro to throw SCRAM exceptions. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00038">error.h:38</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Gate_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Gate.xhtml">scram::mef::Gate</a></div><div class="ttdoc">A representation of a gate in a fault tree. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00161">event.h:161</a></div></div>
<div class="ttc" id="event_8h_xhtml_a87cdc93e494b5e957991657303a2e30b"><div class="ttname"><a href="event_8h.xhtml#a87cdc93e494b5e957991657303a2e30b">scram::mef::GatePtr</a></div><div class="ttdeci">std::unique_ptr&lt; Gate &gt; GatePtr</div><div class="ttdoc">Convenience aliases for smart pointers. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00154">event.h:154</a></div></div>
<div class="ttc" id="ccf__group_8h_xhtml_a0a5b86b780d70d8111700ec834ee7217"><div class="ttname"><a href="ccf__group_8h.xhtml#a0a5b86b780d70d8111700ec834ee7217">scram::mef::CcfGroupPtr</a></div><div class="ttdeci">std::unique_ptr&lt; CcfGroup &gt; CcfGroupPtr</div><div class="ttdoc">Convenience alias. </div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8h_source.xhtml#l00206">ccf_group.h:206</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml_adb401e2ca84aa98cb60797bec2500a81"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">scram::mef::Element::name</a></div><div class="ttdeci">const std::string &amp; name() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00060">element.h:60</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1FaultTree_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1FaultTree.xhtml">scram::mef::FaultTree</a></div><div class="ttdoc">Fault tree representation as a container of gates, basic and house events, and other information...</div><div class="ttdef"><b>Definition:</b> <a href="fault__tree_8h_source.xhtml#l00139">fault_tree.h:139</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml">scram::mef::Element</a></div><div class="ttdoc">Mixin class that represents any element of analysis that can have extra descriptions, such as attributes and a label. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00047">element.h:47</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_aaebfa79fb3fbf5d2987f6bbc9c4a9b67"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#aaebfa79fb3fbf5d2987f6bbc9c4a9b67">scram::mef::Model::GetEvent</a></div><div class="ttdeci">Formula::EventArg GetEvent(const std::string &amp;id)</div><div class="ttdoc">Convenience function to retrieve an event with its ID. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00113">model.cc:113</a></div></div>
<div class="ttc" id="find__iterator_8h_xhtml"><div class="ttname"><a href="find__iterator_8h.xhtml">find_iterator.h</a></div><div class="ttdoc">Convenience iterator adaptor to wrap find calls and results. </div></div>
<div class="ttc" id="parameter_8h_xhtml_a3e911a6ca6c5efb5779ff4deed577171"><div class="ttname"><a href="parameter_8h.xhtml#a3e911a6ca6c5efb5779ff4deed577171">scram::mef::ParameterPtr</a></div><div class="ttdeci">std::unique_ptr&lt; Parameter &gt; ParameterPtr</div><div class="ttdoc">Convenience alias. </div><div class="ttdef"><b>Definition:</b> <a href="parameter_8h_source.xhtml#l00116">parameter.h:116</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_ada7804d62fc594bff7b080c680586209"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#ada7804d62fc594bff7b080c680586209">scram::mef::Model::basic_events</a></div><div class="ttdeci">const IdTable&lt; BasicEventPtr &gt; &amp; basic_events() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00096">model.h:96</a></div></div>
<div class="ttc" id="substitution_8h_xhtml_a96c7da3ca9d39dfdeeb908c4a8e0a3bf"><div class="ttname"><a href="substitution_8h.xhtml#a96c7da3ca9d39dfdeeb908c4a8e0a3bf">scram::mef::SubstitutionPtr</a></div><div class="ttdeci">std::unique_ptr&lt; Substitution &gt; SubstitutionPtr</div><div class="ttdoc">Unique per model. </div><div class="ttdef"><b>Definition:</b> <a href="substitution_8h_source.xhtml#l00104">substitution.h:104</a></div></div>
<div class="ttc" id="event_8h_xhtml_a77a3414d54d1ed73527bc929354d0508"><div class="ttname"><a href="event_8h.xhtml#a77a3414d54d1ed73527bc929354d0508">scram::mef::BasicEventPtr</a></div><div class="ttdeci">std::unique_ptr&lt; BasicEvent &gt; BasicEventPtr</div><div class="ttdoc">Convenience aliases for smart pointers. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00153">event.h:153</a></div></div>
<div class="ttc" id="instruction_8h_xhtml_a7766297ed0a530a6c53fa56a0747f331"><div class="ttname"><a href="instruction_8h.xhtml#a7766297ed0a530a6c53fa56a0747f331">scram::mef::RulePtr</a></div><div class="ttdeci">std::unique_ptr&lt; Rule &gt; RulePtr</div><div class="ttdoc">Unique rules in a model. </div><div class="ttdef"><b>Definition:</b> <a href="instruction_8h_source.xhtml#l00168">instruction.h:168</a></div></div>
<div class="ttc" id="extern_8h_xhtml_acabf761a0fe95a2e0b243d577e39d5e2"><div class="ttname"><a href="extern_8h.xhtml#acabf761a0fe95a2e0b243d577e39d5e2">scram::mef::ExternFunctionPtr</a></div><div class="ttdeci">std::unique_ptr&lt; ExternFunction&lt; void &gt;&gt; ExternFunctionPtr</div><div class="ttdoc">The concrete extern functions uniquely stored in a model. </div><div class="ttdef"><b>Definition:</b> <a href="extern_8h_source.xhtml#l00108">extern.h:108</a></div></div>
<div class="ttc" id="structscram_1_1mef_1_1UndefinedElement_xhtml"><div class="ttname"><a href="structscram_1_1mef_1_1UndefinedElement.xhtml">scram::mef::UndefinedElement</a></div><div class="ttdoc">The error for undefined elements in a model. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00114">error.h:114</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:36 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
