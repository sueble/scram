<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>scram::core::zbdd::CutSetContainer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>scram</b></li><li class="navelem"><b>core</b></li><li class="navelem"><b>zbdd</b></li><li class="navelem"><a class="el" href="classscram_1_1core_1_1zbdd_1_1CutSetContainer.xhtml">CutSetContainer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classscram_1_1core_1_1zbdd_1_1CutSetContainer-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">scram::core::zbdd::CutSetContainer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Storage for generated cut sets in MOCUS.  
 <a href="classscram_1_1core_1_1zbdd_1_1CutSetContainer.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for scram::core::zbdd::CutSetContainer:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1zbdd_1_1CutSetContainer__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3f14bbccf0c5edd4b41dfb75c04d0b45"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1zbdd_1_1CutSetContainer.xhtml#a3f14bbccf0c5edd4b41dfb75c04d0b45">CutSetContainer</a> (const <a class="el" href="classscram_1_1core_1_1Settings.xhtml">Settings</a> &amp;<a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ab71281cd644eb442dd2d3ee1c5df56c4">settings</a>, int module_index, int gate_index_bound) noexcept</td></tr>
<tr class="memdesc:a3f14bbccf0c5edd4b41dfb75c04d0b45"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor to initialize member variables.  <a href="#a3f14bbccf0c5edd4b41dfb75c04d0b45">More...</a><br /></td></tr>
<tr class="separator:a3f14bbccf0c5edd4b41dfb75c04d0b45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15ccbd5b839be87c831a743f0100588e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1zbdd_1_1CutSetContainer.xhtml#a15ccbd5b839be87c831a743f0100588e">ConvertGate</a> (const <a class="el" href="classscram_1_1core_1_1Gate.xhtml">Gate</a> &amp;gate) noexcept</td></tr>
<tr class="memdesc:a15ccbd5b839be87c831a743f0100588e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a PDAG gate into intermediate cut sets.  <a href="#a15ccbd5b839be87c831a743f0100588e">More...</a><br /></td></tr>
<tr class="separator:a15ccbd5b839be87c831a743f0100588e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f6c0cef12a80aefbfb357022d558053"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1zbdd_1_1CutSetContainer.xhtml#a9f6c0cef12a80aefbfb357022d558053">GetNextGate</a> () noexcept</td></tr>
<tr class="memdesc:a9f6c0cef12a80aefbfb357022d558053"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds a gate in intermediate cut sets.  <a href="#a9f6c0cef12a80aefbfb357022d558053">More...</a><br /></td></tr>
<tr class="separator:a9f6c0cef12a80aefbfb357022d558053"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0848a768a2bcf4b22618e676a8bbaeb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1zbdd_1_1CutSetContainer.xhtml#aa0848a768a2bcf4b22618e676a8bbaeb">ExtractIntermediateCutSets</a> (int index) noexcept</td></tr>
<tr class="memdesc:aa0848a768a2bcf4b22618e676a8bbaeb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extracts (removes!) intermediate cut sets containing a node with a given index.  <a href="#aa0848a768a2bcf4b22618e676a8bbaeb">More...</a><br /></td></tr>
<tr class="separator:aa0848a768a2bcf4b22618e676a8bbaeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59985023f1eba639571610ad9a0b2a41"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1zbdd_1_1CutSetContainer.xhtml#a59985023f1eba639571610ad9a0b2a41">ExpandGate</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;gate_zbdd, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;cut_sets) noexcept</td></tr>
<tr class="memdesc:a59985023f1eba639571610ad9a0b2a41"><td class="mdescLeft">&#160;</td><td class="mdescRight">Expands the intermediate ZBDD representation of a gate in intermediate cut sets containing the gate.  <a href="#a59985023f1eba639571610ad9a0b2a41">More...</a><br /></td></tr>
<tr class="separator:a59985023f1eba639571610ad9a0b2a41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87489caef0ebb8e4b62c600455da84a2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1zbdd_1_1CutSetContainer.xhtml#a87489caef0ebb8e4b62c600455da84a2">Merge</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;vertex) noexcept</td></tr>
<tr class="memdesc:a87489caef0ebb8e4b62c600455da84a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Merges a set of cut sets into the main container.  <a href="#a87489caef0ebb8e4b62c600455da84a2">More...</a><br /></td></tr>
<tr class="separator:a87489caef0ebb8e4b62c600455da84a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49532388bd9b917f4351f94f728518aa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1zbdd_1_1CutSetContainer.xhtml#a49532388bd9b917f4351f94f728518aa">EliminateComplements</a> () noexcept</td></tr>
<tr class="memdesc:a49532388bd9b917f4351f94f728518aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Eliminates all complements from cut sets.  <a href="#a49532388bd9b917f4351f94f728518aa">More...</a><br /></td></tr>
<tr class="separator:a49532388bd9b917f4351f94f728518aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1022ad7a4699257a6f0c0809d8f1903d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1zbdd_1_1CutSetContainer.xhtml#a1022ad7a4699257a6f0c0809d8f1903d">EliminateConstantModules</a> () noexcept</td></tr>
<tr class="memdesc:a1022ad7a4699257a6f0c0809d8f1903d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes constant modules from cut sets.  <a href="#a1022ad7a4699257a6f0c0809d8f1903d">More...</a><br /></td></tr>
<tr class="separator:a1022ad7a4699257a6f0c0809d8f1903d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1648d3f24a95302fac2a40e95f743dda"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1zbdd_1_1CutSetContainer.xhtml#a1648d3f24a95302fac2a40e95f743dda">Minimize</a> () noexcept</td></tr>
<tr class="memdesc:a1648d3f24a95302fac2a40e95f743dda"><td class="mdescLeft">&#160;</td><td class="mdescRight">Minimizes cut sets in the container.  <a href="#a1648d3f24a95302fac2a40e95f743dda">More...</a><br /></td></tr>
<tr class="separator:a1648d3f24a95302fac2a40e95f743dda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a478c89f64731781882b50ec55898900b"><td class="memItemLeft" align="right" valign="top">std::map&lt; int, std::pair&lt; bool, int &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1zbdd_1_1CutSetContainer.xhtml#a478c89f64731781882b50ec55898900b">GatherModules</a> () noexcept</td></tr>
<tr class="memdesc:a478c89f64731781882b50ec55898900b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gathers all module indices in the cut sets.  <a href="#a478c89f64731781882b50ec55898900b">More...</a><br /></td></tr>
<tr class="separator:a478c89f64731781882b50ec55898900b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classscram_1_1core_1_1Zbdd"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classscram_1_1core_1_1Zbdd')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml">scram::core::Zbdd</a></td></tr>
<tr class="memitem:a7dd59951e7bc8fd08c75feb44bc496e2 inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a7dd59951e7bc8fd08c75feb44bc496e2">Zbdd</a> (<a class="el" href="classscram_1_1core_1_1Bdd.xhtml">Bdd</a> *bdd, const <a class="el" href="classscram_1_1core_1_1Settings.xhtml">Settings</a> &amp;<a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ab71281cd644eb442dd2d3ee1c5df56c4">settings</a>) noexcept</td></tr>
<tr class="memdesc:a7dd59951e7bc8fd08c75feb44bc496e2 inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts Reduced Ordered BDD into Zero-Suppressed BDD.  <a href="#a7dd59951e7bc8fd08c75feb44bc496e2">More...</a><br /></td></tr>
<tr class="separator:a7dd59951e7bc8fd08c75feb44bc496e2 inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38b5c81971df473b1b46de59d0752c81 inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a38b5c81971df473b1b46de59d0752c81">Zbdd</a> (const <a class="el" href="classscram_1_1core_1_1Pdag.xhtml">Pdag</a> *graph, const <a class="el" href="classscram_1_1core_1_1Settings.xhtml">Settings</a> &amp;<a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ab71281cd644eb442dd2d3ee1c5df56c4">settings</a>) noexcept</td></tr>
<tr class="memdesc:a38b5c81971df473b1b46de59d0752c81 inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor with the analysis target.  <a href="#a38b5c81971df473b1b46de59d0752c81">More...</a><br /></td></tr>
<tr class="separator:a38b5c81971df473b1b46de59d0752c81 inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac27b9279de1ee1a63822896daeca0c7 inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#aac27b9279de1ee1a63822896daeca0c7">Analyze</a> (const <a class="el" href="classscram_1_1core_1_1Pdag.xhtml">Pdag</a> *graph=nullptr) noexcept</td></tr>
<tr class="memdesc:aac27b9279de1ee1a63822896daeca0c7 inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Runs the analysis with the representation of a PDAG as ZBDD.  <a href="#aac27b9279de1ee1a63822896daeca0c7">More...</a><br /></td></tr>
<tr class="separator:aac27b9279de1ee1a63822896daeca0c7 inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a281614ffe42ed055312c3c91657cbf89 inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml">Zbdd</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a281614ffe42ed055312c3c91657cbf89">products</a> () const </td></tr>
<tr class="separator:a281614ffe42ed055312c3c91657cbf89 inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7947e6b7a94bd315fcbf3c7a08bad59b inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a7947e6b7a94bd315fcbf3c7a08bad59b">size</a> () const </td></tr>
<tr class="separator:a7947e6b7a94bd315fcbf3c7a08bad59b inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a284d6ef787a71e3c3519a06480f93cb3 inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a284d6ef787a71e3c3519a06480f93cb3">empty</a> () const </td></tr>
<tr class="separator:a284d6ef787a71e3c3519a06480f93cb3 inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9387ad9ed66536ba2ea9ad54c37e448c inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a9387ad9ed66536ba2ea9ad54c37e448c">base</a> () const </td></tr>
<tr class="separator:a9387ad9ed66536ba2ea9ad54c37e448c inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9fe9b536749648e0ba973d455c19c93 inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#aa9fe9b536749648e0ba973d455c19c93">begin</a> () const </td></tr>
<tr class="separator:aa9fe9b536749648e0ba973d455c19c93 inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a881275ff480909efdf8ec49c2fdcc3a6 inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a881275ff480909efdf8ec49c2fdcc3a6">end</a> () const </td></tr>
<tr class="separator:a881275ff480909efdf8ec49c2fdcc3a6 inherit pub_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classscram_1_1core_1_1Zbdd"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classscram_1_1core_1_1Zbdd')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml">scram::core::Zbdd</a></td></tr>
<tr class="memitem:a73cd06a4022ce5cd60f9f667fec8d51f inherit pub_types_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a73cd06a4022ce5cd60f9f667fec8d51f"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> = <a class="el" href="bdd_8h.xhtml#a3c1414c7067129c4689c40c7a2dab6de">IntrusivePtr</a>&lt; <a class="el" href="classscram_1_1core_1_1Vertex.xhtml">Vertex</a>&lt; <a class="el" href="classscram_1_1core_1_1SetNode.xhtml">SetNode</a> &gt;&gt;</td></tr>
<tr class="memdesc:a73cd06a4022ce5cd60f9f667fec8d51f inherit pub_types_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">ZBDD vertex base. <br /></td></tr>
<tr class="separator:a73cd06a4022ce5cd60f9f667fec8d51f inherit pub_types_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a335b8ada37f49919670e93dfc8ef307c inherit pub_types_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a335b8ada37f49919670e93dfc8ef307c"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a335b8ada37f49919670e93dfc8ef307c">TerminalPtr</a> = <a class="el" href="bdd_8h.xhtml#a3c1414c7067129c4689c40c7a2dab6de">IntrusivePtr</a>&lt; <a class="el" href="classscram_1_1core_1_1Terminal.xhtml">Terminal</a>&lt; <a class="el" href="classscram_1_1core_1_1SetNode.xhtml">SetNode</a> &gt;&gt;</td></tr>
<tr class="memdesc:a335b8ada37f49919670e93dfc8ef307c inherit pub_types_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classscram_1_1core_1_1Terminal.xhtml" title="Representation of terminal vertices in BDD graphs. ">Terminal</a> vertex. <br /></td></tr>
<tr class="separator:a335b8ada37f49919670e93dfc8ef307c inherit pub_types_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classscram_1_1core_1_1Zbdd"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classscram_1_1core_1_1Zbdd')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml">scram::core::Zbdd</a></td></tr>
<tr class="memitem:af92e04ed908364e0177ce444d7b72712 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#af92e04ed908364e0177ce444d7b72712">Zbdd</a> (const <a class="el" href="classscram_1_1core_1_1Settings.xhtml">Settings</a> &amp;<a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ab71281cd644eb442dd2d3ee1c5df56c4">settings</a>, bool coherent=false, int module_index=0) noexcept</td></tr>
<tr class="memdesc:af92e04ed908364e0177ce444d7b72712 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">The common constructor to initialize member variables.  <a href="#af92e04ed908364e0177ce444d7b72712">More...</a><br /></td></tr>
<tr class="separator:af92e04ed908364e0177ce444d7b72712 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa599878612e128fa09e17d0520280dbe inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#aa599878612e128fa09e17d0520280dbe">root</a> () const </td></tr>
<tr class="separator:aa599878612e128fa09e17d0520280dbe inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2e32b346caadd0e71a8acd0212593f9 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ad2e32b346caadd0e71a8acd0212593f9">root</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;vertex)</td></tr>
<tr class="memdesc:ad2e32b346caadd0e71a8acd0212593f9 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a new root vertex for ZBDD.  <a href="#ad2e32b346caadd0e71a8acd0212593f9">More...</a><br /></td></tr>
<tr class="separator:ad2e32b346caadd0e71a8acd0212593f9 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab71281cd644eb442dd2d3ee1c5df56c4 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classscram_1_1core_1_1Settings.xhtml">Settings</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ab71281cd644eb442dd2d3ee1c5df56c4">settings</a> () const </td></tr>
<tr class="separator:ab71281cd644eb442dd2d3ee1c5df56c4 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed1eaa96df30e6eaa32e9e51427c9743 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">const std::map&lt; int, std::unique_ptr&lt; <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml">Zbdd</a> &gt; &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#aed1eaa96df30e6eaa32e9e51427c9743">modules</a> () const </td></tr>
<tr class="separator:aed1eaa96df30e6eaa32e9e51427c9743 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae819f5439416479971018ac134233091 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae819f5439416479971018ac134233091"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ae819f5439416479971018ac134233091">Log</a> () noexcept</td></tr>
<tr class="memdesc:ae819f5439416479971018ac134233091 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Logs properties of the <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml" title="Zero-Suppressed Binary Decision Diagrams for set manipulations. ">Zbdd</a>. <br /></td></tr>
<tr class="separator:ae819f5439416479971018ac134233091 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42af18229ba2e80201bc0fdac07b7091 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a42af18229ba2e80201bc0fdac07b7091">FindOrAddVertex</a> (int index, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;high, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;low, int order, bool module=false, bool coherent=false) noexcept</td></tr>
<tr class="memdesc:a42af18229ba2e80201bc0fdac07b7091 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds or adds a unique <a class="el" href="classscram_1_1core_1_1SetNode.xhtml" title="Representation of non-terminal nodes in ZBDD. ">SetNode</a> in the ZBDD.  <a href="#a42af18229ba2e80201bc0fdac07b7091">More...</a><br /></td></tr>
<tr class="separator:a42af18229ba2e80201bc0fdac07b7091 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac90d12f0c653c679d22109124fa6344c inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ac90d12f0c653c679d22109124fa6344c">FindOrAddVertex</a> (const <a class="el" href="classscram_1_1core_1_1Gate.xhtml">Gate</a> &amp;gate, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;high, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;low) noexcept</td></tr>
<tr class="memdesc:ac90d12f0c653c679d22109124fa6344c inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Find or adds a ZBDD <a class="el" href="classscram_1_1core_1_1SetNode.xhtml" title="Representation of non-terminal nodes in ZBDD. ">SetNode</a> vertex using information from gates.  <a href="#ac90d12f0c653c679d22109124fa6344c">More...</a><br /></td></tr>
<tr class="separator:ac90d12f0c653c679d22109124fa6344c inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a711aca319bb4d1586bf1ed92eccfaa97 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memTemplParams" colspan="2">template&lt;Operator Type&gt; </td></tr>
<tr class="memitem:a711aca319bb4d1586bf1ed92eccfaa97 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a711aca319bb4d1586bf1ed92eccfaa97">Apply</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_one, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a711aca319bb4d1586bf1ed92eccfaa97 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies Boolean operation to two vertices representing sets.  <a href="#a711aca319bb4d1586bf1ed92eccfaa97">More...</a><br /></td></tr>
<tr class="separator:a711aca319bb4d1586bf1ed92eccfaa97 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f2deb99cf4a08565f6c0177ec263961 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a4f2deb99cf4a08565f6c0177ec263961">Apply</a> (<a class="el" href="pdag_8h.xhtml#ad4c053147ae98b76f12620441f6d3800">Operator</a> type, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_one, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a4f2deb99cf4a08565f6c0177ec263961 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies Boolean operation to two vertices representing sets.  <a href="#a4f2deb99cf4a08565f6c0177ec263961">More...</a><br /></td></tr>
<tr class="separator:a4f2deb99cf4a08565f6c0177ec263961 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6651a03c79671c2cd495a15d7257659e inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memTemplParams" colspan="2">template&lt;Operator Type&gt; </td></tr>
<tr class="memitem:a6651a03c79671c2cd495a15d7257659e inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a6651a03c79671c2cd495a15d7257659e">Apply</a> (const <a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a> &amp;arg_one, const <a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a6651a03c79671c2cd495a15d7257659e inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies Boolean operation to ZBDD graph non-terminal vertices.  <a href="#a6651a03c79671c2cd495a15d7257659e">More...</a><br /></td></tr>
<tr class="separator:a6651a03c79671c2cd495a15d7257659e inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3ac27090b550d973b20bd971c3de9f9 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ac3ac27090b550d973b20bd971c3de9f9">EliminateComplements</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;vertex, std::unordered_map&lt; int, <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &gt; *wide_results) noexcept</td></tr>
<tr class="memdesc:ac3ac27090b550d973b20bd971c3de9f9 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes complements of variables from products.  <a href="#ac3ac27090b550d973b20bd971c3de9f9">More...</a><br /></td></tr>
<tr class="separator:ac3ac27090b550d973b20bd971c3de9f9 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb83fd37f2aee74ac41e6ccadba82d39 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#aeb83fd37f2aee74ac41e6ccadba82d39">EliminateConstantModules</a> () noexcept</td></tr>
<tr class="memdesc:aeb83fd37f2aee74ac41e6ccadba82d39 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes constant modules from products.  <a href="#aeb83fd37f2aee74ac41e6ccadba82d39">More...</a><br /></td></tr>
<tr class="separator:aeb83fd37f2aee74ac41e6ccadba82d39 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dbb8ef5da2882daf6c39e9724eae459 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a3dbb8ef5da2882daf6c39e9724eae459">Minimize</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;vertex) noexcept</td></tr>
<tr class="memdesc:a3dbb8ef5da2882daf6c39e9724eae459 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes subsets in ZBDD.  <a href="#a3dbb8ef5da2882daf6c39e9724eae459">More...</a><br /></td></tr>
<tr class="separator:a3dbb8ef5da2882daf6c39e9724eae459 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a516f0d2f35ad213399f83fb9ab102561 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a516f0d2f35ad213399f83fb9ab102561">GatherModules</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;vertex, int current_order, std::map&lt; int, std::pair&lt; bool, int &gt;&gt; *<a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#aed1eaa96df30e6eaa32e9e51427c9743">modules</a>) noexcept</td></tr>
<tr class="memdesc:a516f0d2f35ad213399f83fb9ab102561 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Traverses ZBDD to find modules and adjusted cut-offs.  <a href="#a516f0d2f35ad213399f83fb9ab102561">More...</a><br /></td></tr>
<tr class="separator:a516f0d2f35ad213399f83fb9ab102561 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cfceb8301f35bce33c34f1283f33725 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a8cfceb8301f35bce33c34f1283f33725">ApplySubstitutions</a> (const std::vector&lt; <a class="el" href="structscram_1_1core_1_1Pdag_1_1Substitution.xhtml">Pdag::Substitution</a> &gt; &amp;substitutions) noexcept</td></tr>
<tr class="memdesc:a8cfceb8301f35bce33c34f1283f33725 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies non-declarative substitutions at the end of analysis.  <a href="#a8cfceb8301f35bce33c34f1283f33725">More...</a><br /></td></tr>
<tr class="separator:a8cfceb8301f35bce33c34f1283f33725 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c1129acd9810b5b9ff4952f587ce490 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7c1129acd9810b5b9ff4952f587ce490"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a7c1129acd9810b5b9ff4952f587ce490">ClearTables</a> () noexcept</td></tr>
<tr class="memdesc:a7c1129acd9810b5b9ff4952f587ce490 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears all memoization tables. <br /></td></tr>
<tr class="separator:a7c1129acd9810b5b9ff4952f587ce490 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e6359ba152137912cbafc500c2e6430 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a3e6359ba152137912cbafc500c2e6430">Freeze</a> () noexcept</td></tr>
<tr class="memdesc:a3e6359ba152137912cbafc500c2e6430 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Freezes the graph.  <a href="#a3e6359ba152137912cbafc500c2e6430">More...</a><br /></td></tr>
<tr class="separator:a3e6359ba152137912cbafc500c2e6430 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ecbf60e6ac51e5260e8d8139c1b8599 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a4ecbf60e6ac51e5260e8d8139c1b8599">JoinModule</a> (int index, std::unique_ptr&lt; <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml">Zbdd</a> &gt; container) noexcept</td></tr>
<tr class="memdesc:a4ecbf60e6ac51e5260e8d8139c1b8599 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Joins a ZBDD representing a module gate.  <a href="#a4ecbf60e6ac51e5260e8d8139c1b8599">More...</a><br /></td></tr>
<tr class="separator:a4ecbf60e6ac51e5260e8d8139c1b8599 inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a499a8bc4bc3854e7b2928c08515243cf inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memTemplParams" colspan="2"><a class="anchor" id="a499a8bc4bc3854e7b2928c08515243cf"></a>
template&lt;&gt; </td></tr>
<tr class="memitem:a499a8bc4bc3854e7b2928c08515243cf inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a499a8bc4bc3854e7b2928c08515243cf">Apply</a> (const <a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a> &amp;arg_one, const <a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a499a8bc4bc3854e7b2928c08515243cf inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialization of Apply for AND operator for non-terminal ZBDD vertices. <br /></td></tr>
<tr class="separator:a499a8bc4bc3854e7b2928c08515243cf inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a363960002737004ea45f67758d9ac17d inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memTemplParams" colspan="2"><a class="anchor" id="a363960002737004ea45f67758d9ac17d"></a>
template&lt;&gt; </td></tr>
<tr class="memitem:a363960002737004ea45f67758d9ac17d inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a363960002737004ea45f67758d9ac17d">Apply</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_one, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a363960002737004ea45f67758d9ac17d inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialization of Apply for AND operator for any ZBDD vertices. <br /></td></tr>
<tr class="separator:a363960002737004ea45f67758d9ac17d inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a499a8bc4bc3854e7b2928c08515243cf inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memTemplParams" colspan="2"><a class="anchor" id="a499a8bc4bc3854e7b2928c08515243cf"></a>
template&lt;&gt; </td></tr>
<tr class="memitem:a499a8bc4bc3854e7b2928c08515243cf inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a499a8bc4bc3854e7b2928c08515243cf">Apply</a> (const <a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a> &amp;arg_one, const <a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a499a8bc4bc3854e7b2928c08515243cf inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialization of Apply for OR operator for non-terminal ZBDD vertices. <br /></td></tr>
<tr class="separator:a499a8bc4bc3854e7b2928c08515243cf inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a363960002737004ea45f67758d9ac17d inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memTemplParams" colspan="2"><a class="anchor" id="a363960002737004ea45f67758d9ac17d"></a>
template&lt;&gt; </td></tr>
<tr class="memitem:a363960002737004ea45f67758d9ac17d inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a363960002737004ea45f67758d9ac17d">Apply</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_one, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a363960002737004ea45f67758d9ac17d inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialization of Apply for OR operator for any ZBDD vertices. <br /></td></tr>
<tr class="separator:a363960002737004ea45f67758d9ac17d inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a363960002737004ea45f67758d9ac17d inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memTemplParams" colspan="2"><a class="anchor" id="a363960002737004ea45f67758d9ac17d"></a>
template&lt;&gt; </td></tr>
<tr class="memitem:a363960002737004ea45f67758d9ac17d inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a363960002737004ea45f67758d9ac17d">Apply</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_one, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a363960002737004ea45f67758d9ac17d inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Forward declarations of interdependent Apply operation specializations. <br /></td></tr>
<tr class="separator:a363960002737004ea45f67758d9ac17d inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a363960002737004ea45f67758d9ac17d inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memTemplParams" colspan="2"><a class="anchor" id="a363960002737004ea45f67758d9ac17d"></a>
template&lt;&gt; </td></tr>
<tr class="memitem:a363960002737004ea45f67758d9ac17d inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a363960002737004ea45f67758d9ac17d">Apply</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_one, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a363960002737004ea45f67758d9ac17d inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Forward declarations of interdependent Apply operation specializations. <br /></td></tr>
<tr class="separator:a363960002737004ea45f67758d9ac17d inherit pro_methods_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classscram_1_1core_1_1Zbdd"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classscram_1_1core_1_1Zbdd')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml">scram::core::Zbdd</a></td></tr>
<tr class="memitem:a66b1888c00815cc350464f0cffc0abed inherit pro_attribs_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a335b8ada37f49919670e93dfc8ef307c">TerminalPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a66b1888c00815cc350464f0cffc0abed">kBase_</a></td></tr>
<tr class="memdesc:a66b1888c00815cc350464f0cffc0abed inherit pro_attribs_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classscram_1_1core_1_1Terminal.xhtml" title="Representation of terminal vertices in BDD graphs. ">Terminal</a> Base (Unity/1) set.  <a href="#a66b1888c00815cc350464f0cffc0abed">More...</a><br /></td></tr>
<tr class="separator:a66b1888c00815cc350464f0cffc0abed inherit pro_attribs_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac474673e432b2ea0908b230886f7f6a2 inherit pro_attribs_classscram_1_1core_1_1Zbdd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac474673e432b2ea0908b230886f7f6a2"></a>
const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a335b8ada37f49919670e93dfc8ef307c">TerminalPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ac474673e432b2ea0908b230886f7f6a2">kEmpty_</a></td></tr>
<tr class="memdesc:ac474673e432b2ea0908b230886f7f6a2 inherit pro_attribs_classscram_1_1core_1_1Zbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classscram_1_1core_1_1Terminal.xhtml" title="Representation of terminal vertices in BDD graphs. ">Terminal</a> Empty (Null/0) set. <br /></td></tr>
<tr class="separator:ac474673e432b2ea0908b230886f7f6a2 inherit pro_attribs_classscram_1_1core_1_1Zbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Storage for generated cut sets in MOCUS. </p>
<p>The semantics is similar to a set of cut sets. The container assumes special variable ordering. Gates to be processed must be ordered to the top. </p>

<p>Definition at line <a class="el" href="zbdd_8h_source.xhtml#l00885">885</a> of file <a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a3f14bbccf0c5edd4b41dfb75c04d0b45"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">scram::core::zbdd::CutSetContainer::CutSetContainer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Settings.xhtml">Settings</a> &amp;&#160;</td>
          <td class="paramname"><em>settings</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>module_index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>gate_index_bound</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default constructor to initialize member variables. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">settings</td><td><a class="el" href="classscram_1_1core_1_1Settings.xhtml" title="Builder for analysis settings. ">Settings</a> that control analysis complexity. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">module_index</td><td>The of a module if known. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">gate_index_bound</td><td>The exclusive lower bound for gate indices.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Precondition</dt><dd>No complements of gates. </dd>
<dd>
Gates are indexed sequentially starting from a number larger than the lower bound. </dd>
<dd>
Basic events are indexed sequentially up to a number less than or equal to the given lower bound. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8cc_source.xhtml#l00885">885</a> of file <a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a15ccbd5b839be87c831a743f0100588e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a> scram::core::zbdd::CutSetContainer::ConvertGate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Gate.xhtml">Gate</a> &amp;&#160;</td>
          <td class="paramname"><em>gate</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Converts a PDAG gate into intermediate cut sets. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gate</td><td>The target AND/OR gate with arguments.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The root vertex of the ZBDD representing the gate cut sets. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8cc_source.xhtml#l00890">890</a> of file <a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a>.</p>

<p>References <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a711aca319bb4d1586bf1ed92eccfaa97">scram::core::Zbdd::Apply()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00527">scram::core::Zbdd::ClearTables()</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00198">scram::core::Zbdd::FindOrAddVertex()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00565">scram::core::Zbdd::kBase_</a>, <a class="el" href="zbdd_8h_source.xhtml#l00566">scram::core::Zbdd::kEmpty_</a>, <a class="el" href="settings_8h_source.xhtml#l00110">scram::core::Settings::limit_order()</a>, and <a class="el" href="zbdd_8h_source.xhtml#l00385">scram::core::Zbdd::settings()</a>.</p>

<p><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1zbdd_1_1CutSetContainer_a15ccbd5b839be87c831a743f0100588e_cgraph.svg" width="662" height="314"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a9f6c0cef12a80aefbfb357022d558053"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int scram::core::zbdd::CutSetContainer::GetNextGate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Finds a gate in intermediate cut sets. </p>
<dl class="section return"><dt>Returns</dt><dd>The index of the gate in intermediate cut sets. </dd>
<dd>
0 if no gates are found.</dd></dl>
<dl class="section pre"><dt>Precondition</dt><dd><a class="el" href="classscram_1_1core_1_1Variable.xhtml" title="Boolean variables in a Boolean formula or graph. ">Variable</a> ordering puts the gate to the top (root). </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8h_source.xhtml#l00914">914</a> of file <a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a>.</p>

<p>References <a class="el" href="bdd_8h_source.xhtml#l00267">scram::core::NonTerminal&lt; T &gt;::index()</a>, <a class="el" href="bdd_8h_source.xhtml#l00267">scram::core::NonTerminal&lt; SetNode &gt;::index()</a>, <a class="el" href="bdd_8h_source.xhtml#l00276">scram::core::NonTerminal&lt; T &gt;::module()</a>, <a class="el" href="bdd_8h_source.xhtml#l00067">scram::core::IntrusivePtrCast&lt; SetNode &gt;::Ref()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00377">scram::core::Zbdd::root()</a>, and <a class="el" href="bdd_8h_source.xhtml#l00176">scram::core::Vertex&lt; SetNode &gt;::terminal()</a>.</p>

<p><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1zbdd_1_1CutSetContainer_a9f6c0cef12a80aefbfb357022d558053_cgraph.svg" width="464" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aa0848a768a2bcf4b22618e676a8bbaeb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a> scram::core::zbdd::CutSetContainer::ExtractIntermediateCutSets </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Extracts (removes!) intermediate cut sets containing a node with a given index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>The index of the gate.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The root of the ZBDD containing the intermediate cut sets.</dd></dl>
<dl class="section pre"><dt>Precondition</dt><dd><a class="el" href="classscram_1_1core_1_1Variable.xhtml" title="Boolean variables in a Boolean formula or graph. ">Variable</a> ordering puts the gate to the top (root).</dd></dl>
<dl class="section post"><dt>Postcondition</dt><dd>The extracted cut sets are pre-processed by removing the vertex with the index of the gate. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8cc_source.xhtml#l00916">916</a> of file <a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a>.</p>

<p>References <a class="el" href="logger_8h_source.xhtml#l00082">scram::DEBUG5</a>, <a class="el" href="logger_8h_source.xhtml#l00060">LOG</a>, <a class="el" href="bdd_8h_source.xhtml#l00064">scram::core::IntrusivePtrCast&lt; SetNode &gt;::Ptr()</a>, <a class="el" href="bdd_8h_source.xhtml#l00067">scram::core::IntrusivePtrCast&lt; SetNode &gt;::Ref()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00377">scram::core::Zbdd::root()</a>, and <a class="el" href="zbdd_8h_source.xhtml#l00385">scram::core::Zbdd::settings()</a>.</p>

<p><div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1zbdd_1_1CutSetContainer_aa0848a768a2bcf4b22618e676a8bbaeb_cgraph.svg" width="500" height="235"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a59985023f1eba639571610ad9a0b2a41"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a> scram::core::zbdd::CutSetContainer::ExpandGate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>gate_zbdd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>cut_sets</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Expands the intermediate ZBDD representation of a gate in intermediate cut sets containing the gate. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gate_zbdd</td><td>The intermediate ZBDD of the gate. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cut_sets</td><td>A collection of cut sets.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The root vertex of the resulting ZBDD.</dd></dl>
<dl class="section pre"><dt>Precondition</dt><dd>The intermediate cut sets are pre-processed by removing the vertex with the index of the gate. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8cc_source.xhtml#l00927">927</a> of file <a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a>.</p>

<p>References <a class="el" href="settings_8h_source.xhtml#l00110">scram::core::Settings::limit_order()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00057">scram::core::SetNode::max_set_order()</a>, <a class="el" href="bdd_8h_source.xhtml#l00067">scram::core::IntrusivePtrCast&lt; SetNode &gt;::Ref()</a>, and <a class="el" href="zbdd_8h_source.xhtml#l00385">scram::core::Zbdd::settings()</a>.</p>

<p><div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1zbdd_1_1CutSetContainer_a59985023f1eba639571610ad9a0b2a41_cgraph.svg" width="452" height="248"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a87489caef0ebb8e4b62c600455da84a2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::zbdd::CutSetContainer::Merge </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>vertex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Merges a set of cut sets into the main container. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">vertex</td><td>The root ZBDD vertex representing the cut sets.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Precondition</dt><dd>The argument ZBDD cut sets are managed by this container. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8cc_source.xhtml#l00936">936</a> of file <a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a>.</p>

<p>References <a class="el" href="zbdd_8h_source.xhtml#l00527">scram::core::Zbdd::ClearTables()</a>, <a class="el" href="settings_8h_source.xhtml#l00110">scram::core::Settings::limit_order()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00057">scram::core::SetNode::max_set_order()</a>, <a class="el" href="bdd_8h_source.xhtml#l00067">scram::core::IntrusivePtrCast&lt; SetNode &gt;::Ref()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00377">scram::core::Zbdd::root()</a>, and <a class="el" href="zbdd_8h_source.xhtml#l00385">scram::core::Zbdd::settings()</a>.</p>

<p><div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1zbdd_1_1CutSetContainer_a87489caef0ebb8e4b62c600455da84a2_cgraph.svg" width="414" height="366"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a49532388bd9b917f4351f94f728518aa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::zbdd::CutSetContainer::EliminateComplements </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Eliminates all complements from cut sets. </p>
<p>This can only be done if the cut set generation is certain not to have conflicts.</p>
<dl class="section pre"><dt>Precondition</dt><dd>The cut sets have negative literals, i.e., non-coherent.</dd></dl>
<dl class="section post"><dt>Postcondition</dt><dd>Sub-modules are not processed. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8h_source.xhtml#l00961">961</a> of file <a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a>.</p>

<p>References <a class="el" href="zbdd_8cc_source.xhtml#l00546">scram::core::Zbdd::EliminateComplements()</a>, and <a class="el" href="zbdd_8h_source.xhtml#l00377">scram::core::Zbdd::root()</a>.</p>

<p><div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1zbdd_1_1CutSetContainer_a49532388bd9b917f4351f94f728518aa_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a1022ad7a4699257a6f0c0809d8f1903d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::zbdd::CutSetContainer::EliminateConstantModules </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Removes constant modules from cut sets. </p>
<p><a class="el" href="classscram_1_1core_1_1Constant.xhtml" title="Representation of a node that is a Boolean constant TRUE. ">Constant</a> modules are likely to happen after complement elimination.</p>
<dl class="section pre"><dt>Precondition</dt><dd>All modules have been processed. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8h_source.xhtml#l00970">970</a> of file <a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a>.</p>

<p>References <a class="el" href="zbdd_8cc_source.xhtml#l00574">scram::core::Zbdd::EliminateConstantModules()</a>.</p>

<p><div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1zbdd_1_1CutSetContainer_a1022ad7a4699257a6f0c0809d8f1903d_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a1648d3f24a95302fac2a40e95f743dda"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::zbdd::CutSetContainer::Minimize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Minimizes cut sets in the container. </p>
<dl class="section post"><dt>Postcondition</dt><dd>Sub-modules are not processed. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8h_source.xhtml#l00975">975</a> of file <a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a>.</p>

<p>References <a class="el" href="zbdd_8cc_source.xhtml#l00613">scram::core::Zbdd::Minimize()</a>, and <a class="el" href="zbdd_8h_source.xhtml#l00377">scram::core::Zbdd::root()</a>.</p>

<p><div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1zbdd_1_1CutSetContainer_a1648d3f24a95302fac2a40e95f743dda_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a478c89f64731781882b50ec55898900b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::map&lt;int, std::pair&lt;bool, int&gt; &gt; scram::core::zbdd::CutSetContainer::GatherModules </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gathers all module indices in the cut sets. </p>
<dl class="section return"><dt>Returns</dt><dd>An unordered map module of indices, coherence, and cut-offs. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8h_source.xhtml#l00980">980</a> of file <a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a>.</p>

<p>References <a class="el" href="zbdd_8cc_source.xhtml#l00716">scram::core::Zbdd::GatherModules()</a>, <a class="el" href="bdd_8h_source.xhtml#l00267">scram::core::NonTerminal&lt; T &gt;::index()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00555">scram::core::Zbdd::JoinModule()</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00047">scram::core::Zbdd::Log()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00388">scram::core::Zbdd::modules()</a>, and <a class="el" href="zbdd_8h_source.xhtml#l00377">scram::core::Zbdd::root()</a>.</p>

<p><div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1zbdd_1_1CutSetContainer_a478c89f64731781882b50ec55898900b_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a></li>
<li><a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:37 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
