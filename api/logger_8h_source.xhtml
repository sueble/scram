<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>logger.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">logger.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="logger_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2014-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// Logging capability for various purposes,</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/// such as warnings and debugging.</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">/// This logging facility caters mostly developers.</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">/// The design and code are inspired by</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">/// the C++ logging framework of Petru Marginean,</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">/// published at http://www.drdobbs.com/cpp/logging-in-c/201804215</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">/// The timing facilities are inspired by</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">/// the talk of Bryce Adelstein &quot;Benchmarking C++ Code&quot; at CppCon 2015.</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;cstdint&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;chrono&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;boost/noncopyable.hpp&gt;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;boost/preprocessor/cat.hpp&gt;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram.xhtml">scram</a> {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">/// Takes a current time stamp in nanoseconds.</span></div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="logger_8h.xhtml#a880c3125d7cf5cf06b79f8b449e0c3f0">   42</a></span>&#160;<span class="comment"></span><span class="preprocessor">#define TIME_STAMP() std::chrono::steady_clock::now().time_since_epoch().count()</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">/// Starts the timing in nanoseconds.</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">/// @param[out] var  A unique name for time variable in the scope.</span></div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="logger_8h.xhtml#a8501f67861832d9efa717e17010648f5">   47</a></span>&#160;<span class="comment"></span><span class="preprocessor">#define CLOCK(var) std::uint64_t var = TIME_STAMP()</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">/// Calculates the time duration since the start of the clock in seconds.</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">/// @param[in] var  The variable initialized by the CLOCK macro (in the past!).</span></div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="logger_8h.xhtml#afbc1fb2843a8415445a0528c5212eeb9">   52</a></span>&#160;<span class="comment"></span><span class="preprocessor">#define DUR(var) (TIME_STAMP() - var) * 1e-9</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">/// Creates an automatic unique logging timer for a scope.</span></div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="logger_8h.xhtml#a43bfc963f340281b07ac23d1c3ba00b5">   55</a></span>&#160;<span class="comment"></span><span class="preprocessor">#define TIMER(level, ...) \</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">  Timer&lt;level&gt; BOOST_PP_CAT(timer_, __LINE__)(__VA_ARGS__)</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">// clang-format off</span><span class="comment"></span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">/// Logging with a level.</span></div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">   60</a></span>&#160;<span class="comment"></span><span class="preprocessor">#define LOG(level) \</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">  if (level &lt;= scram::Logger::report_level()) scram::Logger().Get(level)</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">/// Conditional logging with a level.</span></div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="logger_8h.xhtml#aeb429ee17505f6ecedfc553f75f667af">   64</a></span>&#160;<span class="comment"></span><span class="preprocessor">#define BLOG(level, cond) \</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">  if (cond) LOG(level)</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">// clang-format on</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">/// Levels for log statements.</span></div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81e">   69</a></span>&#160;<span class="comment"></span><span class="keyword">enum</span> <a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81e">LogLevel</a> {  <span class="comment">// The numbers are used for array indices.</span></div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81eaf3e95d168354ebdd670c56c721d9d9f4">   70</a></span>&#160;  <a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81eaf3e95d168354ebdd670c56c721d9d9f4">ERROR</a> = 0,  <span class="comment">///&lt; Non-critical errors only.</span></div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea4f4bd6251fafa8940aa06789192c5d68">   71</a></span>&#160;<span class="comment"></span>  <a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea4f4bd6251fafa8940aa06789192c5d68">WARNING</a>,  <span class="comment">///&lt; Warnings for users, such as assumptions and corrections.</span></div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea7df87650b378ce7a39dec3fad22844b2">   72</a></span>&#160;<span class="comment"></span>  <a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea7df87650b378ce7a39dec3fad22844b2">INFO</a>,  <span class="comment">///&lt; Information for users, such as running time and complexity.</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"></span>  <span class="comment">// Debugging logs are structured depending on the code under execution.</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="comment">// The deeper the code is located, the higher the level should be.</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="comment">// For example, if class A uses some utility class B,</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="comment">// class B should have higher debugging levels.</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="comment">// This is only a recommendation.</span></div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea2d4eac027f72ba19eb11f1d5ae7ddadc">   78</a></span>&#160;  <a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea2d4eac027f72ba19eb11f1d5ae7ddadc">DEBUG1</a>,  <span class="comment">///&lt; Minimal debugging information.</span></div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea064d45d966cf5368bd8a5e317e65a0e6">   79</a></span>&#160;<span class="comment"></span>  <a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea064d45d966cf5368bd8a5e317e65a0e6">DEBUG2</a>,  <span class="comment">///&lt; Debugging information for the code inside of DEBUG1.</span></div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea1571c622645c44a111d16a86ebde8b44">   80</a></span>&#160;<span class="comment"></span>  <a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea1571c622645c44a111d16a86ebde8b44">DEBUG3</a>,  <span class="comment">///&lt; Debugging information for the code inside of DEBUG2.</span></div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea2a5fff04371a557db59be045fd44fc04">   81</a></span>&#160;<span class="comment"></span>  <a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea2a5fff04371a557db59be045fd44fc04">DEBUG4</a>,  <span class="comment">///&lt; Debugging information for the code inside of DEBUG3.</span></div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81eabc16fffa8cbff393a1a5c886ed47f9f5">   82</a></span>&#160;<span class="comment"></span>  <a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81eabc16fffa8cbff393a1a5c886ed47f9f5">DEBUG5</a>  <span class="comment">///&lt; Debugging information for the code inside of DEBUG4.</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="logger_8h.xhtml#af563360997f0f92913b21c35682de70b">   85</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="logger_8h.xhtml#af563360997f0f92913b21c35682de70b">kMaxVerbosity</a> = 7;  <span class="comment">///&lt; The index of the last level.</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">/// This is a general purpose logger;</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">/// however, its main usage is asserted to be for debugging.</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">/// All messages are directed to the standard error in a thread-safe way.</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">/// This class may be expanded and modified in future</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">/// to include more levels, prefixes, and logging types</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">/// if it deems necessary.</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">/// @warning Do not place any state-changing expressions</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">///          with the LOG macro as they may not run</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">///          if the report level excludes the specified level.</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">/// @warning Do not place leading spaces, newline, or tabs in messages</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">///          because it will mess up the level-dependent printing.</span></div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classscram_1_1Logger.xhtml">  100</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1Logger.xhtml">Logger</a> : <span class="keyword">private</span> boost::noncopyable {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; <span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">  /// Flashes all the logs into the standard error upon destruction.</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment"></span>  <a class="code" href="classscram_1_1Logger.xhtml#ae43eee310afdc29fe7babde1ed3707fa">~Logger</a>() noexcept;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">  /// @returns Reference to the cut-off level for reporting.</span></div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classscram_1_1Logger.xhtml#addb585eb19dfd78f4a82f2e3df74b4e7">  106</a></span>&#160;<span class="comment"></span>  <span class="keyword">static</span> <a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81e">LogLevel</a> <a class="code" href="classscram_1_1Logger.xhtml#addb585eb19dfd78f4a82f2e3df74b4e7">report_level</a>() { <span class="keywordflow">return</span> report_level_; }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">  /// Sets the reporting level cut-off.</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">  /// @param[in] level  The maximum level of logging.</span></div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classscram_1_1Logger.xhtml#a58bf1282fb76ff3b61d499c585318175">  111</a></span>&#160;<span class="comment"></span>  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classscram_1_1Logger.xhtml#a58bf1282fb76ff3b61d499c585318175">report_level</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81e">LogLevel</a> level) { report_level_ = level; }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">  /// Returns a string stream by reference</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">  /// that is flushed to stderr by the Logger class destructor.</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">  /// @param[in] level  The log level for the information.</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">  /// @returns Formatted output stringstream with the log level information.</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment"></span>  std::ostringstream&amp; <a class="code" href="classscram_1_1Logger.xhtml#a4758c14402d2dbc180f98edaf94effcb">Get</a>(<a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81e">LogLevel</a> level);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; <span class="keyword">private</span>:<span class="comment"></span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">  /// Translates the logging level into a string.</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">  /// The index is the value of the enum.</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment"></span>  <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <span class="keyword">const</span> kLevelToString_[];</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keyword">static</span> <a class="code" href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81e">LogLevel</a> report_level_;  <span class="comment">///&lt; Cut-off log level for reporting.</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  std::ostringstream os_;  <span class="comment">///&lt; Main stringstream to gather the logs.</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">/// Automatic (scoped) timer to log process duration.</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;LogLevel Level&gt;</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="classscram_1_1Timer.xhtml">  133</a></span>&#160;<span class="keyword">class </span><a class="code" href="classscram_1_1Timer.xhtml">Timer</a> {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; <span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">  /// @param[in] process_name  The process being logged.</span></div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classscram_1_1Timer.xhtml#a7a784d403c3251b1764a8483b215cc98">  136</a></span>&#160;<span class="comment"></span>  <span class="keyword">explicit</span> <a class="code" href="classscram_1_1Timer.xhtml#a7a784d403c3251b1764a8483b215cc98">Timer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* process_name)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      : process_name_(process_name), process_time_(<a class="code" href="logger_8h.xhtml#a880c3125d7cf5cf06b79f8b449e0c3f0">TIME_STAMP</a>()) {</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(Level) &lt;&lt; process_name_ &lt;&lt; <span class="stringliteral">&quot;...&quot;</span>;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  }</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">  /// Puts the accumulated time into the logs.</span></div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="classscram_1_1Timer.xhtml#a9be0fade3c7de29f447d40e1e02d3905">  142</a></span>&#160;<span class="comment"></span>  <a class="code" href="classscram_1_1Timer.xhtml#a9be0fade3c7de29f447d40e1e02d3905">~Timer</a>() {</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a>(Level) &lt;&lt; <span class="stringliteral">&quot;Finished &quot;</span> &lt;&lt; process_name_ &lt;&lt; <span class="stringliteral">&quot; in &quot;</span> &lt;&lt; <a class="code" href="logger_8h.xhtml#afbc1fb2843a8415445a0528c5212eeb9">DUR</a>(process_time_);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  }</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; <span class="keyword">private</span>:</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* process_name_;  <span class="comment">///&lt; The process name to be logged.</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment"></span>  std::uint64_t process_time_;  <span class="comment">///&lt; The process start time.</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;}  <span class="comment">// namespace scram</span></div><div class="ttc" id="logger_8h_xhtml_a8cc0e8b39d76d12fd165097dbc8cf81ea2d4eac027f72ba19eb11f1d5ae7ddadc"><div class="ttname"><a href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea2d4eac027f72ba19eb11f1d5ae7ddadc">scram::DEBUG1</a></div><div class="ttdoc">Minimal debugging information. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00078">logger.h:78</a></div></div>
<div class="ttc" id="logger_8h_xhtml_a880c3125d7cf5cf06b79f8b449e0c3f0"><div class="ttname"><a href="logger_8h.xhtml#a880c3125d7cf5cf06b79f8b449e0c3f0">TIME_STAMP</a></div><div class="ttdeci">#define TIME_STAMP()</div><div class="ttdoc">Takes a current time stamp in nanoseconds. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00042">logger.h:42</a></div></div>
<div class="ttc" id="logger_8h_xhtml_a8cc0e8b39d76d12fd165097dbc8cf81ea4f4bd6251fafa8940aa06789192c5d68"><div class="ttname"><a href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea4f4bd6251fafa8940aa06789192c5d68">scram::WARNING</a></div><div class="ttdoc">Warnings for users, such as assumptions and corrections. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00071">logger.h:71</a></div></div>
<div class="ttc" id="logger_8h_xhtml_af563360997f0f92913b21c35682de70b"><div class="ttname"><a href="logger_8h.xhtml#af563360997f0f92913b21c35682de70b">scram::kMaxVerbosity</a></div><div class="ttdeci">const int kMaxVerbosity</div><div class="ttdoc">The index of the last level. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00085">logger.h:85</a></div></div>
<div class="ttc" id="logger_8h_xhtml_afbc1fb2843a8415445a0528c5212eeb9"><div class="ttname"><a href="logger_8h.xhtml#afbc1fb2843a8415445a0528c5212eeb9">DUR</a></div><div class="ttdeci">#define DUR(var)</div><div class="ttdoc">Calculates the time duration since the start of the clock in seconds. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00052">logger.h:52</a></div></div>
<div class="ttc" id="logger_8h_xhtml_a8cc0e8b39d76d12fd165097dbc8cf81eabc16fffa8cbff393a1a5c886ed47f9f5"><div class="ttname"><a href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81eabc16fffa8cbff393a1a5c886ed47f9f5">scram::DEBUG5</a></div><div class="ttdoc">Debugging information for the code inside of DEBUG4. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00082">logger.h:82</a></div></div>
<div class="ttc" id="classscram_1_1Logger_xhtml_addb585eb19dfd78f4a82f2e3df74b4e7"><div class="ttname"><a href="classscram_1_1Logger.xhtml#addb585eb19dfd78f4a82f2e3df74b4e7">scram::Logger::report_level</a></div><div class="ttdeci">static LogLevel report_level()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00106">logger.h:106</a></div></div>
<div class="ttc" id="classscram_1_1Logger_xhtml"><div class="ttname"><a href="classscram_1_1Logger.xhtml">scram::Logger</a></div><div class="ttdoc">This is a general purpose logger; however, its main usage is asserted to be for debugging. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00100">logger.h:100</a></div></div>
<div class="ttc" id="classscram_1_1Timer_xhtml"><div class="ttname"><a href="classscram_1_1Timer.xhtml">scram::Timer</a></div><div class="ttdoc">Automatic (scoped) timer to log process duration. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00133">logger.h:133</a></div></div>
<div class="ttc" id="logger_8h_xhtml_a8cc0e8b39d76d12fd165097dbc8cf81ea1571c622645c44a111d16a86ebde8b44"><div class="ttname"><a href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea1571c622645c44a111d16a86ebde8b44">scram::DEBUG3</a></div><div class="ttdoc">Debugging information for the code inside of DEBUG2. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00080">logger.h:80</a></div></div>
<div class="ttc" id="namespacescram_xhtml"><div class="ttname"><a href="namespacescram.xhtml">scram</a></div></div>
<div class="ttc" id="logger_8h_xhtml_aba7b09d6e8fbe414c23705ad24dde6ff"><div class="ttname"><a href="logger_8h.xhtml#aba7b09d6e8fbe414c23705ad24dde6ff">LOG</a></div><div class="ttdeci">#define LOG(level)</div><div class="ttdoc">Logging with a level. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00060">logger.h:60</a></div></div>
<div class="ttc" id="logger_8h_xhtml_a8cc0e8b39d76d12fd165097dbc8cf81ea7df87650b378ce7a39dec3fad22844b2"><div class="ttname"><a href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea7df87650b378ce7a39dec3fad22844b2">scram::INFO</a></div><div class="ttdoc">Information for users, such as running time and complexity. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00072">logger.h:72</a></div></div>
<div class="ttc" id="classscram_1_1Timer_xhtml_a9be0fade3c7de29f447d40e1e02d3905"><div class="ttname"><a href="classscram_1_1Timer.xhtml#a9be0fade3c7de29f447d40e1e02d3905">scram::Timer::~Timer</a></div><div class="ttdeci">~Timer()</div><div class="ttdoc">Puts the accumulated time into the logs. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00142">logger.h:142</a></div></div>
<div class="ttc" id="classscram_1_1Logger_xhtml_a4758c14402d2dbc180f98edaf94effcb"><div class="ttname"><a href="classscram_1_1Logger.xhtml#a4758c14402d2dbc180f98edaf94effcb">scram::Logger::Get</a></div><div class="ttdeci">std::ostringstream &amp; Get(LogLevel level)</div><div class="ttdoc">Returns a string stream by reference that is flushed to stderr by the Logger class destructor...</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cc_source.xhtml#l00040">logger.cc:40</a></div></div>
<div class="ttc" id="logger_8h_xhtml_a8cc0e8b39d76d12fd165097dbc8cf81ea2a5fff04371a557db59be045fd44fc04"><div class="ttname"><a href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea2a5fff04371a557db59be045fd44fc04">scram::DEBUG4</a></div><div class="ttdoc">Debugging information for the code inside of DEBUG3. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00081">logger.h:81</a></div></div>
<div class="ttc" id="classscram_1_1Timer_xhtml_a7a784d403c3251b1764a8483b215cc98"><div class="ttname"><a href="classscram_1_1Timer.xhtml#a7a784d403c3251b1764a8483b215cc98">scram::Timer::Timer</a></div><div class="ttdeci">Timer(const char *process_name)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00136">logger.h:136</a></div></div>
<div class="ttc" id="logger_8h_xhtml_a8cc0e8b39d76d12fd165097dbc8cf81ea064d45d966cf5368bd8a5e317e65a0e6"><div class="ttname"><a href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81ea064d45d966cf5368bd8a5e317e65a0e6">scram::DEBUG2</a></div><div class="ttdoc">Debugging information for the code inside of DEBUG1. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00079">logger.h:79</a></div></div>
<div class="ttc" id="logger_8h_xhtml_a8cc0e8b39d76d12fd165097dbc8cf81eaf3e95d168354ebdd670c56c721d9d9f4"><div class="ttname"><a href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81eaf3e95d168354ebdd670c56c721d9d9f4">scram::ERROR</a></div><div class="ttdoc">Non-critical errors only. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00070">logger.h:70</a></div></div>
<div class="ttc" id="logger_8h_xhtml_a8cc0e8b39d76d12fd165097dbc8cf81e"><div class="ttname"><a href="logger_8h.xhtml#a8cc0e8b39d76d12fd165097dbc8cf81e">scram::LogLevel</a></div><div class="ttdeci">LogLevel</div><div class="ttdoc">Levels for log statements. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00069">logger.h:69</a></div></div>
<div class="ttc" id="classscram_1_1Logger_xhtml_a58bf1282fb76ff3b61d499c585318175"><div class="ttname"><a href="classscram_1_1Logger.xhtml#a58bf1282fb76ff3b61d499c585318175">scram::Logger::report_level</a></div><div class="ttdeci">static void report_level(LogLevel level)</div><div class="ttdoc">Sets the reporting level cut-off. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8h_source.xhtml#l00111">logger.h:111</a></div></div>
<div class="ttc" id="classscram_1_1Logger_xhtml_ae43eee310afdc29fe7babde1ed3707fa"><div class="ttname"><a href="classscram_1_1Logger.xhtml#ae43eee310afdc29fe7babde1ed3707fa">scram::Logger::~Logger</a></div><div class="ttdeci">~Logger() noexcept</div><div class="ttdoc">Flashes all the logs into the standard error upon destruction. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8cc_source.xhtml#l00034">logger.cc:34</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:36 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
