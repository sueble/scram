<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>xml.cc Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">xml.cc</div>  </div>
</div><!--header-->
<div class="contents">
<a href="xml_8cc.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2014-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// XML facility expensive wrappers implemented out-of-line.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="xml_8h.xhtml">xml.h</a>&quot;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;libxml/xinclude.h&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram_1_1xml.xhtml">scram::xml</a> {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classscram_1_1xml_1_1Document.xhtml#a1672ae449b286137ae239ef4adfada44">   27</a></span>&#160;<a class="code" href="classscram_1_1xml_1_1Document.xhtml#a1672ae449b286137ae239ef4adfada44">Document::Document</a>(<span class="keyword">const</span> std::string&amp; file_path, <a class="code" href="classscram_1_1xml_1_1Validator.xhtml">Validator</a>* validator)</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    : doc_(nullptr, &amp;xmlFreeDoc) {</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  xmlResetLastError();</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  doc_.reset(xmlReadFile(file_path.c_str(), <span class="keyword">nullptr</span>, <a class="code" href="xml_8h.xhtml#a857dbaf973585577354019c3792590ba">kParserOptions</a>));</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  xmlErrorPtr xml_error = xmlGetLastError();</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keywordflow">if</span> (xml_error) {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordflow">if</span> (xml_error-&gt;domain == xmlErrorDomain::XML_FROM_IO) {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(<a class="code" href="structscram_1_1IOError.xhtml">IOError</a>(xml_error-&gt;message))</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;          &lt;&lt; boost::errinfo_file_name(file_path) &lt;&lt; boost::errinfo_errno(errno)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;          &lt;&lt; boost::errinfo_file_open_mode(<span class="stringliteral">&quot;r&quot;</span>);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    }</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(detail::GetError&lt;ParseError&gt;(xml_error));</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  }</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  assert(doc_ &amp;&amp; <span class="stringliteral">&quot;Internal XML library failure.&quot;</span>);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keywordflow">if</span> (xmlXIncludeProcessFlags(<span class="keyword">get</span>(), <a class="code" href="xml_8h.xhtml#a857dbaf973585577354019c3792590ba">kParserOptions</a>) &lt; 0 || xmlGetLastError())</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(detail::GetError&lt;XIncludeError&gt;());</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordflow">if</span> (validator)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    validator-&gt;<a class="code" href="classscram_1_1xml_1_1Validator.xhtml#ad1626f649d58bab2db7a077f4b6b061e">validate</a>(*<span class="keyword">this</span>);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classscram_1_1xml_1_1Validator.xhtml#a85ef48ba6de9bf1602a3768cf405f91d">   47</a></span>&#160;<a class="code" href="classscram_1_1xml_1_1Validator.xhtml#a85ef48ba6de9bf1602a3768cf405f91d">Validator::Validator</a>(<span class="keyword">const</span> std::string&amp; rng_file)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    : schema_(nullptr, &amp;xmlRelaxNGFree),</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      valid_ctxt_(nullptr, &amp;xmlRelaxNGFreeValidCtxt) {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  xmlResetLastError();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  std::unique_ptr&lt;xmlRelaxNGParserCtxt, decltype(&amp;xmlRelaxNGFreeParserCtxt)&gt;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      parser_ctxt(xmlRelaxNGNewParserCtxt(rng_file.c_str()),</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                  &amp;xmlRelaxNGFreeParserCtxt);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordflow">if</span> (!parser_ctxt)</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(detail::GetError&lt;LogicError&gt;());</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  schema_.reset(xmlRelaxNGParse(parser_ctxt.get()));</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordflow">if</span> (!schema_)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(detail::GetError&lt;ParseError&gt;());</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  valid_ctxt_.reset(xmlRelaxNGNewValidCtxt(schema_.get()));</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keywordflow">if</span> (!valid_ctxt_)</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a>(detail::GetError&lt;LogicError&gt;());</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}  <span class="comment">// namespace scram::xml</span></div><div class="ttc" id="structscram_1_1IOError_xhtml"><div class="ttname"><a href="structscram_1_1IOError.xhtml">scram::IOError</a></div><div class="ttdoc">For input/output related errors. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00066">error.h:66</a></div></div>
<div class="ttc" id="classscram_1_1xml_1_1Document_xhtml_a1672ae449b286137ae239ef4adfada44"><div class="ttname"><a href="classscram_1_1xml_1_1Document.xhtml#a1672ae449b286137ae239ef4adfada44">scram::xml::Document::Document</a></div><div class="ttdeci">Document(const std::string &amp;file_path, Validator *validator=nullptr)</div><div class="ttdoc">Parses XML input document. </div><div class="ttdef"><b>Definition:</b> <a href="xml_8cc_source.xhtml#l00027">xml.cc:27</a></div></div>
<div class="ttc" id="xml_8h_xhtml"><div class="ttname"><a href="xml_8h.xhtml">xml.h</a></div><div class="ttdoc">XML helper facilities to work with libxml2. </div></div>
<div class="ttc" id="classscram_1_1xml_1_1Validator_xhtml_a85ef48ba6de9bf1602a3768cf405f91d"><div class="ttname"><a href="classscram_1_1xml_1_1Validator.xhtml#a85ef48ba6de9bf1602a3768cf405f91d">scram::xml::Validator::Validator</a></div><div class="ttdeci">Validator(const std::string &amp;rng_file)</div><div class="ttdef"><b>Definition:</b> <a href="xml_8cc_source.xhtml#l00047">xml.cc:47</a></div></div>
<div class="ttc" id="namespacescram_1_1xml_xhtml"><div class="ttname"><a href="namespacescram_1_1xml.xhtml">scram::xml</a></div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00130">error.h:130</a></div></div>
<div class="ttc" id="classscram_1_1xml_1_1Validator_xhtml_ad1626f649d58bab2db7a077f4b6b061e"><div class="ttname"><a href="classscram_1_1xml_1_1Validator.xhtml#ad1626f649d58bab2db7a077f4b6b061e">scram::xml::Validator::validate</a></div><div class="ttdeci">void validate(const Document &amp;doc)</div><div class="ttdoc">Validates XML DOM documents against the schema. </div><div class="ttdef"><b>Definition:</b> <a href="xml_8h_source.xhtml#l00455">xml.h:455</a></div></div>
<div class="ttc" id="error_8h_xhtml_a766d8477fec3466ae1d75208fe0554e7"><div class="ttname"><a href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">SCRAM_THROW</a></div><div class="ttdeci">#define SCRAM_THROW(err)</div><div class="ttdoc">Convenience macro to throw SCRAM exceptions. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00038">error.h:38</a></div></div>
<div class="ttc" id="classscram_1_1xml_1_1Validator_xhtml"><div class="ttname"><a href="classscram_1_1xml_1_1Validator.xhtml">scram::xml::Validator</a></div><div class="ttdoc">RelaxNG validator. </div><div class="ttdef"><b>Definition:</b> <a href="xml_8h_source.xhtml#l00442">xml.h:442</a></div></div>
<div class="ttc" id="xml_8h_xhtml_a857dbaf973585577354019c3792590ba"><div class="ttname"><a href="xml_8h.xhtml#a857dbaf973585577354019c3792590ba">scram::xml::kParserOptions</a></div><div class="ttdeci">const int kParserOptions</div><div class="ttdoc">The parser options passed to the library parser. </div><div class="ttdef"><b>Definition:</b> <a href="xml_8h_source.xhtml#l00399">xml.h:399</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:37 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
