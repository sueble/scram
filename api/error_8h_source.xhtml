<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>error.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">error.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="error_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2014-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// Exceptions for SCRAM.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;exception&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;boost/current_function.hpp&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;boost/exception/exception.hpp&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;boost/exception/info.hpp&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="source__info_8h.xhtml">ext/source_info.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">/// Convenience macro to throw SCRAM exceptions.</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">/// This is similar to BOOST_THROW_EXCEPTION;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">/// however, it doesn&#39;t obfuscate</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">/// the resultant exception type to conform to boost::exception.</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">/// @param[in] err  The error type deriving from boost::exception.</span></div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="error_8h.xhtml#a766d8477fec3466ae1d75208fe0554e7">   38</a></span>&#160;<span class="comment"></span><span class="preprocessor">#define SCRAM_THROW(err)                                                       \</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">  throw err &lt;&lt; ::boost::throw_function(BOOST_THROW_EXCEPTION_CURRENT_FUNCTION) \</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">            &lt;&lt; ::boost::throw_file(FILE_REL_PATH)                              \</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">            &lt;&lt; ::boost::throw_line(__LINE__)</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram.xhtml">scram</a> {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">/// The Error class is the base class</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">/// for common exceptions specific to the SCRAM code.</span></div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classscram_1_1Error.xhtml">   47</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1Error.xhtml">Error</a> : <span class="keyword">virtual</span> <span class="keyword">public</span> std::exception, <span class="keyword">virtual</span> <span class="keyword">public</span> boost::exception {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; <span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">  /// Constructs a new error with a provided message.</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">  /// @param[in] msg  The message to be passed with this error.</span></div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">   52</a></span>&#160;<span class="comment"></span>  <span class="keyword">explicit</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error</a>(std::string msg) : msg_(std::move(msg)) {}</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error</a>(<span class="keyword">const</span> <a class="code" href="classscram_1_1Error.xhtml">Error</a>&amp;) = <span class="keywordflow">default</span>;  <span class="comment">///&lt; Explicit declaration.</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="keyword">virtual</span> ~<a class="code" href="classscram_1_1Error.xhtml">Error</a>() noexcept = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">  /// @returns The formatted error message to be printed.</span></div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classscram_1_1Error.xhtml#abf8f4acdd63cdd56fd40714d9a132a3e">   59</a></span>&#160;<span class="comment"></span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="classscram_1_1Error.xhtml#abf8f4acdd63cdd56fd40714d9a132a3e">what</a>() const noexcept final { <span class="keywordflow">return</span> msg_.c_str(); }</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; <span class="keyword">private</span>:</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  std::string msg_;  <span class="comment">///&lt; The error message.</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">/// For input/output related errors.</span></div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="structscram_1_1IOError.xhtml">   66</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1IOError.xhtml">IOError</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1Error.xhtml">Error</a> {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error::Error</a>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;};</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">/// Dynamic library errors.</span></div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="structscram_1_1DLError.xhtml">   71</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1DLError.xhtml">DLError</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1Error.xhtml">Error</a> {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error::Error</a>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;};</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">/// Signals internal logic errors,</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">/// for example, pre-condition failure</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">/// or use of functionality in ways not designed to.</span></div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="structscram_1_1LogicError.xhtml">   78</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1LogicError.xhtml">LogicError</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1Error.xhtml">Error</a> {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error::Error</a>;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;};</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">/// This error can be used to indicate</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">/// that call for a function or operation is not legal.</span></div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="structscram_1_1IllegalOperation.xhtml">   84</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1IllegalOperation.xhtml">IllegalOperation</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1Error.xhtml">Error</a> {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error::Error</a>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;};</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">/// The error in analysis settings.</span></div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="structscram_1_1SettingsError.xhtml">   89</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1SettingsError.xhtml">SettingsError</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1Error.xhtml">Error</a> {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error::Error</a>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;};</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keyword">namespace </span>mef {  <span class="comment">// MEF specific errors.</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">/// The MEF container element as namespace.</span></div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="error_8h.xhtml#a9e7c724d6d57b1b9fa496e66755e5e02">   96</a></span>&#160;<span class="comment"></span><span class="keyword">using</span> <a class="code" href="error_8h.xhtml#a9e7c724d6d57b1b9fa496e66755e5e02">errinfo_container</a> = boost::error_info&lt;struct tag_contianer, std::string&gt;;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">/// For validating input parameters or user arguments.</span></div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="structscram_1_1mef_1_1ValidityError.xhtml">   99</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1mef_1_1ValidityError.xhtml">ValidityError</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1Error.xhtml">Error</a> {</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error::Error</a>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;};</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">/// For cases when events or practically anything is redefined.</span></div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="structscram_1_1mef_1_1RedefinitionError.xhtml">  104</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1mef_1_1RedefinitionError.xhtml">RedefinitionError</a> : <span class="keyword">public</span> <a class="code" href="structscram_1_1mef_1_1ValidityError.xhtml">ValidityError</a> {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keyword">using</span> ValidityError::ValidityError;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;};</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">/// This error indicates that arguments must be unique.</span></div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="structscram_1_1mef_1_1DuplicateArgumentError.xhtml">  109</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1mef_1_1DuplicateArgumentError.xhtml">DuplicateArgumentError</a> : <span class="keyword">public</span> <a class="code" href="structscram_1_1mef_1_1ValidityError.xhtml">ValidityError</a> {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keyword">using</span> ValidityError::ValidityError;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;};</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">/// The error for undefined elements in a model.</span></div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="structscram_1_1mef_1_1UndefinedElement.xhtml">  114</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1mef_1_1UndefinedElement.xhtml">UndefinedElement</a> : <span class="keyword">public</span> <a class="code" href="structscram_1_1mef_1_1ValidityError.xhtml">ValidityError</a> {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keyword">using</span> ValidityError::ValidityError;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;};</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">/// Signals unacceptable cycles in invalid structures.</span></div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="structscram_1_1mef_1_1CycleError.xhtml">  119</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1mef_1_1CycleError.xhtml">CycleError</a> : <span class="keyword">public</span> <a class="code" href="structscram_1_1mef_1_1ValidityError.xhtml">ValidityError</a> {</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="keyword">using</span> ValidityError::ValidityError;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;};</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">/// Invalid domain for values or arguments.</span></div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="structscram_1_1mef_1_1DomainError.xhtml">  124</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1mef_1_1DomainError.xhtml">DomainError</a> : <span class="keyword">public</span> <a class="code" href="structscram_1_1mef_1_1ValidityError.xhtml">ValidityError</a> {</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keyword">using</span> ValidityError::ValidityError;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;};</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}  <span class="comment">// namespace mef</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keyword">namespace </span>xml {</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">/// The base for all XML related errors.</span></div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="structscram_1_1xml_1_1Error.xhtml">  133</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1xml_1_1Error.xhtml">Error</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1Error.xhtml">scram::Error</a> {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">scram::Error::Error</a>;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;};</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">/// XML parsing errors.</span></div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="structscram_1_1xml_1_1ParseError.xhtml">  138</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1xml_1_1ParseError.xhtml">ParseError</a> : <span class="keyword">public</span> <a class="code" href="structscram_1_1xml_1_1Error.xhtml">Error</a> {</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error::Error</a>;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;};</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">/// XInclude resolution issues.</span></div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="structscram_1_1xml_1_1XIncludeError.xhtml">  143</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1xml_1_1XIncludeError.xhtml">XIncludeError</a> : <span class="keyword">public</span> <a class="code" href="structscram_1_1xml_1_1Error.xhtml">Error</a> {</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error::Error</a>;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;};</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">/// XML document validity errors.</span></div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="structscram_1_1xml_1_1ValidityError.xhtml">  148</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1xml_1_1ValidityError.xhtml">ValidityError</a> : <span class="keyword">public</span> <a class="code" href="structscram_1_1xml_1_1Error.xhtml">Error</a> {</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error::Error</a>;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;};</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">/// The XML attribute name.</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment"></span><span class="keyword">using</span> <a class="code" href="error_8h.xhtml#ab766600dc63390a9ad23e8818a2e509f">errinfo_attribute</a> =</div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="error_8h.xhtml#ab766600dc63390a9ad23e8818a2e509f">  154</a></span>&#160;    boost::error_info&lt;struct tag_xml_attribute, std::string&gt;;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">/// The XML element name.</span></div><div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="error_8h.xhtml#a7067a7f3834bc3c1d8fa25ba70d30011">  157</a></span>&#160;<span class="comment"></span><span class="keyword">using</span> <a class="code" href="error_8h.xhtml#a7067a7f3834bc3c1d8fa25ba70d30011">errinfo_element</a> = boost::error_info&lt;struct tag_xml_element, std::string&gt;;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;}  <span class="comment">// namespace xml</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;}  <span class="comment">// namespace scram</span></div><div class="ttc" id="structscram_1_1IOError_xhtml"><div class="ttname"><a href="structscram_1_1IOError.xhtml">scram::IOError</a></div><div class="ttdoc">For input/output related errors. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00066">error.h:66</a></div></div>
<div class="ttc" id="structscram_1_1SettingsError_xhtml"><div class="ttname"><a href="structscram_1_1SettingsError.xhtml">scram::SettingsError</a></div><div class="ttdoc">The error in analysis settings. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00089">error.h:89</a></div></div>
<div class="ttc" id="classscram_1_1Error_xhtml_abf8f4acdd63cdd56fd40714d9a132a3e"><div class="ttname"><a href="classscram_1_1Error.xhtml#abf8f4acdd63cdd56fd40714d9a132a3e">scram::Error::what</a></div><div class="ttdeci">const char * what() const noexceptfinal</div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00059">error.h:59</a></div></div>
<div class="ttc" id="classscram_1_1Error_xhtml"><div class="ttname"><a href="classscram_1_1Error.xhtml">scram::Error</a></div><div class="ttdoc">The Error class is the base class for common exceptions specific to the SCRAM code. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00047">error.h:47</a></div></div>
<div class="ttc" id="error_8h_xhtml_a7067a7f3834bc3c1d8fa25ba70d30011"><div class="ttname"><a href="error_8h.xhtml#a7067a7f3834bc3c1d8fa25ba70d30011">scram::xml::errinfo_element</a></div><div class="ttdeci">boost::error_info&lt; struct tag_xml_element, std::string &gt; errinfo_element</div><div class="ttdoc">The XML element name. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00157">error.h:157</a></div></div>
<div class="ttc" id="structscram_1_1mef_1_1RedefinitionError_xhtml"><div class="ttname"><a href="structscram_1_1mef_1_1RedefinitionError.xhtml">scram::mef::RedefinitionError</a></div><div class="ttdoc">For cases when events or practically anything is redefined. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00104">error.h:104</a></div></div>
<div class="ttc" id="structscram_1_1xml_1_1ParseError_xhtml"><div class="ttname"><a href="structscram_1_1xml_1_1ParseError.xhtml">scram::xml::ParseError</a></div><div class="ttdoc">XML parsing errors. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00138">error.h:138</a></div></div>
<div class="ttc" id="structscram_1_1xml_1_1XIncludeError_xhtml"><div class="ttname"><a href="structscram_1_1xml_1_1XIncludeError.xhtml">scram::xml::XIncludeError</a></div><div class="ttdoc">XInclude resolution issues. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00143">error.h:143</a></div></div>
<div class="ttc" id="structscram_1_1IllegalOperation_xhtml"><div class="ttname"><a href="structscram_1_1IllegalOperation.xhtml">scram::IllegalOperation</a></div><div class="ttdoc">This error can be used to indicate that call for a function or operation is not legal. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00084">error.h:84</a></div></div>
<div class="ttc" id="namespacescram_xhtml"><div class="ttname"><a href="namespacescram.xhtml">scram</a></div></div>
<div class="ttc" id="source__info_8h_xhtml"><div class="ttname"><a href="source__info_8h.xhtml">source_info.h</a></div><div class="ttdoc">Helper facilities to get source file information. </div></div>
<div class="ttc" id="structscram_1_1mef_1_1DomainError_xhtml"><div class="ttname"><a href="structscram_1_1mef_1_1DomainError.xhtml">scram::mef::DomainError</a></div><div class="ttdoc">Invalid domain for values or arguments. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00124">error.h:124</a></div></div>
<div class="ttc" id="structscram_1_1DLError_xhtml"><div class="ttname"><a href="structscram_1_1DLError.xhtml">scram::DLError</a></div><div class="ttdoc">Dynamic library errors. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00071">error.h:71</a></div></div>
<div class="ttc" id="classscram_1_1Error_xhtml_ae292929f21fd325c28c28b0ae6c4633b"><div class="ttname"><a href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">scram::Error::Error</a></div><div class="ttdeci">Error(std::string msg)</div><div class="ttdoc">Constructs a new error with a provided message. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00052">error.h:52</a></div></div>
<div class="ttc" id="structscram_1_1mef_1_1DuplicateArgumentError_xhtml"><div class="ttname"><a href="structscram_1_1mef_1_1DuplicateArgumentError.xhtml">scram::mef::DuplicateArgumentError</a></div><div class="ttdoc">This error indicates that arguments must be unique. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00109">error.h:109</a></div></div>
<div class="ttc" id="structscram_1_1LogicError_xhtml"><div class="ttname"><a href="structscram_1_1LogicError.xhtml">scram::LogicError</a></div><div class="ttdoc">Signals internal logic errors, for example, pre-condition failure or use of functionality in ways not...</div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00078">error.h:78</a></div></div>
<div class="ttc" id="structscram_1_1xml_1_1ValidityError_xhtml"><div class="ttname"><a href="structscram_1_1xml_1_1ValidityError.xhtml">scram::xml::ValidityError</a></div><div class="ttdoc">XML document validity errors. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00148">error.h:148</a></div></div>
<div class="ttc" id="error_8h_xhtml_ab766600dc63390a9ad23e8818a2e509f"><div class="ttname"><a href="error_8h.xhtml#ab766600dc63390a9ad23e8818a2e509f">scram::xml::errinfo_attribute</a></div><div class="ttdeci">boost::error_info&lt; struct tag_xml_attribute, std::string &gt; errinfo_attribute</div><div class="ttdoc">The XML attribute name. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00154">error.h:154</a></div></div>
<div class="ttc" id="structscram_1_1mef_1_1ValidityError_xhtml"><div class="ttname"><a href="structscram_1_1mef_1_1ValidityError.xhtml">scram::mef::ValidityError</a></div><div class="ttdoc">For validating input parameters or user arguments. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00099">error.h:99</a></div></div>
<div class="ttc" id="structscram_1_1mef_1_1CycleError_xhtml"><div class="ttname"><a href="structscram_1_1mef_1_1CycleError.xhtml">scram::mef::CycleError</a></div><div class="ttdoc">Signals unacceptable cycles in invalid structures. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00119">error.h:119</a></div></div>
<div class="ttc" id="error_8h_xhtml_a9e7c724d6d57b1b9fa496e66755e5e02"><div class="ttname"><a href="error_8h.xhtml#a9e7c724d6d57b1b9fa496e66755e5e02">scram::mef::errinfo_container</a></div><div class="ttdeci">boost::error_info&lt; struct tag_contianer, std::string &gt; errinfo_container</div><div class="ttdoc">The MEF container element as namespace. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00096">error.h:96</a></div></div>
<div class="ttc" id="structscram_1_1xml_1_1Error_xhtml"><div class="ttname"><a href="structscram_1_1xml_1_1Error.xhtml">scram::xml::Error</a></div><div class="ttdoc">The base for all XML related errors. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00133">error.h:133</a></div></div>
<div class="ttc" id="structscram_1_1mef_1_1UndefinedElement_xhtml"><div class="ttname"><a href="structscram_1_1mef_1_1UndefinedElement.xhtml">scram::mef::UndefinedElement</a></div><div class="ttdoc">The error for undefined elements in a model. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00114">error.h:114</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:36 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
