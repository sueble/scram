<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>random_deviate.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_eacaf28dc2715349d1b93fdb7927a3cb.xhtml">expression</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">random_deviate.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="random__deviate_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2014-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// A collection of deviate expressions with random distributions</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/// sampled at run-time.</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;random&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;boost/range/iterator_range.hpp&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="expression_8h.xhtml">src/expression.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram_1_1mef.xhtml">scram::mef</a> {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">/// Abstract base class for all deviate expressions.</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">/// These expressions provide quantification for uncertainty and sensitivity.</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">/// @note Only single RNG is embedded for convenience.</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">///       All the distributions share this RNG.</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">///       This is not suitable for parallelized simulations!!!</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">/// @todo Parametrize with RNG (requires mef::Expression interface change).</span></div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1RandomDeviate.xhtml">   42</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1mef_1_1RandomDeviate.xhtml">RandomDeviate</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a> {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; <span class="keyword">public</span>:</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a1700295154b8db507896804ad4307c14">Expression::Expression</a>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1RandomDeviate.xhtml#a967456997a0c65fd0bdfd69e33925235">   46</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="classscram_1_1mef_1_1RandomDeviate.xhtml#a967456997a0c65fd0bdfd69e33925235">IsDeviate</a>() noexcept<span class="keyword"> override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">  /// Sets the seed of the underlying random number generator.</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">  /// @param[in] seed  The seed for RNGs.</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">  /// @note This is static! Used by all the deriving deviates.</span></div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1RandomDeviate.xhtml#a078bf1c19e467ec90c578e0f388155d9">   53</a></span>&#160;<span class="comment"></span>  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1RandomDeviate.xhtml#a078bf1c19e467ec90c578e0f388155d9">seed</a>(<span class="keywordtype">unsigned</span> <a class="code" href="classscram_1_1mef_1_1RandomDeviate.xhtml#a078bf1c19e467ec90c578e0f388155d9">seed</a>) noexcept { rng_.seed(<a class="code" href="classscram_1_1mef_1_1RandomDeviate.xhtml#a078bf1c19e467ec90c578e0f388155d9">seed</a>); }</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; <span class="keyword">protected</span>:<span class="comment"></span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">  /// @returns RNG to be used by derived classes.</span></div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1RandomDeviate.xhtml#ab074fb1bde194f1bf36b1c6fc026a821">   57</a></span>&#160;<span class="comment"></span>  std::mt19937&amp; <a class="code" href="classscram_1_1mef_1_1RandomDeviate.xhtml#ab074fb1bde194f1bf36b1c6fc026a821">rng</a>() { <span class="keywordflow">return</span> rng_; }</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; <span class="keyword">private</span>:</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keyword">static</span> std::mt19937 rng_;  <span class="comment">///&lt; The random number generator.</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">/// Uniform distribution.</span></div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1UniformDeviate.xhtml">   64</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1mef_1_1UniformDeviate.xhtml">UniformDeviate</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1RandomDeviate.xhtml">RandomDeviate</a> {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; <span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">  /// Setup for uniform distribution.</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">  /// @param[in] min  Minimum value of the distribution.</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">  /// @param[in] max  Maximum value of the distribution.</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"></span>  <a class="code" href="classscram_1_1mef_1_1UniformDeviate.xhtml">UniformDeviate</a>(<a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* min, <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* max);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">  /// @throws ValidityError  The min value is more or equal to max value.</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Expression.xhtml#af3e09d926b52f6077aa85c26454c4e18">Validate</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1UniformDeviate.xhtml#add29fc186a4ba86a781b8cb5f964e92e">   75</a></span>&#160;  <span class="keywordtype">double</span> <a class="code" href="classscram_1_1mef_1_1UniformDeviate.xhtml#add29fc186a4ba86a781b8cb5f964e92e">value</a>() noexcept<span class="keyword"> override </span>{ <span class="keywordflow">return</span> (min_.value() + max_.value()) / 2; }</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1UniformDeviate.xhtml#affc965ade41ef6add3e765b16ad7bd8e">   76</a></span>&#160;  <a class="code" href="expression_8h.xhtml#afc9530f5ba8d4c2ccf0b40c7422a44c0">Interval</a> <a class="code" href="classscram_1_1mef_1_1UniformDeviate.xhtml#affc965ade41ef6add3e765b16ad7bd8e">interval</a>() noexcept<span class="keyword"> override </span>{</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">return</span> Interval::closed(min_.value(), max_.value());</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; <span class="keyword">private</span>:</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keywordtype">double</span> DoSample() noexcept <span class="keyword">override</span>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>&amp; min_;  <span class="comment">///&lt; Minimum value of the distribution.</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment"></span>  <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>&amp; max_;  <span class="comment">///&lt; Maximum value of the distribution.</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">/// Normal distribution.</span></div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1NormalDeviate.xhtml">   88</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1mef_1_1NormalDeviate.xhtml">NormalDeviate</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1RandomDeviate.xhtml">RandomDeviate</a> {</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; <span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">  /// Setup for normal distribution.</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">  /// @param[in] mean  The mean of the distribution.</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">  /// @param[in] sigma  The standard deviation of the distribution.</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"></span>  <a class="code" href="classscram_1_1mef_1_1NormalDeviate.xhtml">NormalDeviate</a>(<a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* mean, <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* sigma);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">  /// @throws DomainError  The sigma is negative or zero.</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Expression.xhtml#af3e09d926b52f6077aa85c26454c4e18">Validate</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1NormalDeviate.xhtml#addd2b437cf8fae963ec383f1767895a3">   99</a></span>&#160;  <span class="keywordtype">double</span> <a class="code" href="classscram_1_1mef_1_1NormalDeviate.xhtml#addd2b437cf8fae963ec383f1767895a3">value</a>() noexcept<span class="keyword"> override </span>{ <span class="keywordflow">return</span> mean_.value(); }<span class="comment"></span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">  /// @returns ~99.9% confidence interval.</span></div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1NormalDeviate.xhtml#a502421d76dd262810fd70aed68f742e0">  101</a></span>&#160;<span class="comment"></span>  <a class="code" href="expression_8h.xhtml#afc9530f5ba8d4c2ccf0b40c7422a44c0">Interval</a> <a class="code" href="classscram_1_1mef_1_1NormalDeviate.xhtml#a502421d76dd262810fd70aed68f742e0">interval</a>() noexcept<span class="keyword"> override </span>{</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordtype">double</span> mean = mean_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#af4c1a5cb29e8f45623a99742b7ba8bc5">value</a>();</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordtype">double</span> delta = 6 * sigma_.value();</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">return</span> Interval::closed(mean - delta, mean + delta);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  }</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; <span class="keyword">private</span>:</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordtype">double</span> DoSample() noexcept <span class="keyword">override</span>;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>&amp; mean_;  <span class="comment">///&lt; Mean value of normal distribution.</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment"></span>  <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>&amp; sigma_;  <span class="comment">///&lt; Standard deviation of normal distribution.</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">/// Log-normal distribution.</span></div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1LognormalDeviate.xhtml">  115</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1mef_1_1LognormalDeviate.xhtml">LognormalDeviate</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1RandomDeviate.xhtml">RandomDeviate</a> {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; <span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">  /// The log-normal deviate parametrization with</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">  /// its expected value and error factor of certain confidence level.</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">  /// @param[in] mean  The mean of the log-normal distribution</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">  ///                  not the mean of underlying normal distribution,</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">  ///                  which is parameter mu.</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">  ///                  mu is the location parameter,</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">  ///                  sigma is the scale factor.</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">  ///                  E(x) = exp(mu + sigma^2 / 2)</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">  /// @param[in] ef  The error factor of the log-normal distribution.</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">  ///                EF = exp(z_alpha * sigma)</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">  /// @param[in] level  The confidence level.</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment"></span>  <a class="code" href="classscram_1_1mef_1_1LognormalDeviate.xhtml">LognormalDeviate</a>(<a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* mean, <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* ef, <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* level);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">  /// The parametrization with underlying normal distribution parameters.</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">  /// @param[in] mu  The mean of the normal distribution.</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">  /// @param[in] sigma  The standard deviation of the normal distribution.</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment"></span>  <a class="code" href="classscram_1_1mef_1_1LognormalDeviate.xhtml">LognormalDeviate</a>(<a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* mu, <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* sigma);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1LognormalDeviate.xhtml#ac11d4cb2bd96e1e6ee8015877657888f">  137</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1LognormalDeviate.xhtml#ac11d4cb2bd96e1e6ee8015877657888f">Validate</a>()<span class="keyword"> const override </span>{ flavor_-&gt;Validate(); };</div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1LognormalDeviate.xhtml#a18f3499d5d98d1af462db56d07069997">  138</a></span>&#160;  <span class="keywordtype">double</span> <a class="code" href="classscram_1_1mef_1_1LognormalDeviate.xhtml#a18f3499d5d98d1af462db56d07069997">value</a>() noexcept<span class="keyword"> override </span>{ <span class="keywordflow">return</span> flavor_-&gt;mean(); }<span class="comment"></span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">  /// The high is 99.9 percentile estimate.</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment"></span>  <a class="code" href="expression_8h.xhtml#afc9530f5ba8d4c2ccf0b40c7422a44c0">Interval</a> <a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a179b21e75df522673e6d51b784d10e86">interval</a>() noexcept <span class="keyword">override</span>;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; <span class="keyword">private</span>:</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordtype">double</span> DoSample() noexcept <span class="keyword">override</span>;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">  /// Support for parametrization differences.</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment"></span>  <span class="keyword">struct </span>Flavor {</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keyword">virtual</span> ~Flavor() = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">    /// @returns Scale parameter (sigma) value.</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">double</span> scale() noexcept = 0;<span class="comment"></span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">    /// @returns Value of location parameter (mu) value.</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">double</span> location() noexcept = 0;<span class="comment"></span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">    /// @returns The mean value of the distribution.</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">double</span> mean() noexcept = 0;<span class="comment"></span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">    /// @copydoc Expression::Validate</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Expression.xhtml#af3e09d926b52f6077aa85c26454c4e18">Validate</a>() <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  };</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">  /// Computation with the log-normal mean and error factor.</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment"></span>  <span class="keyword">class </span>Logarithmic final : <span class="keyword">public</span> Flavor {</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;   <span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">    /// @copydoc LognormalDeviate::LognormalDeviate</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment"></span>    Logarithmic(<a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* mean, <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* ef, <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* level)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        : mean_(*mean), ef_(*ef), level_(*level) {}</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordtype">double</span> scale() noexcept <span class="keyword">override</span>;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordtype">double</span> location() noexcept <span class="keyword">override</span>;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordtype">double</span> mean() noexcept <span class="keyword">override</span> { <span class="keywordflow">return</span> mean_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#af4c1a5cb29e8f45623a99742b7ba8bc5">value</a>(); }<span class="comment"></span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">    /// @throws DomainError  (mean &lt;= 0) or (ef &lt;= 0) or invalid level.</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Expression.xhtml#af3e09d926b52f6077aa85c26454c4e18">Validate</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;   <span class="keyword">private</span>:</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>&amp; mean_;  <span class="comment">///&lt; Mean value of the log-normal distribution.</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment"></span>    <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>&amp; ef_;  <span class="comment">///&lt; Error factor of the log-normal distribution.</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment"></span>    <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>&amp; level_;  <span class="comment">///&lt; Confidence level of the log-normal distribution.</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment"></span>  };</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">  /// Computation with normal mean and standard distribution.</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment"></span>  <span class="keyword">class </span>Normal final : <span class="keyword">public</span> Flavor {</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;   <span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">    /// @param[in] mu  The mean of the normal distribution.</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">    /// @param[in] sigma  The standard deviation of the normal distribution.</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment"></span>    Normal(<a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* mu, <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* sigma) : mu_(*mu), sigma_(*sigma) {}</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordtype">double</span> scale() noexcept <span class="keyword">override</span> { <span class="keywordflow">return</span> sigma_.value(); }</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordtype">double</span> location() noexcept <span class="keyword">override</span> { <span class="keywordflow">return</span> mu_.value(); }</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordtype">double</span> mean() noexcept <span class="keyword">override</span>;<span class="comment"></span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">    /// @throws DomainError  (sigma &lt;= 0).</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Expression.xhtml#af3e09d926b52f6077aa85c26454c4e18">Validate</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;   <span class="keyword">private</span>:</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>&amp; mu_;  <span class="comment">///&lt; The mean value of the normal distribution.</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment"></span>    <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>&amp; sigma_;  <span class="comment">///&lt; The standard deviation of the normal distribution.</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment"></span>  };</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  std::unique_ptr&lt;Flavor&gt; flavor_;  <span class="comment">///&lt; The parametrization flavor.</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">/// Gamma distribution.</span></div><div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1GammaDeviate.xhtml">  197</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1mef_1_1GammaDeviate.xhtml">GammaDeviate</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1RandomDeviate.xhtml">RandomDeviate</a> {</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; <span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">  /// Setup for Gamma distribution.</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">  /// @param[in] k  Shape parameter of Gamma distribution.</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">  /// @param[in] theta  Scale parameter of Gamma distribution.</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment"></span>  <a class="code" href="classscram_1_1mef_1_1GammaDeviate.xhtml">GammaDeviate</a>(<a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* k, <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* theta);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">  /// @throws DomainError  (k &lt;= 0) or (theta &lt;= 0)</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Expression.xhtml#af3e09d926b52f6077aa85c26454c4e18">Validate</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1GammaDeviate.xhtml#aac9dd9e446203c28033a32385a68570c">  208</a></span>&#160;  <span class="keywordtype">double</span> <a class="code" href="classscram_1_1mef_1_1GammaDeviate.xhtml#aac9dd9e446203c28033a32385a68570c">value</a>() noexcept<span class="keyword"> override </span>{ <span class="keywordflow">return</span> k_.value() * theta_.value(); }<span class="comment"></span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">  /// The high is 99 percentile.</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment"></span>  <a class="code" href="expression_8h.xhtml#afc9530f5ba8d4c2ccf0b40c7422a44c0">Interval</a> <a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a179b21e75df522673e6d51b784d10e86">interval</a>() noexcept <span class="keyword">override</span>;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; <span class="keyword">private</span>:</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  <span class="keywordtype">double</span> DoSample() noexcept <span class="keyword">override</span>;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>&amp; k_;  <span class="comment">///&lt; The shape parameter of the gamma distribution.</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment"></span>  <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>&amp; theta_;  <span class="comment">///&lt; The scale factor of the gamma distribution.</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">/// Beta distribution.</span></div><div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1BetaDeviate.xhtml">  220</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1mef_1_1BetaDeviate.xhtml">BetaDeviate</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1RandomDeviate.xhtml">RandomDeviate</a> {</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160; <span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">  /// Setup for Beta distribution.</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">  /// @param[in] alpha  Alpha shape parameter of Gamma distribution.</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">  /// @param[in] beta  Beta shape parameter of Gamma distribution.</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment"></span>  <a class="code" href="classscram_1_1mef_1_1BetaDeviate.xhtml">BetaDeviate</a>(<a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* alpha, <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>* beta);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">  /// @throws DomainError  (alpha &lt;= 0) or (beta &lt;= 0)</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Expression.xhtml#af3e09d926b52f6077aa85c26454c4e18">Validate</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1BetaDeviate.xhtml#a23cf22ef291bb47601ddefd7640fe93a">  231</a></span>&#160;  <span class="keywordtype">double</span> <a class="code" href="classscram_1_1mef_1_1BetaDeviate.xhtml#a23cf22ef291bb47601ddefd7640fe93a">value</a>() noexcept<span class="keyword"> override </span>{</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keywordtype">double</span> alpha_mean = alpha_.value();</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordflow">return</span> alpha_mean / (alpha_mean + beta_.value());</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  }</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">  /// @returns 99 percentile.</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment"></span>  <a class="code" href="expression_8h.xhtml#afc9530f5ba8d4c2ccf0b40c7422a44c0">Interval</a> <a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a179b21e75df522673e6d51b784d10e86">interval</a>() noexcept <span class="keyword">override</span>;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160; <span class="keyword">private</span>:</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  <span class="keywordtype">double</span> DoSample() noexcept <span class="keyword">override</span>;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>&amp; alpha_;  <span class="comment">///&lt; The alpha shape parameter.</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment"></span>  <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>&amp; beta_;  <span class="comment">///&lt; The beta shape parameter.</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">/// Histogram distribution.</span></div><div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Histogram.xhtml">  247</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1mef_1_1Histogram.xhtml">Histogram</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1RandomDeviate.xhtml">RandomDeviate</a> {</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; <span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">  /// Histogram distribution setup.</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">  /// @param[in] boundaries  The bounds of intervals.</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">  /// @param[in] weights  The positive weights of intervals</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">  ///                     restricted by the upper boundaries.</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">  ///                     Therefore, the number of weights must be</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">  ///                     equal to the number of intervals.</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">  /// @throws ValidityError  The boundaries container size is not equal to</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">  ///                        weights container size + 1.</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment"></span>  <a class="code" href="classscram_1_1mef_1_1Histogram.xhtml">Histogram</a>(std::vector&lt;Expression*&gt; boundaries,</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            std::vector&lt;Expression*&gt; weights);</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">  /// @throws ValidityError  The boundaries are not strictly increasing,</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">  ///                        or weights are negative.</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Expression.xhtml#af3e09d926b52f6077aa85c26454c4e18">Validate</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  <span class="keywordtype">double</span> <a class="code" href="classscram_1_1mef_1_1Expression.xhtml#af4c1a5cb29e8f45623a99742b7ba8bc5">value</a>() noexcept <span class="keyword">override</span>;</div><div class="line"><a name="l00267"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Histogram.xhtml#a4aab126e9ab267847d9dbd78cedf0682">  267</a></span>&#160;  <a class="code" href="expression_8h.xhtml#afc9530f5ba8d4c2ccf0b40c7422a44c0">Interval</a> <a class="code" href="classscram_1_1mef_1_1Histogram.xhtml#a4aab126e9ab267847d9dbd78cedf0682">interval</a>() noexcept<span class="keyword"> override </span>{</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordflow">return</span> Interval::closed((*boundaries_.begin())-&gt;<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#af4c1a5cb29e8f45623a99742b7ba8bc5">value</a>(),</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                            (*std::prev(boundaries_.end()))-&gt;value());</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  }</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; <span class="keyword">private</span>:<span class="comment"></span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">  /// Access to args.</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment"></span>  <span class="keyword">using</span> IteratorRange =</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;      boost::iterator_range&lt;std::vector&lt;Expression*&gt;::const_iterator&gt;;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  <span class="keywordtype">double</span> DoSample() noexcept <span class="keyword">override</span>;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  IteratorRange boundaries_;  <span class="comment">///&lt; Boundaries of the intervals.</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment"></span>  IteratorRange weights_;  <span class="comment">///&lt; Weights of the intervals.</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;}  <span class="comment">// namespace scram::mef</span></div><div class="ttc" id="expression_8h_xhtml_afc9530f5ba8d4c2ccf0b40c7422a44c0"><div class="ttname"><a href="expression_8h.xhtml#afc9530f5ba8d4c2ccf0b40c7422a44c0">scram::mef::Interval</a></div><div class="ttdeci">boost::icl::continuous_interval&lt; double &gt; Interval</div><div class="ttdoc">Validation domain interval for expression values. </div><div class="ttdef"><b>Definition:</b> <a href="expression_8h_source.xhtml#l00035">expression.h:35</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Expression_xhtml_af3e09d926b52f6077aa85c26454c4e18"><div class="ttname"><a href="classscram_1_1mef_1_1Expression.xhtml#af3e09d926b52f6077aa85c26454c4e18">scram::mef::Expression::Validate</a></div><div class="ttdeci">virtual void Validate() const </div><div class="ttdoc">Validates the expression. </div><div class="ttdef"><b>Definition:</b> <a href="expression_8h_source.xhtml#l00085">expression.h:85</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1NormalDeviate_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1NormalDeviate.xhtml">scram::mef::NormalDeviate</a></div><div class="ttdoc">Normal distribution. </div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00088">random_deviate.h:88</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1GammaDeviate_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1GammaDeviate.xhtml">scram::mef::GammaDeviate</a></div><div class="ttdoc">Gamma distribution. </div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00197">random_deviate.h:197</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1BetaDeviate_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1BetaDeviate.xhtml">scram::mef::BetaDeviate</a></div><div class="ttdoc">Beta distribution. </div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00220">random_deviate.h:220</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1UniformDeviate_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1UniformDeviate.xhtml">scram::mef::UniformDeviate</a></div><div class="ttdoc">Uniform distribution. </div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00064">random_deviate.h:64</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1RandomDeviate_xhtml_ab074fb1bde194f1bf36b1c6fc026a821"><div class="ttname"><a href="classscram_1_1mef_1_1RandomDeviate.xhtml#ab074fb1bde194f1bf36b1c6fc026a821">scram::mef::RandomDeviate::rng</a></div><div class="ttdeci">std::mt19937 &amp; rng()</div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00057">random_deviate.h:57</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Histogram_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Histogram.xhtml">scram::mef::Histogram</a></div><div class="ttdoc">Histogram distribution. </div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00247">random_deviate.h:247</a></div></div>
<div class="ttc" id="namespacescram_1_1mef_xhtml"><div class="ttname"><a href="namespacescram_1_1mef.xhtml">scram::mef</a></div><div class="ttdef"><b>Definition:</b> <a href="alignment_8cc_source.xhtml#l00026">alignment.cc:26</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1NormalDeviate_xhtml_addd2b437cf8fae963ec383f1767895a3"><div class="ttname"><a href="classscram_1_1mef_1_1NormalDeviate.xhtml#addd2b437cf8fae963ec383f1767895a3">scram::mef::NormalDeviate::value</a></div><div class="ttdeci">double value() noexceptoverride</div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00099">random_deviate.h:99</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1RandomDeviate_xhtml_a078bf1c19e467ec90c578e0f388155d9"><div class="ttname"><a href="classscram_1_1mef_1_1RandomDeviate.xhtml#a078bf1c19e467ec90c578e0f388155d9">scram::mef::RandomDeviate::seed</a></div><div class="ttdeci">static void seed(unsigned seed) noexcept</div><div class="ttdoc">Sets the seed of the underlying random number generator. </div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00053">random_deviate.h:53</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1BetaDeviate_xhtml_a23cf22ef291bb47601ddefd7640fe93a"><div class="ttname"><a href="classscram_1_1mef_1_1BetaDeviate.xhtml#a23cf22ef291bb47601ddefd7640fe93a">scram::mef::BetaDeviate::value</a></div><div class="ttdeci">double value() noexceptoverride</div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00231">random_deviate.h:231</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Expression_xhtml_a179b21e75df522673e6d51b784d10e86"><div class="ttname"><a href="classscram_1_1mef_1_1Expression.xhtml#a179b21e75df522673e6d51b784d10e86">scram::mef::Expression::interval</a></div><div class="ttdeci">virtual Interval interval() noexcept</div><div class="ttdef"><b>Definition:</b> <a href="expression_8h_source.xhtml#l00091">expression.h:91</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1RandomDeviate_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1RandomDeviate.xhtml">scram::mef::RandomDeviate</a></div><div class="ttdoc">Abstract base class for all deviate expressions. </div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00042">random_deviate.h:42</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1LognormalDeviate_xhtml_ac11d4cb2bd96e1e6ee8015877657888f"><div class="ttname"><a href="classscram_1_1mef_1_1LognormalDeviate.xhtml#ac11d4cb2bd96e1e6ee8015877657888f">scram::mef::LognormalDeviate::Validate</a></div><div class="ttdeci">void Validate() const override</div><div class="ttdoc">Validates the expression. </div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00137">random_deviate.h:137</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1UniformDeviate_xhtml_add29fc186a4ba86a781b8cb5f964e92e"><div class="ttname"><a href="classscram_1_1mef_1_1UniformDeviate.xhtml#add29fc186a4ba86a781b8cb5f964e92e">scram::mef::UniformDeviate::value</a></div><div class="ttdeci">double value() noexceptoverride</div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00075">random_deviate.h:75</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1LognormalDeviate_xhtml_a18f3499d5d98d1af462db56d07069997"><div class="ttname"><a href="classscram_1_1mef_1_1LognormalDeviate.xhtml#a18f3499d5d98d1af462db56d07069997">scram::mef::LognormalDeviate::value</a></div><div class="ttdeci">double value() noexceptoverride</div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00138">random_deviate.h:138</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Expression_xhtml_a1700295154b8db507896804ad4307c14"><div class="ttname"><a href="classscram_1_1mef_1_1Expression.xhtml#a1700295154b8db507896804ad4307c14">scram::mef::Expression::Expression</a></div><div class="ttdeci">Expression(std::vector&lt; Expression * &gt; args={})</div><div class="ttdoc">Constructor for use by derived classes to register their arguments. </div><div class="ttdef"><b>Definition:</b> <a href="expression_8cc_source.xhtml#l00030">expression.cc:30</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1NormalDeviate_xhtml_a502421d76dd262810fd70aed68f742e0"><div class="ttname"><a href="classscram_1_1mef_1_1NormalDeviate.xhtml#a502421d76dd262810fd70aed68f742e0">scram::mef::NormalDeviate::interval</a></div><div class="ttdeci">Interval interval() noexceptoverride</div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00101">random_deviate.h:101</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1LognormalDeviate_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1LognormalDeviate.xhtml">scram::mef::LognormalDeviate</a></div><div class="ttdoc">Log-normal distribution. </div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00115">random_deviate.h:115</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1GammaDeviate_xhtml_aac9dd9e446203c28033a32385a68570c"><div class="ttname"><a href="classscram_1_1mef_1_1GammaDeviate.xhtml#aac9dd9e446203c28033a32385a68570c">scram::mef::GammaDeviate::value</a></div><div class="ttdeci">double value() noexceptoverride</div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00208">random_deviate.h:208</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Expression_xhtml_af4c1a5cb29e8f45623a99742b7ba8bc5"><div class="ttname"><a href="classscram_1_1mef_1_1Expression.xhtml#af4c1a5cb29e8f45623a99742b7ba8bc5">scram::mef::Expression::value</a></div><div class="ttdeci">virtual double value() noexcept=0</div></div>
<div class="ttc" id="expression_8h_xhtml"><div class="ttname"><a href="expression_8h.xhtml">expression.h</a></div><div class="ttdoc">Provides the base class for all expressions and units for expression values. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1Expression_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Expression.xhtml">scram::mef::Expression</a></div><div class="ttdoc">Abstract base class for all sorts of expressions to describe events. </div><div class="ttdef"><b>Definition:</b> <a href="expression_8h_source.xhtml#l00067">expression.h:67</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1UniformDeviate_xhtml_affc965ade41ef6add3e765b16ad7bd8e"><div class="ttname"><a href="classscram_1_1mef_1_1UniformDeviate.xhtml#affc965ade41ef6add3e765b16ad7bd8e">scram::mef::UniformDeviate::interval</a></div><div class="ttdeci">Interval interval() noexceptoverride</div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00076">random_deviate.h:76</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Histogram_xhtml_a4aab126e9ab267847d9dbd78cedf0682"><div class="ttname"><a href="classscram_1_1mef_1_1Histogram.xhtml#a4aab126e9ab267847d9dbd78cedf0682">scram::mef::Histogram::interval</a></div><div class="ttdeci">Interval interval() noexceptoverride</div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00267">random_deviate.h:267</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1RandomDeviate_xhtml_a967456997a0c65fd0bdfd69e33925235"><div class="ttname"><a href="classscram_1_1mef_1_1RandomDeviate.xhtml#a967456997a0c65fd0bdfd69e33925235">scram::mef::RandomDeviate::IsDeviate</a></div><div class="ttdeci">bool IsDeviate() noexceptoverride</div><div class="ttdoc">Determines if the value of the expression contains deviate expressions. </div><div class="ttdef"><b>Definition:</b> <a href="random__deviate_8h_source.xhtml#l00046">random_deviate.h:46</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:37 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
