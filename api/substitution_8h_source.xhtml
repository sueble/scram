<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>substitution.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">substitution.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="substitution_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2017-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// The MEF Substitution constructs.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;optional&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;variant&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="element_8h.xhtml">element.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="event_8h.xhtml">event.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram_1_1mef.xhtml">scram::mef</a> {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">/// The general representation for</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">/// Delete Terms, Recovery Rules, and Exchange Events.</span></div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Substitution.xhtml">   35</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1mef_1_1Substitution.xhtml">Substitution</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1Element.xhtml">Element</a> {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; <span class="keyword">public</span>:</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Substitution.xhtml#a8f04e3dbb62a6527872711ab80f97a45">   37</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1mef_1_1Substitution.xhtml#a8f04e3dbb62a6527872711ab80f97a45">Target</a> = std::variant&lt;BasicEvent*, bool&gt;;  <span class="comment">///&lt; The target type.</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">  /// The &quot;traditional&quot; substitution types.</span></div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Substitution.xhtml#a8150cf7c874accfef8e1eb8d938e7df1">   40</a></span>&#160;<span class="comment"></span>  <span class="keyword">enum</span> <a class="code" href="classscram_1_1mef_1_1Substitution.xhtml#a8150cf7c874accfef8e1eb8d938e7df1">Type</a> { kDeleteTerms, kRecoveryRule, kExchangeEvent };</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1mef_1_1Element.xhtml#a006e56dfae6a5a3bb91f1a4644ed59fa">Element::Element</a>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">  /// @returns The formula hypothesis of the substitution.</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">  /// @pre The required hypothesis formula has been set.</span></div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Substitution.xhtml#a4911986f8be0a6de619955d59cbd1537">   47</a></span>&#160;<span class="comment"></span>  <span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1Formula.xhtml">Formula</a>&amp; <a class="code" href="classscram_1_1mef_1_1Substitution.xhtml#a4911986f8be0a6de619955d59cbd1537">hypothesis</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    assert(hypothesis_ &amp;&amp; <span class="stringliteral">&quot;Substitution hypothesis is not set.&quot;</span>);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">return</span> *hypothesis_;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  }</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">  /// Sets the substitution hypothesis formula.</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">  /// @param[in] formula  Simple Boolean formula built over basic events only.</span></div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Substitution.xhtml#a9cb9134d045f422518b89330251b5759">   55</a></span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Substitution.xhtml#a9cb9134d045f422518b89330251b5759">hypothesis</a>(<a class="code" href="event_8h.xhtml#ac2fb708d25c3bde3eadbcf12d0bfee02">FormulaPtr</a> formula) {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    assert(formula &amp;&amp; <span class="stringliteral">&quot;Cannot unset the hypothesis of substitution.&quot;</span>);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    hypothesis_ = std::move(formula);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  }</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">  /// @returns The target of the substitution.</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">  /// @pre The target has been set.</span></div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Substitution.xhtml#a3326b9bbe12e4506d1b9778b2c7e5b83">   63</a></span>&#160;<span class="comment"></span>  <span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1Substitution.xhtml#a8f04e3dbb62a6527872711ab80f97a45">Target</a>&amp; <a class="code" href="classscram_1_1mef_1_1Substitution.xhtml#a3326b9bbe12e4506d1b9778b2c7e5b83">target</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> target_; }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">  /// Sets the target of the substitution.</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">  /// @param[in] target_event  Basic event or Boolean constant.</span></div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Substitution.xhtml#a9b584e16f398a389c050b5ee5cf890dd">   68</a></span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Substitution.xhtml#a9b584e16f398a389c050b5ee5cf890dd">target</a>(<a class="code" href="classscram_1_1mef_1_1Substitution.xhtml#a8f04e3dbb62a6527872711ab80f97a45">Target</a> target_event) { target_ = std::move(target_event); }</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">  /// @returns The source events of the substitution.</span></div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Substitution.xhtml#a40797175e64c8399cb3bca9fa104ccd5">   71</a></span>&#160;<span class="comment"></span>  <span class="keyword">const</span> std::vector&lt;BasicEvent*&gt;&amp; <a class="code" href="classscram_1_1mef_1_1Substitution.xhtml#a40797175e64c8399cb3bca9fa104ccd5">source</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> source_; }</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">  /// @returns true if the substitution is declarative.</span></div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Substitution.xhtml#ad29f35247718d44ff8d6f9bd9bd41d9f">   74</a></span>&#160;<span class="comment"></span>  <span class="keywordtype">bool</span> <a class="code" href="classscram_1_1mef_1_1Substitution.xhtml#ad29f35247718d44ff8d6f9bd9bd41d9f">declarative</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> source_.empty(); }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">  /// Adds a source event to the substitution container.</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">  /// @param[in] source_event  The event to be replaced by the target event.</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">  /// @throws DuplicateArgumentError  The source event is duplicate.</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Substitution.xhtml#a0a6da28d1514d7543d80e554e144df6f">Add</a>(<a class="code" href="classscram_1_1mef_1_1BasicEvent.xhtml">BasicEvent</a>* source_event);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">  /// Checks if the substitution is setup correctly.</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">  /// @pre The substitution has its hypothesis and target.</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">  /// @throws ValidityError  Problems with the substitution setup.</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">  /// @note Non-declarative substitutions need to be validated further</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">  ///       for idempotency across substitutions before analysis.</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Substitution.xhtml#ab1859efddac529e0827537fae2f16cbb">Validate</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">  /// @returns The equivalent &quot;traditional&quot; substitution type if any.</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">  /// @pre The hypothesis, target, and source are all defined and valid.</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"></span>  std::optional&lt;Type&gt; <a class="code" href="classscram_1_1mef_1_1Substitution.xhtml#a01bb7b2682e333bb6cd4b730447162c2">type</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; <span class="keyword">private</span>:</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <a class="code" href="event_8h.xhtml#ac2fb708d25c3bde3eadbcf12d0bfee02">FormulaPtr</a> hypothesis_;  <span class="comment">///&lt; The formula to be satisfied.</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment"></span>  std::vector&lt;BasicEvent*&gt; source_;  <span class="comment">///&lt; The source events to be replaced.</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment"></span>  <a class="code" href="classscram_1_1mef_1_1Substitution.xhtml#a8f04e3dbb62a6527872711ab80f97a45">Target</a> target_;  <span class="comment">///&lt; The target event to replace the source events.</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="substitution_8h.xhtml#a96c7da3ca9d39dfdeeb908c4a8e0a3bf">  104</a></span>&#160;<span class="keyword">using</span> <a class="code" href="substitution_8h.xhtml#a96c7da3ca9d39dfdeeb908c4a8e0a3bf">SubstitutionPtr</a> = std::unique_ptr&lt;Substitution&gt;;  <span class="comment">///&lt; Unique per model.</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">/// String representations of the &quot;traditional&quot; substitution types in the MEF.</span></div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="substitution_8h.xhtml#a30e85033e5d98e26e92d0aa9eae22e16">  107</a></span>&#160;<span class="comment"></span><span class="keyword">const</span> <span class="keywordtype">char</span>* <span class="keyword">const</span> <a class="code" href="substitution_8h.xhtml#a30e85033e5d98e26e92d0aa9eae22e16">kSubstitutionTypeToString</a>[] = {</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="stringliteral">&quot;delete-terms&quot;</span>, <span class="stringliteral">&quot;recovery-rule&quot;</span>, <span class="stringliteral">&quot;exchange-event&quot;</span>};</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}  <span class="comment">// namespace scram::mef</span></div><div class="ttc" id="classscram_1_1mef_1_1Formula_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Formula.xhtml">scram::mef::Formula</a></div><div class="ttdoc">Boolean formula with operators and arguments. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00227">event.h:227</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Substitution_xhtml_ab1859efddac529e0827537fae2f16cbb"><div class="ttname"><a href="classscram_1_1mef_1_1Substitution.xhtml#ab1859efddac529e0827537fae2f16cbb">scram::mef::Substitution::Validate</a></div><div class="ttdeci">void Validate() const </div><div class="ttdoc">Checks if the substitution is setup correctly. </div><div class="ttdef"><b>Definition:</b> <a href="substitution_8cc_source.xhtml#l00038">substitution.cc:38</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml_a006e56dfae6a5a3bb91f1a4644ed59fa"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml#a006e56dfae6a5a3bb91f1a4644ed59fa">scram::mef::Element::Element</a></div><div class="ttdeci">Element(std::string name)</div><div class="ttdoc">Constructs an element with an original name. </div><div class="ttdef"><b>Definition:</b> <a href="element_8cc_source.xhtml#l00030">element.cc:30</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Substitution_xhtml_a9cb9134d045f422518b89330251b5759"><div class="ttname"><a href="classscram_1_1mef_1_1Substitution.xhtml#a9cb9134d045f422518b89330251b5759">scram::mef::Substitution::hypothesis</a></div><div class="ttdeci">void hypothesis(FormulaPtr formula)</div><div class="ttdoc">Sets the substitution hypothesis formula. </div><div class="ttdef"><b>Definition:</b> <a href="substitution_8h_source.xhtml#l00055">substitution.h:55</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1BasicEvent_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1BasicEvent.xhtml">scram::mef::BasicEvent</a></div><div class="ttdoc">Representation of a basic event in a fault tree. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00075">event.h:75</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Substitution_xhtml_a40797175e64c8399cb3bca9fa104ccd5"><div class="ttname"><a href="classscram_1_1mef_1_1Substitution.xhtml#a40797175e64c8399cb3bca9fa104ccd5">scram::mef::Substitution::source</a></div><div class="ttdeci">const std::vector&lt; BasicEvent * &gt; &amp; source() const </div><div class="ttdef"><b>Definition:</b> <a href="substitution_8h_source.xhtml#l00071">substitution.h:71</a></div></div>
<div class="ttc" id="element_8h_xhtml"><div class="ttname"><a href="element_8h.xhtml">element.h</a></div><div class="ttdoc">Helper classes, structs, and properties common to all other classes. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1Substitution_xhtml_a8f04e3dbb62a6527872711ab80f97a45"><div class="ttname"><a href="classscram_1_1mef_1_1Substitution.xhtml#a8f04e3dbb62a6527872711ab80f97a45">scram::mef::Substitution::Target</a></div><div class="ttdeci">std::variant&lt; BasicEvent *, bool &gt; Target</div><div class="ttdoc">The target type. </div><div class="ttdef"><b>Definition:</b> <a href="substitution_8h_source.xhtml#l00037">substitution.h:37</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Substitution_xhtml_a9b584e16f398a389c050b5ee5cf890dd"><div class="ttname"><a href="classscram_1_1mef_1_1Substitution.xhtml#a9b584e16f398a389c050b5ee5cf890dd">scram::mef::Substitution::target</a></div><div class="ttdeci">void target(Target target_event)</div><div class="ttdoc">Sets the target of the substitution. </div><div class="ttdef"><b>Definition:</b> <a href="substitution_8h_source.xhtml#l00068">substitution.h:68</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Substitution_xhtml_a4911986f8be0a6de619955d59cbd1537"><div class="ttname"><a href="classscram_1_1mef_1_1Substitution.xhtml#a4911986f8be0a6de619955d59cbd1537">scram::mef::Substitution::hypothesis</a></div><div class="ttdeci">const Formula &amp; hypothesis() const </div><div class="ttdef"><b>Definition:</b> <a href="substitution_8h_source.xhtml#l00047">substitution.h:47</a></div></div>
<div class="ttc" id="namespacescram_1_1mef_xhtml"><div class="ttname"><a href="namespacescram_1_1mef.xhtml">scram::mef</a></div><div class="ttdef"><b>Definition:</b> <a href="alignment_8cc_source.xhtml#l00026">alignment.cc:26</a></div></div>
<div class="ttc" id="event_8h_xhtml"><div class="ttname"><a href="event_8h.xhtml">event.h</a></div><div class="ttdoc">Contains event classes for fault trees. </div></div>
<div class="ttc" id="substitution_8h_xhtml_a30e85033e5d98e26e92d0aa9eae22e16"><div class="ttname"><a href="substitution_8h.xhtml#a30e85033e5d98e26e92d0aa9eae22e16">scram::mef::kSubstitutionTypeToString</a></div><div class="ttdeci">const char *const kSubstitutionTypeToString[]</div><div class="ttdoc">String representations of the &quot;traditional&quot; substitution types in the MEF. </div><div class="ttdef"><b>Definition:</b> <a href="substitution_8h_source.xhtml#l00107">substitution.h:107</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Substitution_xhtml_a3326b9bbe12e4506d1b9778b2c7e5b83"><div class="ttname"><a href="classscram_1_1mef_1_1Substitution.xhtml#a3326b9bbe12e4506d1b9778b2c7e5b83">scram::mef::Substitution::target</a></div><div class="ttdeci">const Target &amp; target() const </div><div class="ttdef"><b>Definition:</b> <a href="substitution_8h_source.xhtml#l00063">substitution.h:63</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml">scram::mef::Element</a></div><div class="ttdoc">Mixin class that represents any element of analysis that can have extra descriptions, such as attributes and a label. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00047">element.h:47</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Substitution_xhtml_a8150cf7c874accfef8e1eb8d938e7df1"><div class="ttname"><a href="classscram_1_1mef_1_1Substitution.xhtml#a8150cf7c874accfef8e1eb8d938e7df1">scram::mef::Substitution::Type</a></div><div class="ttdeci">Type</div><div class="ttdoc">The &quot;traditional&quot; substitution types. </div><div class="ttdef"><b>Definition:</b> <a href="substitution_8h_source.xhtml#l00040">substitution.h:40</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Substitution_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Substitution.xhtml">scram::mef::Substitution</a></div><div class="ttdoc">The general representation for Delete Terms, Recovery Rules, and Exchange Events. ...</div><div class="ttdef"><b>Definition:</b> <a href="substitution_8h_source.xhtml#l00035">substitution.h:35</a></div></div>
<div class="ttc" id="substitution_8h_xhtml_a96c7da3ca9d39dfdeeb908c4a8e0a3bf"><div class="ttname"><a href="substitution_8h.xhtml#a96c7da3ca9d39dfdeeb908c4a8e0a3bf">scram::mef::SubstitutionPtr</a></div><div class="ttdeci">std::unique_ptr&lt; Substitution &gt; SubstitutionPtr</div><div class="ttdoc">Unique per model. </div><div class="ttdef"><b>Definition:</b> <a href="substitution_8h_source.xhtml#l00104">substitution.h:104</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Substitution_xhtml_ad29f35247718d44ff8d6f9bd9bd41d9f"><div class="ttname"><a href="classscram_1_1mef_1_1Substitution.xhtml#ad29f35247718d44ff8d6f9bd9bd41d9f">scram::mef::Substitution::declarative</a></div><div class="ttdeci">bool declarative() const </div><div class="ttdef"><b>Definition:</b> <a href="substitution_8h_source.xhtml#l00074">substitution.h:74</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Substitution_xhtml_a0a6da28d1514d7543d80e554e144df6f"><div class="ttname"><a href="classscram_1_1mef_1_1Substitution.xhtml#a0a6da28d1514d7543d80e554e144df6f">scram::mef::Substitution::Add</a></div><div class="ttdeci">void Add(BasicEvent *source_event)</div><div class="ttdoc">Adds a source event to the substitution container. </div><div class="ttdef"><b>Definition:</b> <a href="substitution_8cc_source.xhtml#l00028">substitution.cc:28</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Substitution_xhtml_a01bb7b2682e333bb6cd4b730447162c2"><div class="ttname"><a href="classscram_1_1mef_1_1Substitution.xhtml#a01bb7b2682e333bb6cd4b730447162c2">scram::mef::Substitution::type</a></div><div class="ttdeci">std::optional&lt; Type &gt; type() const </div><div class="ttdef"><b>Definition:</b> <a href="substitution_8cc_source.xhtml#l00080">substitution.cc:80</a></div></div>
<div class="ttc" id="event_8h_xhtml_ac2fb708d25c3bde3eadbcf12d0bfee02"><div class="ttname"><a href="event_8h.xhtml#ac2fb708d25c3bde3eadbcf12d0bfee02">scram::mef::FormulaPtr</a></div><div class="ttdeci">std::unique_ptr&lt; Formula &gt; FormulaPtr</div><div class="ttdoc">Non-shared gate formulas. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00158">event.h:158</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:37 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
