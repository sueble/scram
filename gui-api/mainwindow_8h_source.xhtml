<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>mainwindow.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_11bc0974ce736ce9a6fadebbeb7a8314.xhtml">gui</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">mainwindow.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="mainwindow_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2015-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// The main application window.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;array&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;functional&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;QAbstractItemView&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;QAction&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;QComboBox&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;QDir&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;QLineEdit&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;QMainWindow&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;QSettings&gt;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;QTableView&gt;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;QTimer&gt;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &lt;QUndoStack&gt;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &quot;src/model.h&quot;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &quot;src/risk_analysis.h&quot;</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &quot;src/settings.h&quot;</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="model_8h.xhtml">model.h</a>&quot;</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="zoomableview_8h.xhtml">zoomableview.h</a>&quot;</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceUi.xhtml">Ui</a> {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">class </span>MainWindow;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram_1_1gui.xhtml">scram::gui</a> {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">class </span>EventDialog; <span class="comment">///&lt; @todo Static build issues if the header is included.</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1MainWindow.xhtml">   55</a></span>&#160;<span class="keyword">class </span><a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml">MainWindow</a> : <span class="keyword">public</span> QMainWindow</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    Q_OBJECT</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">    /// @param[in,out] parent  The optional owner of this object.</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"></span>    <span class="keyword">explicit</span> <a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml">MainWindow</a>(QWidget *parent = <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    ~<a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml">MainWindow</a>();</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">    /// Loads a model and analysis configuration from a file.</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">    /// @param[in] configPath  The path to the configuration file.</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">    /// @param[in] inputFiles  Additional input files for model initialization.</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">    /// @returns true if the initialization is successful.</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">    /// @post No side effects are left-over</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">    ///       if the initialization is not successful.</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> setConfig(<span class="keyword">const</span> std::string &amp;configPath,</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                   std::vector&lt;std::string&gt; inputFiles = {});</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">    /// Adds a new set of model elements from input files.</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">    /// @param[in] inputFiles  Paths to input files.</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">    /// @returns true if the addition is successful.</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">    /// @post If the addition of any file is not successful,</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">    ///       the model is left in its original state</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">    ///       as if this function had not been called (i.e., transactional).</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> addInputFiles(<span class="keyword">const</span> std::vector&lt;std::string&gt; &amp;inputFiles);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;signals:<span class="comment"></span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">    /// Indicates addition of new input or configuration files.</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> configChanged();</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keyword">private</span> slots:<span class="comment"></span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">    /// Opens a new project configuration.</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">    /// The current project and input files are reset.</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> createNewModel();</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">    /// Opens model files.</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> openFiles(QString directory = QDir::homePath());</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">    /// Implicitly saves the modified model</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">    /// only if the destination is available.</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> autoSaveModel();</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">    /// Saves the project to a file.</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">    /// If the project is new,</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">    /// it does not have a default destination file.</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">    /// The user is required to specify the file upon save.</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> saveModel();</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">    /// Saves the project to a potentially different file.</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> saveModelAs();</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">    /// Exports the current analysis report.</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> exportReportAs();</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">    /// Handles element addition with a dialog.</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> addElement();</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> LAYOUT_VERSION = 0; <span class="comment">///&lt; Layout compatibility version.</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordtype">void</span> setupStatusBar();   <span class="comment">///&lt; Sets up widgets in the status bar.</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> setupActions();     <span class="comment">///&lt; Sets up all the actions with connections.</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> setupConnections(); <span class="comment">///&lt; Sets up all the remaining connections.</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> loadPreferences();  <span class="comment">///&lt; Loads the persistent application preferences.</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> savePreferences();  <span class="comment">///&lt; Writes the &#39;unsaved&#39; application preferences.</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> setupStartPage();   <span class="comment">///&lt; Sets up a new start page.</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">    /// @returns The model name to be used for a title (e.g., main window).</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment"></span>    QString getModelNameForTitle();</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordtype">void</span> setupZoomableView(<a class="code" href="classscram_1_1gui_1_1ZoomableView.xhtml">ZoomableView</a> *view); <span class="comment">///&lt; Connect to actions.</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">    /// Connects print actions.</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">    /// @tparam T  Any type with print() and printPreview() functions.</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">    /// @param[in,out] view  The printable view.</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment"></span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordtype">void</span> setupPrintableView(T *view);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">    /// Connects the export actions to a widget.</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">    /// @tparam  Any type with exportAs() function.</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">    /// @param[in,out] view  The exportable view.</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment"></span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordtype">void</span> setupExportableView(T *view);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">    /// Connects the search bar to the model of the view.</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">    /// @tparam T  Any model type with setFilterRegExp(QString).</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">    /// @param[in,out] view  The searchable view.</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">    /// @param[in,out] model  The model for the data in the view.</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment"></span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordtype">void</span> setupSearchable(QObject *view, T *model);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">    /// Sets up remove action activation upon selection.</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">    /// Only selection of top indices activate the removal.</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">    /// @tparam T  The type of the objects to remove.</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">    /// @param[in,out] view  The view w/ removable data.</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">    /// @pre Selections are single row.</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">    /// @pre The model is proxy.</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment"></span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordtype">void</span> setupRemovable(QAbstractItemView *view);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">    /// @tparam T  The MEF type.</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">    /// @returns The fault tree container of the element.</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment"></span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    mef::FaultTree *getFaultTree(T *)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    {</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    }</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">    /// Removes event from a fault tree.</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">    /// @tparam T  The model proxy type.</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">    /// @param[in,out] event  The existing event in the fault tree.</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">    /// @param[in,out] faultTree  The container fault tree.</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">    /// @pre The event is in the fault tree.</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment"></span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordtype">void</span> removeEvent(T *event, mef::FaultTree *faultTree);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">    /// @tparam ContainerModel  The container model type.</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">    /// @tparam Ts  The argument types for the container model.</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">    /// @param[in,out] parent  The parent to own the table view.</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">    /// @param[in] modelArgs  The arguments for container model constructor.</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">    /// @returns Table view ready for inclusion to tabs.</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment"></span>    <span class="keyword">template</span> &lt;<span class="keyword">class </span>ContainerModel, <span class="keyword">typename</span>... Ts&gt;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    QTableView *constructTableView(QWidget *parent, Ts &amp;&amp;... modelArgs);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">    /// Constructs the table view of elements.</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">    /// @tparam ContainerModel  The element container model type.</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">    /// @param[in,out] guiModel  The proxy model managing the data.</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">    /// @param[in,out] parent  The owner widget of the view.</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">    /// @returns A new table view listing the model elements.</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment"></span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> ContainerModel&gt;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    QAbstractItemView *constructElementTable(<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">model::Model</a> *guiModel,</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                                             QWidget *parent);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">    /// Constructs a new MEF element out of Event editor data.</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">    /// @tparam T  The MEF element type.</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">    /// @param[in] dialog  The Event editor dialog w/ appropriate data.</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">    /// @returns A new element constructed with the dialog data.</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment"></span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    std::unique_ptr&lt;T&gt; extract(<span class="keyword">const</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> &amp;dialog);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">    /// Retrieves the optional fault tree container out of an event editor.</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">    /// @param[in] dialog  The Event editor dialog.</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">    /// @returns The fault tree referenced in the event editor data.</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">    ///          nullptr if no fault tree is referenced by the event editor.</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment"></span>    mef::FaultTree *getFaultTree(<span class="keyword">const</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> &amp;dialog);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">    /// Launches the dialog to edit model elements.</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">    /// @{</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment"></span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keywordtype">void</span> editElement(<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> *dialog, <a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">model::Element</a> *element);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keywordtype">void</span> editElement(<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> *dialog, <a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">model::HouseEvent</a> *element);</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordtype">void</span> editElement(<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> *dialog, <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">model::BasicEvent</a> *element);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keywordtype">void</span> editElement(<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> *dialog, <a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">model::Gate</a> *element);<span class="comment"></span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">    /// @}</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">    /// Resets the tree view of the new model.</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> resetModelTree();</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">    /// Activates the model tree elements.</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> activateModelTree(<span class="keyword">const</span> QModelIndex &amp;index);</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">    /// Activates the fault tree view.</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">    /// @param[in,out] faultTree  The valid fault tree to be shown in graphics.</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> activateFaultTreeDiagram(mef::FaultTree *faultTree);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">    /// Activates the report tree elements.</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> activateReportTree(<span class="keyword">const</span> QModelIndex &amp;index);</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">    /// Resets the report view.</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">    /// @param analysis  The analysis with results.</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">    ///                  nullptr to clear the report widget.</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> resetReportTree(std::unique_ptr&lt;core::RiskAnalysis&gt; analysis);</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">    /// Saves the model and sets the model file.</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">    /// @param destination  The destination file to become the main model file.</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> saveToFile(std::string destination);</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment">    /// Updates the recent file tracking.</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">    /// @param filePaths  The list to append to the recent file list.</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment">    ///                   An empty list to clear the recent file list.</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">    /// @pre The list contains valid absolute input file paths.</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">    /// @note This does not store the result path list into persistent settings.</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> updateRecentFiles(QStringList filePaths);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">    /// Override to save the model before closing the application.</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> closeEvent(QCloseEvent *event) <span class="keyword">override</span>;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="comment">    /// Safely closes the tab with the given index in the widget.</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">    /// @param[in] index  The index of the tab to be removed.</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">    /// @post Show/hide order is respected for safe delete.</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">    /// @post The closed tab is deleted.</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> closeTab(<span class="keywordtype">int</span> index);</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">    /// Runs the analysis with the current model.</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> runAnalysis();</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    std::unique_ptr&lt;Ui::MainWindow&gt; ui; <span class="comment">///&lt; The main UI of the application.</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment"></span>    QAction *m_undoAction;   <span class="comment">///&lt; The undo action from the undo stack.</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment"></span>    QAction *m_redoAction;   <span class="comment">///&lt; The redo action from the undo stack.</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment"></span>    QUndoStack *m_undoStack; <span class="comment">///&lt; The application undo stack.</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment"></span>    QComboBox *m_zoomBox;    <span class="comment">///&lt; The main zoom chooser/displayer widget.</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment"></span>    QLineEdit *m_searchBar;  <span class="comment">///&lt; The filter/search bar for main views.</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment"></span>    QTimer *m_autoSaveTimer; <span class="comment">///&lt; The timer to periodically save the model.</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment"></span>    QSettings m_preferences; <span class="comment">///&lt; The persistent global application settings.</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment"></span>    std::array&lt;QAction *, 5&gt; m_recentFileActions; <span class="comment">///&lt; Recent files.</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    std::vector&lt;std::string&gt; m_inputFiles;    <span class="comment">///&lt; The project model files.</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment"></span>    core::Settings m_settings;                <span class="comment">///&lt; The analysis settings.</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment"></span>    std::shared_ptr&lt;mef::Model&gt; m_model;      <span class="comment">///&lt; The analysis model.</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment"></span>    std::unique_ptr&lt;model::Model&gt; m_guiModel; <span class="comment">///&lt; The GUI Model wrapper.</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment"></span>    std::unique_ptr&lt;core::RiskAnalysis&gt; m_analysis; <span class="comment">///&lt; Report container.</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;} <span class="comment">// namespace scram::gui</span></div><div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">scram::gui::model::BasicEvent</a></div><div class="ttdoc">The proxy to manage mef::BasicEvent. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00179">model.h:179</a></div></div>
<div class="ttc" id="model_8h_xhtml"><div class="ttname"><a href="model_8h.xhtml">model.h</a></div><div class="ttdoc">Wrapper Model classes for the MEF data. </div></div>
<div class="ttc" id="namespaceUi_xhtml"><div class="ttname"><a href="namespaceUi.xhtml">Ui</a></div><div class="ttdef"><b>Definition:</b> <a href="mainwindow_8h_source.xhtml#l00047">mainwindow.h:47</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">scram::gui::model::HouseEvent</a></div><div class="ttdoc">The proxy to manage mef::HouseEvent. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00284">model.h:284</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1MainWindow_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1MainWindow.xhtml">scram::gui::MainWindow</a></div><div class="ttdef"><b>Definition:</b> <a href="mainwindow_8h_source.xhtml#l00055">mainwindow.h:55</a></div></div>
<div class="ttc" id="zoomableview_8h_xhtml"><div class="ttname"><a href="zoomableview_8h.xhtml">zoomableview.h</a></div><div class="ttdoc">Provides a GraphicsView with zoom in/out and other convenience features. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model.xhtml">scram::gui::model::Model</a></div><div class="ttdoc">The wrapper around the MEF Model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00413">model.h:413</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml">scram::gui::model::Element</a></div><div class="ttdoc">The base proxy Element model for mef::Element. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00064">model.h:64</a></div></div>
<div class="ttc" id="namespacescram_1_1gui_xhtml"><div class="ttname"><a href="namespacescram_1_1gui.xhtml">scram::gui</a></div><div class="ttdef"><b>Definition:</b> <a href="align_8h_source.xhtml#l00025">align.h:25</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml">scram::gui::EventDialog</a></div><div class="ttdoc">The Dialog to create, present, and manipulate event data. </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00054">eventdialog.h:54</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1ZoomableView_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1ZoomableView.xhtml">scram::gui::ZoomableView</a></div><div class="ttdoc">The base class for graphics views with default zoom logic. </div><div class="ttdef"><b>Definition:</b> <a href="zoomableview_8h_source.xhtml#l00030">zoomableview.h:30</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml">scram::gui::model::Gate</a></div><div class="ttdoc">The proxy to manage mef::Gate. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00326">model.h:326</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:46 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
