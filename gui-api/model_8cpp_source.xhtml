<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>model.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_11bc0974ce736ce9a6fadebbeb7a8314.xhtml">gui</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">model.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="model_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2017-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="model_8h.xhtml">model.h</a>&quot;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;boost/range/algorithm.hpp&gt;</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;src/fault_tree.h&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="guiassert_8h.xhtml">guiassert.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram_1_1gui_1_1model.xhtml">scram::gui::model</a> {</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1Element_1_1SetLabel.xhtml#ac899e6f3eea7f5cb847bdcf5362ab6f5">   30</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1model_1_1Element_1_1SetLabel.xhtml#ac899e6f3eea7f5cb847bdcf5362ab6f5">Element::SetLabel::SetLabel</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element, QString label)</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    : <a class="code" href="classscram_1_1gui_1_1Involution.xhtml">Involution</a>(QObject::tr(<span class="stringliteral">&quot;Set element &#39;%1&#39; label to &#39;%2&#39;&quot;</span>)</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                     .arg(element-&gt;id(), label)),</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      m_label(std::move(label)), m_element(element)</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;}</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1Element_1_1SetLabel.xhtml#a3ef4cffa2ba4d8878da5784dc878dc89">   37</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Element_1_1SetLabel.xhtml#a3ef4cffa2ba4d8878da5784dc878dc89">Element::SetLabel::redo</a>()</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    QString cur_label = m_element-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a6d4704b8160d88d8a49f76096ee45677">label</a>();</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">if</span> (m_label == cur_label)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    m_element-&gt;m_data-&gt;label(m_label.toStdString());</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    emit m_element-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a4c7055b012fe4fdd5772acd7c9d6c58d">labelChanged</a>(m_label);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    m_label = std::move(cur_label);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a036db72d9a602fe492b5f3ac093f3d11">   47</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a036db72d9a602fe492b5f3ac093f3d11">BasicEvent::BasicEvent</a>(mef::BasicEvent *basicEvent)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    : <a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a>(basicEvent), m_flavor(<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a83e39d8225b8a2d4e1a8a00cf5e7f76e">Flavor</a>::Basic)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">if</span> (basicEvent-&gt;HasAttribute(<span class="stringliteral">&quot;flavor&quot;</span>)) {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keyword">const</span> mef::Attribute &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a827dd95218bb3eece34e5777d487a590">flavor</a> = basicEvent-&gt;GetAttribute(<span class="stringliteral">&quot;flavor&quot;</span>);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">if</span> (flavor.value == <span class="stringliteral">&quot;undeveloped&quot;</span>) {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            m_flavor = Flavor::Undeveloped;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (flavor.value == <span class="stringliteral">&quot;conditional&quot;</span>) {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            m_flavor = Flavor::Conditional;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    }</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetExpression.xhtml#a187eec76e91f51816e03b8295a90cb42">   60</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetExpression.xhtml#a187eec76e91f51816e03b8295a90cb42">BasicEvent::SetExpression::SetExpression</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">BasicEvent</a> *basicEvent,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                         mef::Expression *<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a4252873cbeb2ec908843a8aa222804a4">expression</a>)</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    : <a class="code" href="classscram_1_1gui_1_1Involution.xhtml">Involution</a>(QObject::tr(<span class="stringliteral">&quot;Modify basic event &#39;%1&#39; expression&quot;</span>)</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                     .arg(basicEvent-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">id</a>())),</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      m_expression(expression), m_basicEvent(basicEvent)</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetExpression.xhtml#ae6a0cda81a87f9e74eaf258a0a266963">   68</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetExpression.xhtml#ae6a0cda81a87f9e74eaf258a0a266963">BasicEvent::SetExpression::redo</a>()</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">auto</span> *mefEvent = m_basicEvent-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Proxy.xhtml#a9302e19d5f845a33bdc31e13b09731c4">data</a>();</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    mef::Expression *cur_expression =</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        mefEvent-&gt;HasExpression() ? &amp;mefEvent-&gt;expression() : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordflow">if</span> (m_expression == cur_expression)</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    mefEvent-&gt;expression(m_expression);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    emit m_basicEvent-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a6fe50c483f03f09c44e12336769c2517">expressionChanged</a>(m_expression);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    m_expression = cur_expression;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetFlavor.xhtml#a63636fbeb00b960649ce3c272985cb24">   80</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetFlavor.xhtml#a63636fbeb00b960649ce3c272985cb24">BasicEvent::SetFlavor::SetFlavor</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">BasicEvent</a> *basicEvent, <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a83e39d8225b8a2d4e1a8a00cf5e7f76e">Flavor</a> <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a827dd95218bb3eece34e5777d487a590">flavor</a>)</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    : <a class="code" href="classscram_1_1gui_1_1Involution.xhtml">Involution</a>(tr(<span class="stringliteral">&quot;Set basic event &#39;%1&#39; flavor to &#39;%2&#39;&quot;</span>)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                     .arg(basicEvent-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">id</a>(), <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#aea601a1adce8e1fcfe4a43db4b370077">flavorToString</a>(flavor))),</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      m_flavor(flavor), m_basicEvent(basicEvent)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;{</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetFlavor.xhtml#ac37ddcb53247b2404b909868566b34c7">   87</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetFlavor.xhtml#ac37ddcb53247b2404b909868566b34c7">BasicEvent::SetFlavor::redo</a>()</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a83e39d8225b8a2d4e1a8a00cf5e7f76e">Flavor</a> cur_flavor = m_basicEvent-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a827dd95218bb3eece34e5777d487a590">flavor</a>();</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">if</span> (m_flavor == cur_flavor)</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    mef::Element *mefEvent = m_basicEvent-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Proxy.xhtml#a9302e19d5f845a33bdc31e13b09731c4">data</a>();</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">switch</span> (m_flavor) {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">case</span> Basic:</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        mefEvent-&gt;RemoveAttribute(<span class="stringliteral">&quot;flavor&quot;</span>);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">case</span> Undeveloped:</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        mefEvent-&gt;SetAttribute({<span class="stringliteral">&quot;flavor&quot;</span>, <span class="stringliteral">&quot;undeveloped&quot;</span>, <span class="stringliteral">&quot;&quot;</span>});</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">case</span> Conditional:</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        mefEvent-&gt;SetAttribute({<span class="stringliteral">&quot;flavor&quot;</span>, <span class="stringliteral">&quot;conditional&quot;</span>, <span class="stringliteral">&quot;&quot;</span>});</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    m_basicEvent-&gt;m_flavor = m_flavor;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    emit m_basicEvent-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a29411ec728e7b00fec19dd7170adfe5d">flavorChanged</a>(m_flavor);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    m_flavor = cur_flavor;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1HouseEvent_1_1SetState.xhtml#adfa869164bc7d67ac540c17a974eb6e5">  110</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent_1_1SetState.xhtml#adfa869164bc7d67ac540c17a974eb6e5">HouseEvent::SetState::SetState</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">HouseEvent</a> *houseEvent, <span class="keywordtype">bool</span> state)</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    : <a class="code" href="classscram_1_1gui_1_1Involution.xhtml">Involution</a>(QObject::tr(<span class="stringliteral">&quot;Set house event &#39;%1&#39; state to &#39;%2&#39;&quot;</span>)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                     .arg(houseEvent-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">id</a>(), <a class="code" href="model_8h.xhtml#a7fb055e96982ca4cfbf9890bcec60b30">boolToString</a>(state))),</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      m_state(state), m_houseEvent(houseEvent)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;{</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1HouseEvent_1_1SetState.xhtml#a932800361c8b3ae4342647f5be26759f">  117</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent_1_1SetState.xhtml#a932800361c8b3ae4342647f5be26759f">HouseEvent::SetState::redo</a>()</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">if</span> (m_state == m_houseEvent-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml#a5d7cf6bceaeb71186648ee0e30bb9710">state</a>())</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordtype">bool</span> prev_state = m_houseEvent-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml#a5d7cf6bceaeb71186648ee0e30bb9710">state</a>();</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    m_houseEvent-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Proxy.xhtml#a9302e19d5f845a33bdc31e13b09731c4">data</a>()-&gt;state(m_state);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    emit m_houseEvent-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml#ab35bc38c6b921e382161efcd39fe5c7c">stateChanged</a>(m_state);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    m_state = prev_state;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;}</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1Gate_1_1SetFormula.xhtml#ac066439b0d950b182312212cd0fdb1c9">  127</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1model_1_1Gate_1_1SetFormula.xhtml#ac066439b0d950b182312212cd0fdb1c9">Gate::SetFormula::SetFormula</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">Gate</a> *gate, mef::FormulaPtr formula)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    : <a class="code" href="classscram_1_1gui_1_1Involution.xhtml">Involution</a>(QObject::tr(<span class="stringliteral">&quot;Update gate &#39;%1&#39; formula&quot;</span>).arg(gate-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">id</a>())),</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      m_formula(std::move(formula)), m_gate(gate)</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;{</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1Gate_1_1SetFormula.xhtml#a7e970a42c601690b7c1b298e2b7478fb">  133</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Gate_1_1SetFormula.xhtml#a7e970a42c601690b7c1b298e2b7478fb">Gate::SetFormula::redo</a>()</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    m_formula = m_gate-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Proxy.xhtml#a9302e19d5f845a33bdc31e13b09731c4">data</a>()-&gt;formula(std::move(m_formula));</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    emit m_gate-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml#ab406e6af426132143c0d8d08c1fec19b">formulaChanged</a>();</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keyword">namespace </span>{</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> S&gt;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keywordtype">void</span> populate(<span class="keyword">const</span> mef::IdTable&lt;S&gt; &amp;source, <a class="code" href="model_8h.xhtml#a1c45a19c0c0216e20d0fd6cd2702b576">ProxyTable&lt;T&gt;</a> *proxyTable)</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;{</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    proxyTable-&gt;reserve(source.size());</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> S &amp;element : source)</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        proxyTable-&gt;emplace(std::make_unique&lt;T&gt;(element.get()));</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;}</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;} <span class="comment">// namespace</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1Model.xhtml#a9995820c542bf7a12f0198a7e6b88455">  151</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml#a9995820c542bf7a12f0198a7e6b88455">Model::Model</a>(mef::Model *model) : <a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a>(model), m_model(model)</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;{</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    normalize(model);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    populate&lt;HouseEvent&gt;(m_model-&gt;house_events(), &amp;m_houseEvents);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    populate&lt;BasicEvent&gt;(m_model-&gt;basic_events(), &amp;m_basicEvents);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    populate&lt;Gate&gt;(m_model-&gt;gates(), &amp;m_gates);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;}</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="keywordtype">void</span> Model::normalize(mef::Model *model)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;{</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> mef::FaultTreePtr &amp;faultTree : model-&gt;fault_trees()) {</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keyword">const_cast&lt;</span>mef::ElementTable&lt;mef::BasicEvent *&gt; &amp;<span class="keyword">&gt;</span>(</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            faultTree-&gt;basic_events())</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            .clear();</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keyword">const_cast&lt;</span>mef::ElementTable&lt;mef::HouseEvent *&gt; &amp;<span class="keyword">&gt;</span>(</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            faultTree-&gt;house_events())</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            .clear();</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    }</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1Model.xhtml#aae21c9e514e483c5bb82a3d2c0e1de07">  171</a></span>&#160;std::vector&lt;Gate *&gt; <a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml#aae21c9e514e483c5bb82a3d2c0e1de07">Model::parents</a>(mef::Formula::EventArg event)<span class="keyword"> const</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    std::vector&lt;Gate *&gt; result;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> std::unique_ptr&lt;Gate&gt; &amp;gate : m_gates) {</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="keywordflow">if</span> (boost::find(gate-&gt;args(), event) != gate-&gt;args().end())</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            result.push_back(gate.get());</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    }</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">return</span> result;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;}</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1Model_1_1SetName.xhtml#af3189ae0990e48f8d7e9c6e80f55cf03">  181</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1SetName.xhtml#af3189ae0990e48f8d7e9c6e80f55cf03">Model::SetName::SetName</a>(QString name, <a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">Model</a> *model)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    : <a class="code" href="classscram_1_1gui_1_1Involution.xhtml">Involution</a>(QObject::tr(<span class="stringliteral">&quot;Rename model to &#39;%1&#39;&quot;</span>).arg(name)), m_model(model),</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      m_name(std::move(name))</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;{</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;}</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1Model_1_1SetName.xhtml#aca2c5cdce29ffc23e004098401b1a23f">  187</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1SetName.xhtml#aca2c5cdce29ffc23e004098401b1a23f">Model::SetName::redo</a>()</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;{</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    QString currentName =</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        m_model-&gt;m_model-&gt;HasDefaultName() ? QStringLiteral(<span class="stringliteral">&quot;&quot;</span>) : m_model-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">id</a>();</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">if</span> (currentName == m_name)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    m_model-&gt;m_model-&gt;SetOptionalName(m_name.toStdString());</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    emit m_model-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml#a564f2eddf7f2a8db7c0b717ebd7dab71">modelNameChanged</a>(m_name);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    m_name = std::move(currentName);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;}</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree.xhtml#aa7d32b90c69dcc12dff84f78cfeb4869">  198</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree.xhtml#aa7d32b90c69dcc12dff84f78cfeb4869">Model::AddFaultTree::AddFaultTree</a>(mef::FaultTreePtr faultTree, <a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">Model</a> *model)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    : QUndoCommand(QObject::tr(<span class="stringliteral">&quot;Add fault tree &#39;%1&#39;&quot;</span>)</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                       .arg(QString::fromStdString(faultTree-&gt;name()))),</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      m_model(model), m_address(faultTree.get()),</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;      m_faultTree(std::move(faultTree))</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;{</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;}</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree.xhtml#a8211ec1b986c59bd09276a6d3ca8584c">  206</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree.xhtml#a8211ec1b986c59bd09276a6d3ca8584c">Model::AddFaultTree::redo</a>()</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;{</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    m_model-&gt;m_model-&gt;Add(std::move(m_faultTree));</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    emit m_model-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml#a7b8838e7fffd01f945289ae6a10aaaa2">added</a>(m_address);</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;}</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree.xhtml#a47115a6278e8ae02da35d003a3eb6718">  212</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree.xhtml#a47115a6278e8ae02da35d003a3eb6718">Model::AddFaultTree::undo</a>()</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;{</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    m_faultTree = m_model-&gt;m_model-&gt;Remove(m_address);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    emit m_model-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml#a1922d5cd87e81d5c0001b3b11dcc5c0e">removed</a>(m_address);</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;}</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1Model_1_1RemoveFaultTree.xhtml#a0bd2ae2a8e286d8292c502b148a9bd3a">  218</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1RemoveFaultTree.xhtml#a0bd2ae2a8e286d8292c502b148a9bd3a">Model::RemoveFaultTree::RemoveFaultTree</a>(mef::FaultTree *faultTree, <a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">Model</a> *model)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    : <a class="code" href="classscram_1_1gui_1_1Inverse.xhtml">Inverse</a>&lt;<a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree.xhtml">AddFaultTree</a>&gt;(faultTree, model,</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                            QObject::tr(<span class="stringliteral">&quot;Remove fault tree &#39;%1&#39;&quot;</span>)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                                .arg(QString::fromStdString(faultTree-&gt;name())))</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;{</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;}</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;} <span class="comment">// namespace scram::gui::model</span></div><div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_1_1SetName_xhtml_af3189ae0990e48f8d7e9c6e80f55cf03"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model_1_1SetName.xhtml#af3189ae0990e48f8d7e9c6e80f55cf03">scram::gui::model::Model::SetName::SetName</a></div><div class="ttdeci">SetName(QString name, Model *model)</div><div class="ttdoc">Stores the model and its new name. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00181">model.cpp:181</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">scram::gui::model::BasicEvent</a></div><div class="ttdoc">The proxy to manage mef::BasicEvent. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00179">model.h:179</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_xhtml_aae21c9e514e483c5bb82a3d2c0e1de07"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model.xhtml#aae21c9e514e483c5bb82a3d2c0e1de07">scram::gui::model::Model::parents</a></div><div class="ttdeci">std::vector&lt; Gate * &gt; parents(mef::Formula::EventArg event) const </div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00171">model.cpp:171</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEvent_1_1SetState_xhtml_adfa869164bc7d67ac540c17a974eb6e5"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEvent_1_1SetState.xhtml#adfa869164bc7d67ac540c17a974eb6e5">scram::gui::model::HouseEvent::SetState::SetState</a></div><div class="ttdeci">SetState(HouseEvent *houseEvent, bool state)</div><div class="ttdoc">Stores the house event and its new state. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00110">model.cpp:110</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEvent_xhtml_ab35bc38c6b921e382161efcd39fe5c7c"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml#ab35bc38c6b921e382161efcd39fe5c7c">scram::gui::model::HouseEvent::stateChanged</a></div><div class="ttdeci">void stateChanged(bool value)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1Inverse_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1Inverse.xhtml">scram::gui::Inverse</a></div><div class="ttdoc">A command that is an inverse of another command. </div><div class="ttdef"><b>Definition:</b> <a href="command_8h_source.xhtml#l00073">command.h:73</a></div></div>
<div class="ttc" id="model_8h_xhtml"><div class="ttname"><a href="model_8h.xhtml">model.h</a></div><div class="ttdoc">Wrapper Model classes for the MEF data. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEvent_1_1SetState_xhtml_a932800361c8b3ae4342647f5be26759f"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEvent_1_1SetState.xhtml#a932800361c8b3ae4342647f5be26759f">scram::gui::model::HouseEvent::SetState::redo</a></div><div class="ttdeci">void redo() override</div><div class="ttdoc">Applies the new state to the house event. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00117">model.cpp:117</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml_a827dd95218bb3eece34e5777d487a590"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a827dd95218bb3eece34e5777d487a590">scram::gui::model::BasicEvent::flavor</a></div><div class="ttdeci">Flavor flavor() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00207">model.h:207</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">scram::gui::model::HouseEvent</a></div><div class="ttdoc">The proxy to manage mef::HouseEvent. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00284">model.h:284</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml_a29411ec728e7b00fec19dd7170adfe5d"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a29411ec728e7b00fec19dd7170adfe5d">scram::gui::model::BasicEvent::flavorChanged</a></div><div class="ttdeci">void flavorChanged(Flavor flavor)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree_xhtml_a8211ec1b986c59bd09276a6d3ca8584c"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree.xhtml#a8211ec1b986c59bd09276a6d3ca8584c">scram::gui::model::Model::AddFaultTree::redo</a></div><div class="ttdeci">void redo() override</div><div class="ttdoc">Adds the fault tree. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00206">model.cpp:206</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml_a82e8bcd852ded4bb3c7e30148c0b18c6"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">scram::gui::model::Element::id</a></div><div class="ttdeci">QString id() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00075">model.h:75</a></div></div>
<div class="ttc" id="model_8h_xhtml_a7fb055e96982ca4cfbf9890bcec60b30"><div class="ttname"><a href="model_8h.xhtml#a7fb055e96982ca4cfbf9890bcec60b30">scram::gui::model::boolToString</a></div><div class="ttdeci">QString boolToString(bool value)</div><div class="ttdoc">Converts Boolean value to a UI string. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00278">model.h:278</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml_a4c7055b012fe4fdd5772acd7c9d6c58d"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml#a4c7055b012fe4fdd5772acd7c9d6c58d">scram::gui::model::Element::labelChanged</a></div><div class="ttdeci">void labelChanged(const QString &amp;label)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml_aea601a1adce8e1fcfe4a43db4b370077"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#aea601a1adce8e1fcfe4a43db4b370077">scram::gui::model::BasicEvent::flavorToString</a></div><div class="ttdeci">static QString flavorToString(Flavor flavor)</div><div class="ttdoc">Converts a basic event flavor to a UI string. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00188">model.h:188</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml_a6fe50c483f03f09c44e12336769c2517"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a6fe50c483f03f09c44e12336769c2517">scram::gui::model::BasicEvent::expressionChanged</a></div><div class="ttdeci">void expressionChanged(mef::Expression *expression)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml_a036db72d9a602fe492b5f3ac093f3d11"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a036db72d9a602fe492b5f3ac093f3d11">scram::gui::model::BasicEvent::BasicEvent</a></div><div class="ttdeci">BasicEvent(mef::BasicEvent *basicEvent)</div><div class="ttdoc">Initializes proxy with the MEF basic event and its implicit flavor. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00047">model.cpp:47</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree_xhtml_a47115a6278e8ae02da35d003a3eb6718"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree.xhtml#a47115a6278e8ae02da35d003a3eb6718">scram::gui::model::Model::AddFaultTree::undo</a></div><div class="ttdeci">void undo() override</div><div class="ttdoc">Removes the fault tree. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00212">model.cpp:212</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetExpression_xhtml_ae6a0cda81a87f9e74eaf258a0a266963"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetExpression.xhtml#ae6a0cda81a87f9e74eaf258a0a266963">scram::gui::model::BasicEvent::SetExpression::redo</a></div><div class="ttdeci">void redo() override</div><div class="ttdoc">Applies the expression changes. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00068">model.cpp:68</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_1_1SetLabel_xhtml_a3ef4cffa2ba4d8878da5784dc878dc89"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element_1_1SetLabel.xhtml#a3ef4cffa2ba4d8878da5784dc878dc89">scram::gui::model::Element::SetLabel::redo</a></div><div class="ttdeci">void redo() override</div><div class="ttdoc">Applies changes. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00037">model.cpp:37</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_xhtml_a7b8838e7fffd01f945289ae6a10aaaa2"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model.xhtml#a7b8838e7fffd01f945289ae6a10aaaa2">scram::gui::model::Model::added</a></div><div class="ttdeci">void added(mef::FaultTree *faultTree)</div><div class="ttdoc">Signals the addition of new elements into the model. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_1_1SetFormula_xhtml_ac066439b0d950b182312212cd0fdb1c9"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate_1_1SetFormula.xhtml#ac066439b0d950b182312212cd0fdb1c9">scram::gui::model::Gate::SetFormula::SetFormula</a></div><div class="ttdeci">SetFormula(Gate *gate, mef::FormulaPtr formula)</div><div class="ttdoc">Stores the gate and its new formula. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00127">model.cpp:127</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_xhtml_a564f2eddf7f2a8db7c0b717ebd7dab71"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model.xhtml#a564f2eddf7f2a8db7c0b717ebd7dab71">scram::gui::model::Model::modelNameChanged</a></div><div class="ttdeci">void modelNameChanged(QString name)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Proxy_xhtml_a9302e19d5f845a33bdc31e13b09731c4"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Proxy.xhtml#a9302e19d5f845a33bdc31e13b09731c4">scram::gui::model::Proxy::data</a></div><div class="ttdeci">const T * data() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00167">model.h:167</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_1_1RemoveFaultTree_xhtml_a0bd2ae2a8e286d8292c502b148a9bd3a"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model_1_1RemoveFaultTree.xhtml#a0bd2ae2a8e286d8292c502b148a9bd3a">scram::gui::model::Model::RemoveFaultTree::RemoveFaultTree</a></div><div class="ttdeci">RemoveFaultTree(mef::FaultTree *faultTree, Model *model)</div><div class="ttdoc">Stores the model and existing fault tree for removal. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00218">model.cpp:218</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetExpression_xhtml_a187eec76e91f51816e03b8295a90cb42"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetExpression.xhtml#a187eec76e91f51816e03b8295a90cb42">scram::gui::model::BasicEvent::SetExpression::SetExpression</a></div><div class="ttdeci">SetExpression(BasicEvent *basicEvent, mef::Expression *expression)</div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00060">model.cpp:60</a></div></div>
<div class="ttc" id="guiassert_8h_xhtml"><div class="ttname"><a href="guiassert_8h.xhtml">guiassert.h</a></div><div class="ttdoc">GUI assertions that should not crash the program by default. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model.xhtml">scram::gui::model::Model</a></div><div class="ttdoc">The wrapper around the MEF Model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00413">model.h:413</a></div></div>
<div class="ttc" id="model_8h_xhtml_a1c45a19c0c0216e20d0fd6cd2702b576"><div class="ttname"><a href="model_8h.xhtml#a1c45a19c0c0216e20d0fd6cd2702b576">scram::gui::model::ProxyTable</a></div><div class="ttdeci">boost::multi_index_container&lt; std::unique_ptr&lt; T &gt;, boost::multi_index::indexed_by&lt; boost::multi_index::hashed_unique&lt; boost::multi_index::const_mem_fun&lt; P, const M *,&amp;P::data &gt;&gt;&gt;&gt; ProxyTable</div><div class="ttdoc">Table of proxy elements uniquely wrapping the core model element. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00410">model.h:410</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_1_1SetLabel_xhtml_ac899e6f3eea7f5cb847bdcf5362ab6f5"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element_1_1SetLabel.xhtml#ac899e6f3eea7f5cb847bdcf5362ab6f5">scram::gui::model::Element::SetLabel::SetLabel</a></div><div class="ttdeci">SetLabel(Element *element, QString label)</div><div class="ttdoc">Stores an element and its new label. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00030">model.cpp:30</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_xhtml_a1922d5cd87e81d5c0001b3b11dcc5c0e"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model.xhtml#a1922d5cd87e81d5c0001b3b11dcc5c0e">scram::gui::model::Model::removed</a></div><div class="ttdeci">void removed(mef::FaultTree *faultTree)</div><div class="ttdoc">Signals the removal of existing elements of the model. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml_ab406e6af426132143c0d8d08c1fec19b"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml#ab406e6af426132143c0d8d08c1fec19b">scram::gui::model::Gate::formulaChanged</a></div><div class="ttdeci">void formulaChanged()</div><div class="ttdoc">Indicates gate formula changes or resets. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml_a4252873cbeb2ec908843a8aa222804a4"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a4252873cbeb2ec908843a8aa222804a4">scram::gui::model::BasicEvent::expression</a></div><div class="ttdeci">mef::Expression * expression() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00211">model.h:211</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml">scram::gui::model::Element</a></div><div class="ttdoc">The base proxy Element model for mef::Element. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00064">model.h:64</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree_xhtml_aa7d32b90c69dcc12dff84f78cfeb4869"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree.xhtml#aa7d32b90c69dcc12dff84f78cfeb4869">scram::gui::model::Model::AddFaultTree::AddFaultTree</a></div><div class="ttdeci">AddFaultTree(mef::FaultTreePtr faultTree, Model *model)</div><div class="ttdoc">Stores the new fault tree and the target model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00198">model.cpp:198</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1Involution_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1Involution.xhtml">scram::gui::Involution</a></div><div class="ttdoc">The function inverse is the function itself (i.e., f(f(x)) = id(x)). </div><div class="ttdef"><b>Definition:</b> <a href="command_8h_source.xhtml#l00057">command.h:57</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree.xhtml">scram::gui::model::Model::AddFaultTree</a></div><div class="ttdoc">Adds a fault tree into a model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00476">model.h:476</a></div></div>
<div class="ttc" id="namespacescram_1_1gui_1_1model_xhtml"><div class="ttname"><a href="namespacescram_1_1gui_1_1model.xhtml">scram::gui::model</a></div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00030">elementcontainermodel.cpp:30</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml_a6d4704b8160d88d8a49f76096ee45677"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml#a6d4704b8160d88d8a49f76096ee45677">scram::gui::model::Element::label</a></div><div class="ttdeci">QString label() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00078">model.h:78</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetFlavor_xhtml_ac37ddcb53247b2404b909868566b34c7"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetFlavor.xhtml#ac37ddcb53247b2404b909868566b34c7">scram::gui::model::BasicEvent::SetFlavor::redo</a></div><div class="ttdeci">void redo() override</div><div class="ttdoc">Applies the flavor changes. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00087">model.cpp:87</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml_a83e39d8225b8a2d4e1a8a00cf5e7f76e"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a83e39d8225b8a2d4e1a8a00cf5e7f76e">scram::gui::model::BasicEvent::Flavor</a></div><div class="ttdeci">Flavor</div><div class="ttdoc">Basic event flavors. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00185">model.h:185</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_xhtml_a9995820c542bf7a12f0198a7e6b88455"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model.xhtml#a9995820c542bf7a12f0198a7e6b88455">scram::gui::model::Model::Model</a></div><div class="ttdeci">Model(mef::Model *model)</div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00151">model.cpp:151</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetFlavor_xhtml_a63636fbeb00b960649ce3c272985cb24"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetFlavor.xhtml#a63636fbeb00b960649ce3c272985cb24">scram::gui::model::BasicEvent::SetFlavor::SetFlavor</a></div><div class="ttdeci">SetFlavor(BasicEvent *basicEvent, Flavor flavor)</div><div class="ttdoc">Stores the basic event and its new flavor. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00080">model.cpp:80</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEvent_xhtml_a5d7cf6bceaeb71186648ee0e30bb9710"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml#a5d7cf6bceaeb71186648ee0e30bb9710">scram::gui::model::HouseEvent::state</a></div><div class="ttdeci">T state() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00294">model.h:294</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_1_1SetName_xhtml_aca2c5cdce29ffc23e004098401b1a23f"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model_1_1SetName.xhtml#aca2c5cdce29ffc23e004098401b1a23f">scram::gui::model::Model::SetName::redo</a></div><div class="ttdeci">void redo() override</div><div class="ttdoc">Applies the new name to the model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00187">model.cpp:187</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_1_1SetFormula_xhtml_a7e970a42c601690b7c1b298e2b7478fb"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate_1_1SetFormula.xhtml#a7e970a42c601690b7c1b298e2b7478fb">scram::gui::model::Gate::SetFormula::redo</a></div><div class="ttdeci">void redo() override</div><div class="ttdoc">Applies the gate formula changes. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cpp_source.xhtml#l00133">model.cpp:133</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml">scram::gui::model::Gate</a></div><div class="ttdoc">The proxy to manage mef::Gate. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00326">model.h:326</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:46 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
