<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>eventdialog.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_11bc0974ce736ce9a6fadebbeb7a8314.xhtml">gui</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">eventdialog.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="eventdialog_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2017-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="eventdialog_8h.xhtml">eventdialog.h</a>&quot;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;QCompleter&gt;</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;QListView&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;QObject&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;QPushButton&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;QShortcut&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;QStatusBar&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;boost/range/algorithm.hpp&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;src/element.h&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;src/expression/constant.h&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;src/expression/exponential.h&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;src/ext/bits.h&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;src/ext/find_iterator.h&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;src/ext/variant.h&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="guiassert_8h.xhtml">guiassert.h</a>&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="overload_8h.xhtml">overload.h</a>&quot;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="validator_8h.xhtml">validator.h</a>&quot;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram_1_1gui.xhtml">scram::gui</a> {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;QString EventDialog::redBackground(QStringLiteral(<span class="stringliteral">&quot;background : red;&quot;</span>));</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;QString EventDialog::yellowBackground(QStringLiteral(<span class="stringliteral">&quot;background : yellow;&quot;</span>));</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bd4a7b6bca6ddb91656f4bb87f905">   47</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bd4a7b6bca6ddb91656f4bb87f905">EventDialog::EventDialog</a>(mef::Model *model, QWidget *parent)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    : QDialog(parent), m_model(model), m_errorBar(new QStatusBar(this))</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    setupUi(<span class="keyword">this</span>);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    gridLayout-&gt;addWidget(m_errorBar, gridLayout-&gt;rowCount(), 0,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                          gridLayout-&gt;rowCount(), gridLayout-&gt;columnCount());</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    nameLine-&gt;setValidator(<a class="code" href="classscram_1_1gui_1_1Validator.xhtml#ade5c7bef2410bb4bc6bb05d88ee99793">Validator::name</a>());</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    constantValue-&gt;setValidator(<a class="code" href="classscram_1_1gui_1_1Validator.xhtml#a212add9e7bae0f86c226e7183d8fa04e">Validator::probability</a>());</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    exponentialRate-&gt;setValidator(<a class="code" href="classscram_1_1gui_1_1Validator.xhtml#a5faf89430d1d02672239887e5fe3d0f7">Validator::nonNegative</a>());</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    addArgLine-&gt;setValidator(<a class="code" href="classscram_1_1gui_1_1Validator.xhtml#ade5c7bef2410bb4bc6bb05d88ee99793">Validator::name</a>());</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    containerFaultTreeName-&gt;setValidator(<a class="code" href="classscram_1_1gui_1_1Validator.xhtml#ade5c7bef2410bb4bc6bb05d88ee99793">Validator::name</a>());</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    connect(typeBox, <a class="code" href="overload_8h.xhtml#a9b2ccb7e9e0744cd44765f77b05fa93f">OVERLOAD</a>(QComboBox, currentIndexChanged, <span class="keywordtype">int</span>),</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            [<span class="keyword">this</span>](<span class="keywordtype">int</span> index) {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                <span class="keywordflow">switch</span> (static_cast&lt;EventType&gt;(1 &lt;&lt; index)) {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                <span class="keywordflow">case</span> HouseEvent:</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(typeBox-&gt;currentText() == tr(<span class="stringliteral">&quot;House event&quot;</span>), );</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                    stackedWidgetType-&gt;setCurrentWidget(tabBoolean);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                <span class="keywordflow">case</span> BasicEvent:</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                <span class="keywordflow">case</span> Undeveloped:</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                <span class="keywordflow">case</span> Conditional:</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                    stackedWidgetType-&gt;setCurrentWidget(tabExpression);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                <span class="keywordflow">case</span> Gate:</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                    stackedWidgetType-&gt;setCurrentWidget(tabFormula);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span>, );</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                }<span class="comment"></span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">                /// @todo Implement container change.</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment"></span>                <span class="keywordflow">if</span> (index == ext::one_bit_index(EventType::Gate)) {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                    containerFaultTree-&gt;setEnabled(<span class="keyword">true</span>);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                    containerFaultTree-&gt;setChecked(<span class="keyword">true</span>);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                    containerModel-&gt;setEnabled(<span class="keyword">false</span>);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                    <span class="keywordflow">if</span> (m_fixContainerName)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                        containerFaultTreeName-&gt;setEnabled(<span class="keyword">false</span>);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                    containerFaultTree-&gt;setEnabled(<span class="keyword">false</span>);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                    containerModel-&gt;setEnabled(<span class="keyword">true</span>);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                    containerModel-&gt;setChecked(<span class="keyword">true</span>);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                }</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a38bf6ffaa2fb4575a8ddeb52a1a953a4">validate</a>();</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            });</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    connect(expressionType, <a class="code" href="overload_8h.xhtml#a9b2ccb7e9e0744cd44765f77b05fa93f">OVERLOAD</a>(QComboBox, currentIndexChanged, <span class="keywordtype">int</span>), <span class="keyword">this</span>,</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            &amp;<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a38bf6ffaa2fb4575a8ddeb52a1a953a4">EventDialog::validate</a>);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    connect(expressionBox, &amp;QGroupBox::toggled, <span class="keyword">this</span>, &amp;<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a38bf6ffaa2fb4575a8ddeb52a1a953a4">EventDialog::validate</a>);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    connectLineEdits(</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        {nameLine, constantValue, exponentialRate, containerFaultTreeName});</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    connect(connectiveBox, <a class="code" href="overload_8h.xhtml#a9b2ccb7e9e0744cd44765f77b05fa93f">OVERLOAD</a>(QComboBox, currentIndexChanged, <span class="keywordtype">int</span>),</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            [<span class="keyword">this</span>](<span class="keywordtype">int</span> index) {</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                voteNumberBox-&gt;setEnabled(index == mef::kVote);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a38bf6ffaa2fb4575a8ddeb52a1a953a4">validate</a>();</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            });</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    connect(<span class="keyword">this</span>, &amp;<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#adac635981e288e568e5f46ec8d3185ba">EventDialog::formulaArgsChanged</a>, [<span class="keyword">this</span>] {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordtype">int</span> numArgs = argsList-&gt;count();</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordtype">int</span> newMax = numArgs &gt; 2 ? (numArgs - 1) : 2;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">if</span> (voteNumberBox-&gt;value() &gt; newMax)</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            voteNumberBox-&gt;setValue(newMax);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        voteNumberBox-&gt;setMaximum(newMax);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a38bf6ffaa2fb4575a8ddeb52a1a953a4">validate</a>();</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    });</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    connect(addArgLine, &amp;QLineEdit::returnPressed, <span class="keyword">this</span>, [<span class="keyword">this</span>] {</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        QString <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a0c144e53e44d5b9524d60698cb356653">name</a> = addArgLine-&gt;text();</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">if</span> (name.isEmpty())</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        addArgLine-&gt;setStyleSheet(yellowBackground);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keywordflow">if</span> (hasFormulaArg(name)) {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            m_errorBar-&gt;showMessage(</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                <span class="comment">//: Duplicate arguments are not allowed in a formula.</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                tr(<span class="stringliteral">&quot;The argument &#39;%1&#39; is already in formula.&quot;</span>).arg(name));</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        }</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">if</span> (name == nameLine-&gt;text()) {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            m_errorBar-&gt;showMessage(</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                <span class="comment">//: Self-cycle is also called a loop in a graph.</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                tr(<span class="stringliteral">&quot;The argument &#39;%1&#39; would introduce a self-cycle.&quot;</span>)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                    .arg(name));</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (m_event) {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="keyword">auto</span> it = m_model-&gt;gates().find(name.toStdString());</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="keywordflow">if</span> (it != m_model-&gt;gates().end() &amp;&amp; checkCycle(it-&gt;get())) {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                m_errorBar-&gt;showMessage(</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                    <span class="comment">//: Fault trees are acyclic graphs.</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                    tr(<span class="stringliteral">&quot;The argument &#39;%1&#39; would introduce a cycle.&quot;</span>).arg(name));</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            }</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        addArgLine-&gt;setStyleSheet({});</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        argsList-&gt;addItem(name);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        emit <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#adac635981e288e568e5f46ec8d3185ba">formulaArgsChanged</a>();</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    });</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    connect(addArgLine, &amp;QLineEdit::textChanged,</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            [<span class="keyword">this</span>] { addArgLine-&gt;setStyleSheet({}); });</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    stealTopFocus(addArgLine);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    setupArgCompleter();</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    connect(addArgButton, &amp;QPushButton::clicked, addArgLine,</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            &amp;QLineEdit::returnPressed);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    connect(removeArgButton, &amp;QPushButton::clicked, argsList, [<span class="keyword">this</span>] {</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordtype">int</span> rows = argsList-&gt;count();</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordflow">if</span> (rows == 0)</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">if</span> (argsList-&gt;currentItem())</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="keyword">delete</span> argsList-&gt;currentItem();</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="keyword">delete</span> argsList-&gt;takeItem(rows - 1);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        emit <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#adac635981e288e568e5f46ec8d3185ba">formulaArgsChanged</a>();</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    });</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    QShortcut *shortcut = <span class="keyword">new</span> QShortcut(QKeySequence(Qt::Key_Delete), argsList);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    connect(shortcut, &amp;QShortcut::activated, argsList, [<span class="keyword">this</span>] {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">if</span> (argsList-&gt;currentItem()) {</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keyword">delete</span> argsList-&gt;currentItem();</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            emit <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#adac635981e288e568e5f46ec8d3185ba">formulaArgsChanged</a>();</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        }</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    });</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">    /// @todo Enable fault-tree as a container for events.</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment"></span>    containerFaultTree-&gt;setEnabled(<span class="keyword">false</span>);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="comment">// Ensure proper defaults.</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(typeBox-&gt;currentIndex() == 0, );</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(stackedWidgetType-&gt;currentIndex() == 0, );</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(expressionType-&gt;currentIndex() == 0, );</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(stackedWidgetExpressionData-&gt;currentIndex() == 0, );</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="comment">// Validation triggers.</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    QPushButton *okButton = buttonBox-&gt;button(QDialogButtonBox::Ok);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(okButton, );</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    okButton-&gt;setEnabled(<span class="keyword">false</span>);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    connect(<span class="keyword">this</span>, &amp;<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a26ac970b870dc37d46f1fd2ccd3b6f0c">EventDialog::validated</a>, okButton, &amp;QPushButton::setEnabled);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;}</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1EventDialog.xhtml#a3f52697e4e16187eb133aa1d59d249e8">  180</a></span>&#160;std::vector&lt;std::string&gt; <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a3f52697e4e16187eb133aa1d59d249e8">EventDialog::arguments</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    std::vector&lt;std::string&gt; result;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; argsList-&gt;count(); ++i)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        result.push_back(</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            argsList-&gt;item(i)-&gt;data(Qt::DisplayRole).toString().toStdString());</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordflow">return</span> result;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;}</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keywordtype">bool</span> EventDialog::hasFormulaArg(<span class="keyword">const</span> QString &amp;<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a0c144e53e44d5b9524d60698cb356653">name</a>)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;{</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; argsList-&gt;count(); ++i) {</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">if</span> (argsList-&gt;item(i)-&gt;data(Qt::DisplayRole) == <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a0c144e53e44d5b9524d60698cb356653">name</a>)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    }</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;}</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordtype">bool</span> EventDialog::checkCycle(<span class="keyword">const</span> mef::Gate *gate)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;{</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keyword">struct</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    {</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordtype">bool</span> operator()(<span class="keyword">const</span> mef::Event *)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="keywordtype">bool</span> operator()(<span class="keyword">const</span> mef::Gate *arg)<span class="keyword"> const</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">return</span> m_self-&gt;checkCycle(arg);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        }</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> *m_self;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    } visitor{<span class="keyword">this</span>};</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> mef::Formula::EventArg &amp;arg : gate-&gt;formula().event_args()) {</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="keywordflow">if</span> (ext::as&lt;const mef::Element *&gt;(arg) == m_event)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keywordflow">if</span> (std::visit(visitor, arg))</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    }</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;}</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;mef::FaultTree *EventDialog::getFaultTree(<span class="keyword">const</span> T *event)<span class="keyword"> const</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="comment">// Find the fault tree of the first parent gate.</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keyword">auto</span> it =</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        boost::find_if(m_model-&gt;gates(), [&amp;event](<span class="keyword">const</span> mef::GatePtr &amp;gate) {</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            <span class="keywordflow">return</span> boost::find(gate-&gt;formula().event_args(),</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                               mef::Formula::EventArg(const_cast&lt;T *&gt;(event)))</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                   != gate-&gt;formula().event_args().end();</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        });</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keywordflow">if</span> (it == m_model-&gt;gates().end())</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keywordflow">return</span> getFaultTree(it-&gt;get());</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;}</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">/// Finds fault tree container of the gate.</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1EventDialog.xhtml#aa7277e2f2b20420880a2a875680eaffa">  236</a></span>&#160;mef::FaultTree *EventDialog::getFaultTree(<span class="keyword">const</span> mef::Gate *event)<span class="keyword"> const</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keyword">auto</span> it = boost::find_if(m_model-&gt;fault_trees(),</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                             [&amp;event](<span class="keyword">const</span> mef::FaultTreePtr &amp;<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a4b0937931be261ac68e45aee3062daf9">faultTree</a>) {</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                                 <span class="keywordflow">return</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a4b0937931be261ac68e45aee3062daf9">faultTree</a>-&gt;gates().count(event-&gt;name());</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                             });</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(it != m_model-&gt;fault_trees().end(), <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="keywordflow">return</span> it-&gt;get();</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;}</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">EventDialog::setupData</a>(<span class="keyword">const</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">model::Element</a> &amp;element, <span class="keyword">const</span> T *origin)</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;{</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    m_event = origin;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    m_initName = element.<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">id</a>();</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    nameLine-&gt;setText(m_initName);</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    labelText-&gt;setPlainText(element.<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a6d4704b8160d88d8a49f76096ee45677">label</a>());</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    m_fixContainerName = <span class="keyword">true</span>;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    mef::FaultTree *<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a4b0937931be261ac68e45aee3062daf9">faultTree</a> = getFaultTree(origin);</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keywordflow">if</span> (faultTree)</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        containerFaultTreeName-&gt;setText(</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            QString::fromStdString(faultTree-&gt;name()));</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="keyword">static_cast&lt;</span>QListView *<span class="keyword">&gt;</span>(typeBox-&gt;view())</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            -&gt;setRowHidden(ext::one_bit_index(Gate), <span class="keyword">true</span>);<span class="comment"></span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">    /// @todo Allow type change w/ new fault tree creation.</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment"></span>}</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1EventDialog.xhtml#a355f7af9b2cef48f4e52ffc4a44cb020">  264</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">EventDialog::setupData</a>(<span class="keyword">const</span> <a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">model::HouseEvent</a> &amp;element)</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;{</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">setupData</a>(element, element.<a class="code" href="classscram_1_1gui_1_1model_1_1Proxy.xhtml#a9302e19d5f845a33bdc31e13b09731c4">data</a>());</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    typeBox-&gt;setCurrentIndex(ext::one_bit_index(HouseEvent));</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    stateBox-&gt;setCurrentIndex(element.<a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml#a5d7cf6bceaeb71186648ee0e30bb9710">state</a>());</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;}</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1EventDialog.xhtml#a69b4f2ab718abc1d3ba4d79c5688378a">  271</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">EventDialog::setupData</a>(<span class="keyword">const</span> <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">model::BasicEvent</a> &amp;element)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;{</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">setupData</a>(element, element.<a class="code" href="classscram_1_1gui_1_1model_1_1Proxy.xhtml#a9302e19d5f845a33bdc31e13b09731c4">data</a>());</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    typeBox-&gt;setCurrentIndex(ext::one_bit_index(BasicEvent) + element.<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a827dd95218bb3eece34e5777d487a590">flavor</a>());</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="keyword">const</span> mef::BasicEvent &amp;basicEvent = *element.<a class="code" href="classscram_1_1gui_1_1model_1_1Proxy.xhtml#a9302e19d5f845a33bdc31e13b09731c4">data</a>();</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">if</span> (basicEvent.HasExpression()) {</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        expressionBox-&gt;setChecked(<span class="keyword">true</span>);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">if</span> (<span class="keyword">auto</span> *constExpr = dynamic_cast&lt;mef::ConstantExpression *&gt;(</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                &amp;basicEvent.expression())) {</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            expressionType-&gt;setCurrentIndex(0);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            constantValue-&gt;setText(QString::number(constExpr-&gt;value()));</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            <span class="keyword">auto</span> *exponentialExpr =</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                <span class="keyword">dynamic_cast&lt;</span>mef::Exponential *<span class="keyword">&gt;</span>(&amp;basicEvent.expression());</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(exponentialExpr, );</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            expressionType-&gt;setCurrentIndex(1);</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            exponentialRate-&gt;setText(</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                QString::number(exponentialExpr-&gt;args().front()-&gt;value()));</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        }</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        expressionBox-&gt;setChecked(<span class="keyword">false</span>);</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    }</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;}</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">  295</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">EventDialog::setupData</a>(<span class="keyword">const</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">model::Gate</a> &amp;element)</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;{</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">setupData</a>(element, element.<a class="code" href="classscram_1_1gui_1_1model_1_1Proxy.xhtml#a9302e19d5f845a33bdc31e13b09731c4">data</a>());</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    typeBox-&gt;setCurrentIndex(ext::one_bit_index(Gate));</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">    /// @todo Deal with type changes of the top gate.</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment"></span>    <span class="keywordflow">if</span> (getFaultTree(element.<a class="code" href="classscram_1_1gui_1_1model_1_1Proxy.xhtml#a9302e19d5f845a33bdc31e13b09731c4">data</a>())-&gt;top_events().front() == element.<a class="code" href="classscram_1_1gui_1_1model_1_1Proxy.xhtml#a9302e19d5f845a33bdc31e13b09731c4">data</a>()) {</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <span class="keyword">static_cast&lt;</span>QListView *<span class="keyword">&gt;</span>(typeBox-&gt;view())</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            -&gt;setRowHidden(ext::one_bit_index(HouseEvent), <span class="keyword">true</span>);</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="keyword">static_cast&lt;</span>QListView *<span class="keyword">&gt;</span>(typeBox-&gt;view())</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            -&gt;setRowHidden(ext::one_bit_index(BasicEvent), <span class="keyword">true</span>);</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        <span class="keyword">static_cast&lt;</span>QListView *<span class="keyword">&gt;</span>(typeBox-&gt;view())</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;            -&gt;setRowHidden(ext::one_bit_index(Conditional), <span class="keyword">true</span>);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="keyword">static_cast&lt;</span>QListView *<span class="keyword">&gt;</span>(typeBox-&gt;view())</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            -&gt;setRowHidden(ext::one_bit_index(Undeveloped), <span class="keyword">true</span>);</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    }</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    connectiveBox-&gt;setCurrentIndex(element.<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml#af6bdef0f594fd764a96912a4df8eb2f2">type</a>());</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keywordflow">if</span> (element.<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml#af6bdef0f594fd764a96912a4df8eb2f2">type</a>() == mef::kVote)</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        voteNumberBox-&gt;setValue(element.<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml#a2b68382b9c692bac26eb4775ebb366c9">voteNumber</a>());</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> mef::Formula::EventArg &amp;arg : element.<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml#a14671d156e58b060ac84a58410543f64">args</a>())</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        argsList-&gt;addItem(</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            QString::fromStdString(ext::as&lt;const mef::Event *&gt;(arg)-&gt;id()));</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    emit <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#adac635981e288e568e5f46ec8d3185ba">formulaArgsChanged</a>(); <span class="comment">///&lt; @todo Bogus signal order conflicts.</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment"></span>}</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1EventDialog.xhtml#a0fbc46dd72d7473a8682484172bd7b3c">  321</a></span>&#160;std::unique_ptr&lt;mef::Expression&gt; <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a0fbc46dd72d7473a8682484172bd7b3c">EventDialog::expression</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(tabExpression-&gt;isHidden() == <span class="keyword">false</span>, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keywordflow">if</span> (expressionBox-&gt;isChecked() == <span class="keyword">false</span>)</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="keywordflow">switch</span> (stackedWidgetExpressionData-&gt;currentIndex()) {</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keywordflow">case</span> 0:</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(constantValue-&gt;hasAcceptableInput(), <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="keywordflow">return</span> std::make_unique&lt;mef::ConstantExpression&gt;(</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            constantValue-&gt;text().toDouble());</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="keywordflow">case</span> 1: {</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(exponentialRate-&gt;hasAcceptableInput(), <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        std::unique_ptr&lt;mef::Expression&gt; rate(</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;            <span class="keyword">new</span> mef::ConstantExpression(exponentialRate-&gt;text().toDouble()));</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="keyword">auto</span> *rate_arg = rate.get();</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        m_model-&gt;Add(std::move(rate));</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="keywordflow">return</span> std::make_unique&lt;mef::Exponential&gt;(rate_arg,</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                                                  &amp;m_model-&gt;mission_time());</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    }</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;unexpected expression&quot;</span>, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    }</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;}</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1EventDialog.xhtml#a38bf6ffaa2fb4575a8ddeb52a1a953a4">  345</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a38bf6ffaa2fb4575a8ddeb52a1a953a4">EventDialog::validate</a>()</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;{</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    m_errorBar-&gt;clearMessage();</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    emit <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a26ac970b870dc37d46f1fd2ccd3b6f0c">validated</a>(<span class="keyword">false</span>);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <span class="keywordflow">if</span> (nameLine-&gt;hasAcceptableInput() == <span class="keyword">false</span>)</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    QString name = nameLine-&gt;text();</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    nameLine-&gt;setStyleSheet(yellowBackground);</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keywordflow">try</span> {</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        <span class="keywordflow">if</span> (name != m_initName) {</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            m_model-&gt;GetEvent(name.toStdString());</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            m_errorBar-&gt;showMessage(</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                <span class="comment">//: Duplicate event definition in the model.</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                tr(<span class="stringliteral">&quot;The event with name &#39;%1&#39; already exists.&quot;</span>).arg(name));</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        }</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    } <span class="keywordflow">catch</span> (<span class="keyword">const</span> mef::UndefinedElement &amp;) {</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    }</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keywordflow">if</span> (!tabFormula-&gt;isHidden() &amp;&amp; hasFormulaArg(name)) {</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        m_errorBar-&gt;showMessage(</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            tr(<span class="stringliteral">&quot;Name &#39;%1&#39; would introduce a self-cycle.&quot;</span>).arg(name));</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    }</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    nameLine-&gt;setStyleSheet({});</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <span class="keywordflow">if</span> (!tabExpression-&gt;isHidden() &amp;&amp; expressionBox-&gt;isChecked()) {</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        <span class="keywordflow">switch</span> (stackedWidgetExpressionData-&gt;currentIndex()) {</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <span class="keywordflow">case</span> 0:</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            <span class="keywordflow">if</span> (constantValue-&gt;hasAcceptableInput() == <span class="keyword">false</span>)</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <span class="keywordflow">case</span> 1:</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            <span class="keywordflow">if</span> (exponentialRate-&gt;hasAcceptableInput() == <span class="keyword">false</span>)</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;unexpected expression&quot;</span>, );</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        }</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    }</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="keywordflow">if</span> (!tabFormula-&gt;isHidden()) {</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <span class="keywordtype">int</span> numArgs = argsList-&gt;count();</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        <span class="keywordflow">switch</span> (static_cast&lt;mef::Operator&gt;(connectiveBox-&gt;currentIndex())) {</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        <span class="keywordflow">case</span> mef::kNot:</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        <span class="keywordflow">case</span> mef::kNull:</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            <span class="keywordflow">if</span> (numArgs != 1) {</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                m_errorBar-&gt;showMessage(</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                    tr(<span class="stringliteral">&quot;%1 connective requires a single argument.&quot;</span>)</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                        .arg(connectiveBox-&gt;currentText()));</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            }</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <span class="keywordflow">case</span> mef::kAnd:</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        <span class="keywordflow">case</span> mef::kOr:</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        <span class="keywordflow">case</span> mef::kNand:</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        <span class="keywordflow">case</span> mef::kNor:</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            <span class="keywordflow">if</span> (numArgs &lt; 2) {</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                m_errorBar-&gt;showMessage(</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                    tr(<span class="stringliteral">&quot;%1 connective requires 2 or more arguments.&quot;</span>)</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                        .arg(connectiveBox-&gt;currentText()));</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            }</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        <span class="keywordflow">case</span> mef::kXor:</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            <span class="keywordflow">if</span> (numArgs != 2) {</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                m_errorBar-&gt;showMessage(</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                    tr(<span class="stringliteral">&quot;%1 connective requires exactly 2 arguments.&quot;</span>)</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                        .arg(connectiveBox-&gt;currentText()));</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            }</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <span class="keywordflow">case</span> mef::kVote:</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            <span class="keywordflow">if</span> (numArgs &lt;= voteNumberBox-&gt;value()) {</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                <span class="keywordtype">int</span> numReqArgs = voteNumberBox-&gt;value() + 1;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                m_errorBar-&gt;showMessage(</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                    <span class="comment">//: The number of required arguments is always more than 2.</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                    tr(<span class="stringliteral">&quot;%1 connective requires at-least %n arguments.&quot;</span>, <span class="stringliteral">&quot;&quot;</span>,</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                       numReqArgs)</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                        .arg(connectiveBox-&gt;currentText()));</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            }</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;            <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;unexpected connective&quot;</span>, );</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        }</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    }</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    <span class="keywordflow">if</span> (containerFaultTreeName-&gt;isEnabled()) {</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        <span class="keywordflow">if</span> (containerFaultTreeName-&gt;hasAcceptableInput() == <span class="keyword">false</span>)</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(typeBox-&gt;currentIndex() == ext::one_bit_index(Gate), );</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        QString faultTreeName = containerFaultTreeName-&gt;text();</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        <span class="keywordflow">if</span> (<span class="keyword">auto</span> it = ext::find(m_model-&gt;fault_trees(),</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                                faultTreeName.toStdString())) {</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;            <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>((*it)-&gt;top_events().empty() == <span class="keyword">false</span>, );</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            m_errorBar-&gt;showMessage(</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                <span class="comment">//: Fault tree redefinition.</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                tr(<span class="stringliteral">&quot;Fault tree &#39;%1&#39; is already defined with a top gate.&quot;</span>)</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                    .arg(faultTreeName));</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            containerFaultTreeName-&gt;setStyleSheet(yellowBackground);</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        }</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    }</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    emit <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a26ac970b870dc37d46f1fd2ccd3b6f0c">validated</a>(<span class="keyword">true</span>);</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;}</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="keywordtype">void</span> EventDialog::connectLineEdits(std::initializer_list&lt;QLineEdit *&gt; lineEdits)</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;{</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <span class="keywordflow">for</span> (QLineEdit *lineEdit : lineEdits) {</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        lineEdit-&gt;setStyleSheet(redBackground);</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        connect(lineEdit, &amp;QLineEdit::textChanged, [<span class="keyword">this</span>, lineEdit] {</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            <span class="keywordflow">if</span> (lineEdit-&gt;hasAcceptableInput())</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                lineEdit-&gt;setStyleSheet({});</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                lineEdit-&gt;setStyleSheet(redBackground);</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a38bf6ffaa2fb4575a8ddeb52a1a953a4">validate</a>();</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        });</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    }</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;}</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="keywordtype">void</span> EventDialog::stealTopFocus(QLineEdit *lineEdit)</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;{</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <span class="keyword">struct </span>FocusGrabber : <span class="keyword">public</span> QObject</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    {</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        FocusGrabber(QObject *parent, QPushButton *okButton)</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;            : QObject(parent), m_ok(okButton)</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        {</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        }</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        <span class="keywordtype">bool</span> eventFilter(QObject *<span class="keywordtype">object</span>, QEvent *event)<span class="keyword"> override</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;            <span class="keywordflow">if</span> (event-&gt;type() == QEvent::FocusIn) {</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                m_ok-&gt;setDefault(<span class="keyword">false</span>);</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                m_ok-&gt;setAutoDefault(<span class="keyword">false</span>);</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (event-&gt;type() == QEvent::FocusOut) {</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                m_ok-&gt;setDefault(<span class="keyword">true</span>);</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                m_ok-&gt;setAutoDefault(<span class="keyword">true</span>);</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;            }</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;            <span class="keywordflow">return</span> QObject::eventFilter(<span class="keywordtype">object</span>, event);</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        }</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        QPushButton *m_ok;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    };</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    lineEdit-&gt;installEventFilter(</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        <span class="keyword">new</span> FocusGrabber(lineEdit, buttonBox-&gt;button(QDialogButtonBox::Ok)));</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;}</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="keywordtype">void</span> EventDialog::setupArgCompleter()</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="comment">    /// @todo Optimize the completion model.</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="comment"></span>    QStringList allEvents;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    allEvents.reserve(m_model-&gt;gates().size() + m_model-&gt;basic_events().size()</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                      + m_model-&gt;house_events().size());</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    <span class="keyword">auto</span> addEvents = [&amp;allEvents](<span class="keyword">const</span> <span class="keyword">auto</span> &amp;eventContainer) {</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;eventPtr : eventContainer)</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;            allEvents.push_back(QString::fromStdString(eventPtr-&gt;id()));</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    };</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    addEvents(m_model-&gt;gates());</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    addEvents(m_model-&gt;basic_events());</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    addEvents(m_model-&gt;house_events());</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <span class="keyword">auto</span> *completer = <span class="keyword">new</span> QCompleter(std::move(allEvents), <span class="keyword">this</span>);</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    completer-&gt;setCaseSensitivity(Qt::CaseInsensitive);</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    addArgLine-&gt;setCompleter(completer);</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;}</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;} <span class="comment">// namespace scram::gui</span></div><div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml_a14671d156e58b060ac84a58410543f64"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml#a14671d156e58b060ac84a58410543f64">scram::gui::model::Gate::args</a></div><div class="ttdeci">const std::vector&lt; mef::Formula::EventArg &gt; &amp; args() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00377">model.h:377</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">scram::gui::model::BasicEvent</a></div><div class="ttdoc">The proxy to manage mef::BasicEvent. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00179">model.h:179</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a0c144e53e44d5b9524d60698cb356653"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a0c144e53e44d5b9524d60698cb356653">scram::gui::EventDialog::name</a></div><div class="ttdeci">QString name() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00095">eventdialog.h:95</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a3f52697e4e16187eb133aa1d59d249e8"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a3f52697e4e16187eb133aa1d59d249e8">scram::gui::EventDialog::arguments</a></div><div class="ttdeci">std::vector&lt; std::string &gt; arguments() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8cpp_source.xhtml#l00180">eventdialog.cpp:180</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1Validator_xhtml_a5faf89430d1d02672239887e5fe3d0f7"><div class="ttname"><a href="classscram_1_1gui_1_1Validator.xhtml#a5faf89430d1d02672239887e5fe3d0f7">scram::gui::Validator::nonNegative</a></div><div class="ttdeci">static const QValidator * nonNegative()</div><div class="ttdef"><b>Definition:</b> <a href="validator_8cpp_source.xhtml#l00052">validator.cpp:52</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml_a827dd95218bb3eece34e5777d487a590"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a827dd95218bb3eece34e5777d487a590">scram::gui::model::BasicEvent::flavor</a></div><div class="ttdeci">Flavor flavor() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00207">model.h:207</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a38bf6ffaa2fb4575a8ddeb52a1a953a4"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a38bf6ffaa2fb4575a8ddeb52a1a953a4">scram::gui::EventDialog::validate</a></div><div class="ttdeci">void validate()</div><div class="ttdoc">Triggers validation of the current data. </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8cpp_source.xhtml#l00345">eventdialog.cpp:345</a></div></div>
<div class="ttc" id="eventdialog_8h_xhtml"><div class="ttname"><a href="eventdialog_8h.xhtml">eventdialog.h</a></div><div class="ttdoc">Dialog to edit and validate events. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">scram::gui::model::HouseEvent</a></div><div class="ttdoc">The proxy to manage mef::HouseEvent. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00284">model.h:284</a></div></div>
<div class="ttc" id="validator_8h_xhtml"><div class="ttname"><a href="validator_8h.xhtml">validator.h</a></div><div class="ttdoc">Collection of validators. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml_a82e8bcd852ded4bb3c7e30148c0b18c6"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">scram::gui::model::Element::id</a></div><div class="ttdeci">QString id() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00075">model.h:75</a></div></div>
<div class="ttc" id="overload_8h_xhtml"><div class="ttname"><a href="overload_8h.xhtml">overload.h</a></div><div class="ttdoc">Facilities to help with pointers to overloaded functions. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a4b0937931be261ac68e45aee3062daf9"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a4b0937931be261ac68e45aee3062daf9">scram::gui::EventDialog::faultTree</a></div><div class="ttdeci">std::string faultTree() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00119">eventdialog.h:119</a></div></div>
<div class="ttc" id="overload_8h_xhtml_a9b2ccb7e9e0744cd44765f77b05fa93f"><div class="ttname"><a href="overload_8h.xhtml#a9b2ccb7e9e0744cd44765f77b05fa93f">OVERLOAD</a></div><div class="ttdeci">#define OVERLOAD(T, name,...)</div><div class="ttdoc">Helper macro to resolve overloaded signals in Qt 5 style connections. </div><div class="ttdef"><b>Definition:</b> <a href="overload_8h_source.xhtml#l00026">overload.h:26</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_adac635981e288e568e5f46ec8d3185ba"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#adac635981e288e568e5f46ec8d3185ba">scram::gui::EventDialog::formulaArgsChanged</a></div><div class="ttdeci">void formulaArgsChanged()</div><div class="ttdoc">Indicates changes in the list of formula arguments. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_abe5bd4a7b6bca6ddb91656f4bb87f905"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bd4a7b6bca6ddb91656f4bb87f905">scram::gui::EventDialog::EventDialog</a></div><div class="ttdeci">EventDialog(mef::Model *model, QWidget *parent=nullptr)</div><div class="ttdoc">Creates a dialog for the definition of a new event. </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8cpp_source.xhtml#l00047">eventdialog.cpp:47</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1Validator_xhtml_a212add9e7bae0f86c226e7183d8fa04e"><div class="ttname"><a href="classscram_1_1gui_1_1Validator.xhtml#a212add9e7bae0f86c226e7183d8fa04e">scram::gui::Validator::probability</a></div><div class="ttdeci">static const QValidator * probability()</div><div class="ttdef"><b>Definition:</b> <a href="validator_8cpp_source.xhtml#l00046">validator.cpp:46</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml_af6bdef0f594fd764a96912a4df8eb2f2"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml#af6bdef0f594fd764a96912a4df8eb2f2">scram::gui::model::Gate::type</a></div><div class="ttdeci">T type() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00336">model.h:336</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_abe5bf2e13a1fbb54ce0d8c5a03ad3a05"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">scram::gui::EventDialog::setupData</a></div><div class="ttdeci">void setupData(const model::Gate &amp;element)</div><div class="ttdoc">Sets up the dialog with element data. </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8cpp_source.xhtml#l00295">eventdialog.cpp:295</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Proxy_xhtml_a9302e19d5f845a33bdc31e13b09731c4"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Proxy.xhtml#a9302e19d5f845a33bdc31e13b09731c4">scram::gui::model::Proxy::data</a></div><div class="ttdeci">const T * data() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00167">model.h:167</a></div></div>
<div class="ttc" id="guiassert_8h_xhtml"><div class="ttname"><a href="guiassert_8h.xhtml">guiassert.h</a></div><div class="ttdoc">GUI assertions that should not crash the program by default. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a26ac970b870dc37d46f1fd2ccd3b6f0c"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a26ac970b870dc37d46f1fd2ccd3b6f0c">scram::gui::EventDialog::validated</a></div><div class="ttdeci">void validated(bool valid)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml_a2b68382b9c692bac26eb4775ebb366c9"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml#a2b68382b9c692bac26eb4775ebb366c9">scram::gui::model::Gate::voteNumber</a></div><div class="ttdeci">int voteNumber() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00374">model.h:374</a></div></div>
<div class="ttc" id="guiassert_8h_xhtml_ad04e3dce0040cedb9562b05ff3ff58cb"><div class="ttname"><a href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a></div><div class="ttdeci">#define GUI_ASSERT(cond, ret)</div><div class="ttdoc">Assertion that avoids crashing the application. </div><div class="ttdef"><b>Definition:</b> <a href="guiassert_8h_source.xhtml#l00034">guiassert.h:34</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml">scram::gui::model::Element</a></div><div class="ttdoc">The base proxy Element model for mef::Element. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00064">model.h:64</a></div></div>
<div class="ttc" id="namespacescram_1_1gui_xhtml"><div class="ttname"><a href="namespacescram_1_1gui.xhtml">scram::gui</a></div><div class="ttdef"><b>Definition:</b> <a href="align_8h_source.xhtml#l00025">align.h:25</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml_a6d4704b8160d88d8a49f76096ee45677"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml#a6d4704b8160d88d8a49f76096ee45677">scram::gui::model::Element::label</a></div><div class="ttdeci">QString label() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00078">model.h:78</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1Validator_xhtml_ade5c7bef2410bb4bc6bb05d88ee99793"><div class="ttname"><a href="classscram_1_1gui_1_1Validator.xhtml#ade5c7bef2410bb4bc6bb05d88ee99793">scram::gui::Validator::name</a></div><div class="ttdeci">static const QValidator * name()</div><div class="ttdef"><b>Definition:</b> <a href="validator_8cpp_source.xhtml#l00031">validator.cpp:31</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml">scram::gui::EventDialog</a></div><div class="ttdoc">The Dialog to create, present, and manipulate event data. </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00054">eventdialog.h:54</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a0fbc46dd72d7473a8682484172bd7b3c"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a0fbc46dd72d7473a8682484172bd7b3c">scram::gui::EventDialog::expression</a></div><div class="ttdeci">std::unique_ptr&lt; mef::Expression &gt; expression() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8cpp_source.xhtml#l00321">eventdialog.cpp:321</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEvent_xhtml_a5d7cf6bceaeb71186648ee0e30bb9710"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml#a5d7cf6bceaeb71186648ee0e30bb9710">scram::gui::model::HouseEvent::state</a></div><div class="ttdeci">T state() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00294">model.h:294</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml">scram::gui::model::Gate</a></div><div class="ttdoc">The proxy to manage mef::Gate. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00326">model.h:326</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:46 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
