<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>elementcontainermodel.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_11bc0974ce736ce9a6fadebbeb7a8314.xhtml">gui</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">elementcontainermodel.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="elementcontainermodel_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2017-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="elementcontainermodel_8h.xhtml">elementcontainermodel.h</a>&quot;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &quot;src/event.h&quot;</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;src/ext/variant.h&quot;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;src/model.h&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="align_8h.xhtml">align.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="guiassert_8h.xhtml">guiassert.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="overload_8h.xhtml">overload.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram_1_1gui_1_1model.xhtml">scram::gui::model</a> {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a9e0c117f40f7d5c87957ae2539b6b4c5">   33</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a9e0c117f40f7d5c87957ae2539b6b4c5">ElementContainerModel::ElementContainerModel</a>(<span class="keyword">const</span> T &amp;container, <a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">Model</a> *model,</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                                             QObject *parent)</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    : QAbstractItemModel(parent)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    m_elements.reserve(container.size());</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    m_elementToIndex.reserve(container.size());</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;elementPtr : container) {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        m_elementToIndex.emplace(elementPtr.get(), m_elements.size());</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        m_elements.push_back(elementPtr.get());</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    }</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">using</span> E = <span class="keyword">typename</span> T::value_type::element_type;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    connect(model, <a class="code" href="overload_8h.xhtml#a9b2ccb7e9e0744cd44765f77b05fa93f">OVERLOAD</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">Model</a>, added, E *), <span class="keyword">this</span>,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            &amp;ElementContainerModel::addElement);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    connect(model, <a class="code" href="overload_8h.xhtml#a9b2ccb7e9e0744cd44765f77b05fa93f">OVERLOAD</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">Model</a>, removed, E *), <span class="keyword">this</span>,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            &amp;ElementContainerModel::removeElement);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a48973e3c3eb7a5323cf73c30f484d861">   50</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a48973e3c3eb7a5323cf73c30f484d861">ElementContainerModel::connectElement</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element)</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    connect(element, &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a4c7055b012fe4fdd5772acd7c9d6c58d">Element::labelChanged</a>, <span class="keyword">this</span>, [<span class="keyword">this</span>, element] {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        QModelIndex <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a> =</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            createIndex(<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a057325384c34e69a890a8a409dea2d09">getElementIndex</a>(element), columnCount() - 1, element);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        emit dataChanged(index, index);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    });</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    connect(element, &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#ad3a0378c2f765705286b393613606337">Element::idChanged</a>, <span class="keyword">this</span>, [<span class="keyword">this</span>, element] {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        QModelIndex <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a> = createIndex(<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a057325384c34e69a890a8a409dea2d09">getElementIndex</a>(element), 0, element);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        emit dataChanged(index, index);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    });</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;}</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">   63</a></span>&#160;QModelIndex <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">ElementContainerModel::index</a>(<span class="keywordtype">int</span> row, <span class="keywordtype">int</span> column,</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                         <span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(parent.isValid() == <span class="keyword">false</span>, {});</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">return</span> createIndex(row, column, <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a9aee454164cf6db9962bd29e367c9082">getElement</a>(row));</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a9aee454164cf6db9962bd29e367c9082">   70</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a9aee454164cf6db9962bd29e367c9082">ElementContainerModel::getElement</a>(<span class="keywordtype">int</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(index &lt; m_elements.size(), <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordflow">return</span> m_elements[<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a>];</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a057325384c34e69a890a8a409dea2d09">   76</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a057325384c34e69a890a8a409dea2d09">ElementContainerModel::getElementIndex</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element)<span class="keyword"> const</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keyword">auto</span> it = m_elementToIndex.find(element);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(it != m_elementToIndex.end(), -1);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">return</span> it-&gt;second;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordtype">void</span> ElementContainerModel::addElement(<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;{</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a> = m_elements.size();</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    beginInsertRows({}, <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a>, <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a>);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    m_elementToIndex.emplace(element, index);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    m_elements.push_back(element);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    endInsertRows();</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a48973e3c3eb7a5323cf73c30f484d861">connectElement</a>(element);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keywordtype">void</span> ElementContainerModel::removeElement(<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element)</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;{</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(m_elementToIndex.count(element), );</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a> = m_elementToIndex.find(element)-&gt;second;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">int</span> lastIndex = m_elements.size() - 1;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keyword">auto</span> *lastElement = m_elements.back();</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="comment">// The following is basically a swap with the last item.</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    beginRemoveRows({}, lastIndex, lastIndex);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    m_elementToIndex.erase(element);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    m_elements.pop_back();</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    endRemoveRows();</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">if</span> (index != lastIndex) {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        m_elements[<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a>] = lastElement;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        m_elementToIndex[lastElement] = <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a>;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        emit dataChanged(createIndex(index, 0, lastElement),</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                         createIndex(index, columnCount() - 1, lastElement));</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    disconnect(element, 0, <span class="keyword">this</span>, 0);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab74b484ca12e28fb5346332c16a9c9f1">  113</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab74b484ca12e28fb5346332c16a9c9f1">ElementContainerModel::rowCount</a>(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">return</span> parent.isValid() ? 0 : m_elements.size();</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;}</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml#a64a95b2368b017f25fc06fd78d0a7f33">  118</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml#a64a95b2368b017f25fc06fd78d0a7f33">BasicEventContainerModel::BasicEventContainerModel</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">Model</a> *model,</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                                                   QObject *<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a>)</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    : <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml">ElementContainerModel</a>(model-&gt;basicEvents(), model, parent)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;{</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordflow">for</span> (<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element : <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#af97ae0b24134a7c2fd8da6e2fdd3b042">elements</a>())</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        connectElement(element);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml#afe73eab2b3248125203edd7afc37107b">  126</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml#afe73eab2b3248125203edd7afc37107b">BasicEventContainerModel::columnCount</a>(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">return</span> parent.isValid() ? 0 : 4;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;}</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml#a46d88af34f0854d4255fd56bc21e26a4">  131</a></span>&#160;QVariant <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml#a46d88af34f0854d4255fd56bc21e26a4">BasicEventContainerModel::headerData</a>(<span class="keywordtype">int</span> section,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                              Qt::Orientation orientation,</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                                              <span class="keywordtype">int</span> role)<span class="keyword"> const</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">if</span> (role == Qt::InitialSortOrderRole &amp;&amp; section == 2)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">return</span> Qt::DescendingOrder;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordflow">if</span> (role != Qt::DisplayRole || orientation != Qt::Horizontal)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keywordflow">return</span> ElementContainerModel::headerData(section, orientation, role);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">switch</span> (section) {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">case</span> 0:</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">return</span> tr(<span class="stringliteral">&quot;ID&quot;</span>);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordflow">case</span> 1:</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="comment">//: The flavor type of a basic event.</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordflow">return</span> tr(<span class="stringliteral">&quot;Flavor&quot;</span>);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">case</span> 2:</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="comment">//: In PRA context, probability may be unavailability or unreliability.</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordflow">return</span> tr(<span class="stringliteral">&quot;Probability&quot;</span>);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">case</span> 3:</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">return</span> tr(<span class="stringliteral">&quot;Label&quot;</span>);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;unexpected header section&quot;</span>, {});</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml#a44a7b2e19f453595a7b6650d5273b2db">  155</a></span>&#160;QVariant <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml#a44a7b2e19f453595a7b6650d5273b2db">BasicEventContainerModel::data</a>(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a>,</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                        <span class="keywordtype">int</span> role)<span class="keyword"> const</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">if</span> (!index.isValid())</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordflow">return</span> {};</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordflow">if</span> (role == Qt::TextAlignmentRole &amp;&amp; index.column() == 2)</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="align_8h.xhtml#a43fbaeba49dc611bd956b2b4f2ae281d">ALIGN_NUMBER_IN_TABLE</a>;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordflow">if</span> (role == Qt::UserRole)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keywordflow">return</span> QVariant::fromValue(index.internalPointer());</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordflow">if</span> (role != Qt::DisplayRole)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">return</span> {};</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keyword">auto</span> *basicEvent = <span class="keyword">static_cast&lt;</span><a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">BasicEvent</a> *<span class="keyword">&gt;</span>(index.internalPointer());</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordflow">switch</span> (index.column()) {</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">case</span> 0:</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">return</span> basicEvent-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">id</a>();</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">case</span> 1:</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#aea601a1adce8e1fcfe4a43db4b370077">BasicEvent::flavorToString</a>(basicEvent-&gt;flavor());</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">case</span> 2:</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="keywordflow">return</span> basicEvent-&gt;probability&lt;QVariant&gt;();</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">case</span> 3:</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">return</span> basicEvent-&gt;label();</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    }</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;unexpected column&quot;</span>, {});</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;}</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keywordtype">void</span> BasicEventContainerModel::connectElement(<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a48973e3c3eb7a5323cf73c30f484d861">ElementContainerModel::connectElement</a>(element);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    connect(static_cast&lt;BasicEvent *&gt;(element), &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a29411ec728e7b00fec19dd7170adfe5d">BasicEvent::flavorChanged</a>,</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <span class="keyword">this</span>, [<span class="keyword">this</span>, element] {</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                QModelIndex <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a> =</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                    createIndex(<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a057325384c34e69a890a8a409dea2d09">getElementIndex</a>(element), 1, element);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                emit dataChanged(index, index);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            });</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    connect(static_cast&lt;BasicEvent *&gt;(element), &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a6fe50c483f03f09c44e12336769c2517">BasicEvent::expressionChanged</a>,</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <span class="keyword">this</span>, [<span class="keyword">this</span>, element] {</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                QModelIndex <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a> =</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                    createIndex(<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a057325384c34e69a890a8a409dea2d09">getElementIndex</a>(element), 2, element);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                emit dataChanged(index, index);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            });</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;}</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml#a1687ef3e47c335b5b3a52e21ba0e7dd2">  199</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml#a1687ef3e47c335b5b3a52e21ba0e7dd2">HouseEventContainerModel::HouseEventContainerModel</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">Model</a> *model,</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                                                   QObject *<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a>)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    : <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml">ElementContainerModel</a>(model-&gt;houseEvents(), model, parent)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;{</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordflow">for</span> (<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element : <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#af97ae0b24134a7c2fd8da6e2fdd3b042">elements</a>())</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        connectElement(element);</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;}</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml#a8237b3f4a73b060056871561d92275ba">  207</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml#a8237b3f4a73b060056871561d92275ba">HouseEventContainerModel::columnCount</a>(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keywordflow">return</span> parent.isValid() ? 0 : 3;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;}</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml#a82eaf7ab02b9062ae84a12f7d359ae14">  212</a></span>&#160;QVariant <a class="code" href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml#a82eaf7ab02b9062ae84a12f7d359ae14">HouseEventContainerModel::headerData</a>(<span class="keywordtype">int</span> section,</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                                              Qt::Orientation orientation,</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                              <span class="keywordtype">int</span> role)<span class="keyword"> const</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordflow">if</span> (role != Qt::DisplayRole || orientation != Qt::Horizontal)</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keywordflow">return</span> ElementContainerModel::headerData(section, orientation, role);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keywordflow">switch</span> (section) {</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordflow">case</span> 0:</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">return</span> tr(<span class="stringliteral">&quot;ID&quot;</span>);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="keywordflow">case</span> 1:</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="comment">//: House event Boolean state.</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="keywordflow">return</span> tr(<span class="stringliteral">&quot;State&quot;</span>);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keywordflow">case</span> 2:</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keywordflow">return</span> tr(<span class="stringliteral">&quot;Label&quot;</span>);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    }</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;unexpected header section&quot;</span>, {});</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;}</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml#aa112416a8c25d3cf8f3c4e0fdcbdc069">  231</a></span>&#160;QVariant <a class="code" href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml#aa112416a8c25d3cf8f3c4e0fdcbdc069">HouseEventContainerModel::data</a>(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a>,</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                                        <span class="keywordtype">int</span> role)<span class="keyword"> const</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keywordflow">if</span> (!index.isValid())</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">return</span> {};</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keywordflow">if</span> (role == Qt::UserRole)</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keywordflow">return</span> QVariant::fromValue(index.internalPointer());</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keywordflow">if</span> (role != Qt::DisplayRole)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="keywordflow">return</span> {};</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keyword">auto</span> *houseEvent = <span class="keyword">static_cast&lt;</span><a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">HouseEvent</a> *<span class="keyword">&gt;</span>(index.internalPointer());</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="keywordflow">switch</span> (index.column()) {</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keywordflow">case</span> 0:</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keywordflow">return</span> houseEvent-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">id</a>();</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordflow">case</span> 1:</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keywordflow">return</span> houseEvent-&gt;state&lt;QString&gt;();</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="keywordflow">case</span> 2:</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="keywordflow">return</span> houseEvent-&gt;label();</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    }</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;unexpected column&quot;</span>, {});</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;}</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keywordtype">void</span> HouseEventContainerModel::connectElement(<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element)</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;{</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a48973e3c3eb7a5323cf73c30f484d861">ElementContainerModel::connectElement</a>(element);</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    connect(static_cast&lt;HouseEvent *&gt;(element), &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml#ab35bc38c6b921e382161efcd39fe5c7c">HouseEvent::stateChanged</a>, <span class="keyword">this</span>,</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            [<span class="keyword">this</span>, element] {</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                QModelIndex <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a> =</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                    createIndex(<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a057325384c34e69a890a8a409dea2d09">getElementIndex</a>(element), 1, element);</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                emit dataChanged(index, index);</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            });</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;}</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a9cdee9017df030e4b41b29d5d8b895c9">  265</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a9cdee9017df030e4b41b29d5d8b895c9">GateContainerModel::GateContainerModel</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">Model</a> *model, QObject *<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a>)</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    : <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml">ElementContainerModel</a>(model-&gt;gates(), model, parent)</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;{</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordflow">for</span> (<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element : <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#af97ae0b24134a7c2fd8da6e2fdd3b042">elements</a>())</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        connectElement(element);</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;}</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keywordtype">void</span> GateContainerModel::connectElement(<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element)</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;{</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a48973e3c3eb7a5323cf73c30f484d861">ElementContainerModel::connectElement</a>(element);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    connect(static_cast&lt;Gate *&gt;(element), &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml#ab406e6af426132143c0d8d08c1fec19b">Gate::formulaChanged</a>, <span class="keyword">this</span>,</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            [<span class="keyword">this</span>, element] {</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                <span class="keywordtype">int</span> row = <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a057325384c34e69a890a8a409dea2d09">getElementIndex</a>(element);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                emit dataChanged(createIndex(row, 1, element),</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                                 createIndex(row, 2, element));<span class="comment"></span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">                /// @todo Track gate formula changes more precisely.</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment"></span>                beginResetModel();</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                endResetModel();</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            });</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;}</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a58083bc206699f49adcc9c0ed7fc6500">  286</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a58083bc206699f49adcc9c0ed7fc6500">GateContainerModel::columnCount</a>(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#af26e5332d8f7a5df266b95aa965c147f">parent</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="keywordflow">if</span> (!parent.isValid())</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="keywordflow">return</span> 4;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="keywordflow">if</span> (parent.parent().isValid())</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="keywordflow">if</span> (parent.column() == 0)</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="keywordflow">return</span> 1;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;}</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#abb0b4b700dcc8c68473073f9ca6b543c">  297</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#abb0b4b700dcc8c68473073f9ca6b543c">GateContainerModel::rowCount</a>(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#af26e5332d8f7a5df266b95aa965c147f">parent</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keywordflow">if</span> (!parent.isValid())</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab74b484ca12e28fb5346332c16a9c9f1">ElementContainerModel::rowCount</a>(parent);</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="keywordflow">if</span> (parent.parent().isValid())</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keywordflow">if</span> (parent.column() == 0)</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="keywordflow">return</span> static_cast&lt;Gate *&gt;(parent.internalPointer())-&gt;numArgs();</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;}</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a6061c63e9a92327088cd1b0767a7c2ae">  308</a></span>&#160;QModelIndex <a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a6061c63e9a92327088cd1b0767a7c2ae">GateContainerModel::index</a>(<span class="keywordtype">int</span> row, <span class="keywordtype">int</span> column,</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                                      <span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#af26e5332d8f7a5df266b95aa965c147f">parent</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keywordflow">if</span> (!parent.isValid())</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">ElementContainerModel::index</a>(row, column, parent);</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(parent.parent().isValid() == <span class="keyword">false</span>, {});</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="keyword">auto</span> value = <span class="keyword">reinterpret_cast&lt;</span>std::uintptr_t<span class="keyword">&gt;</span>(parent.internalPointer());</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(value &amp;&amp; !(value &amp; m_parentMask), {});</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keywordflow">return</span> createIndex(row, column,</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                       reinterpret_cast&lt;void *&gt;(value | m_parentMask));</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;}</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#af26e5332d8f7a5df266b95aa965c147f">  322</a></span>&#160;QModelIndex <a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#af26e5332d8f7a5df266b95aa965c147f">GateContainerModel::parent</a>(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a6061c63e9a92327088cd1b0767a7c2ae">index</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(index.isValid(), {});</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="keyword">auto</span> value = <span class="keyword">reinterpret_cast&lt;</span>std::uintptr_t<span class="keyword">&gt;</span>(index.internalPointer());</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(value, {});</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keywordflow">if</span> (value &amp; m_parentMask) {</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="keyword">auto</span> *<a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#af26e5332d8f7a5df266b95aa965c147f">parent</a> = <span class="keyword">reinterpret_cast&lt;</span><a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">Gate</a> *<span class="keyword">&gt;</span>(value &amp; ~m_parentMask);</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="keywordflow">return</span> createIndex(<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a057325384c34e69a890a8a409dea2d09">getElementIndex</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#af26e5332d8f7a5df266b95aa965c147f">parent</a>), 0, <a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#af26e5332d8f7a5df266b95aa965c147f">parent</a>);</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    }</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="keywordflow">return</span> {};</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;}</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#ab1b56ac5d6551554c25ebace2d33613d">  334</a></span>&#160;QVariant <a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#ab1b56ac5d6551554c25ebace2d33613d">GateContainerModel::headerData</a>(<span class="keywordtype">int</span> section,</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                                        Qt::Orientation orientation,</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                                        <span class="keywordtype">int</span> role)<span class="keyword"> const</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="keywordflow">if</span> (role != Qt::DisplayRole || orientation != Qt::Horizontal)</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        <span class="keywordflow">return</span> ElementContainerModel::headerData(section, orientation, role);</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="keywordflow">switch</span> (section) {</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="keywordflow">case</span> 0:</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <span class="keywordflow">return</span> tr(<span class="stringliteral">&quot;ID&quot;</span>);</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <span class="keywordflow">case</span> 1:</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        <span class="comment">//: Boolean operator of the Boolean formula.</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        <span class="keywordflow">return</span> tr(<span class="stringliteral">&quot;Connective&quot;</span>);</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="keywordflow">case</span> 2:</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <span class="comment">//: The number of arguments in the Boolean formula.</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        <span class="keywordflow">return</span> tr(<span class="stringliteral">&quot;Args&quot;</span>);</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <span class="keywordflow">case</span> 3:</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <span class="keywordflow">return</span> tr(<span class="stringliteral">&quot;Label&quot;</span>);</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    }</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;unexpected header section&quot;</span>, {});</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;}</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a191036bcdd39eae7889c99ac42208fd6">  356</a></span>&#160;QVariant <a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a191036bcdd39eae7889c99ac42208fd6">GateContainerModel::data</a>(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a6061c63e9a92327088cd1b0767a7c2ae">index</a>, <span class="keywordtype">int</span> role)<span class="keyword"> const</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keywordflow">if</span> (!index.isValid())</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        <span class="keywordflow">return</span> {};</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keyword">auto</span> value = <span class="keyword">reinterpret_cast&lt;</span>std::uintptr_t<span class="keyword">&gt;</span>(index.internalPointer());</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keywordflow">if</span> (role == Qt::UserRole) {</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        <span class="keywordflow">return</span> QVariant::fromValue(</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            value &amp; m_parentMask ? <span class="keyword">nullptr</span> : index.internalPointer());</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    }</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keywordflow">if</span> (role != Qt::DisplayRole)</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        <span class="keywordflow">return</span> {};</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="keywordflow">if</span> (value &amp; m_parentMask) {</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        <span class="keyword">auto</span> *<a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#af26e5332d8f7a5df266b95aa965c147f">parent</a> = <span class="keyword">reinterpret_cast&lt;</span><a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">Gate</a> *<span class="keyword">&gt;</span>(value &amp; ~m_parentMask);</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        <span class="keywordflow">return</span> QString::fromStdString(</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            ext::as&lt;const mef::Event *&gt;(<a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#af26e5332d8f7a5df266b95aa965c147f">parent</a>-&gt;args().at(index.row()))-&gt;id());</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    }</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="keyword">auto</span> *gate = <span class="keyword">static_cast&lt;</span><a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">Gate</a> *<span class="keyword">&gt;</span>(index.internalPointer());</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="keywordflow">switch</span> (index.column()) {</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <span class="keywordflow">case</span> 0:</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <span class="keywordflow">return</span> gate-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">id</a>();</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="keywordflow">case</span> 1:</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        <span class="keywordflow">return</span> gate-&gt;type&lt;QString&gt;();</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="keywordflow">case</span> 2:</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <span class="keywordflow">return</span> gate-&gt;numArgs();</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="keywordflow">case</span> 3:</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        <span class="keywordflow">return</span> gate-&gt;label();</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    }</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;unexpected column&quot;</span>, {});</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;}</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1GateSortFilterProxyModel.xhtml#a1c439514ac73ddc749c64af93d5ecb7a">  389</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classscram_1_1gui_1_1model_1_1GateSortFilterProxyModel.xhtml#a1c439514ac73ddc749c64af93d5ecb7a">GateSortFilterProxyModel::filterAcceptsRow</a>(<span class="keywordtype">int</span> row,</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                                                <span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#af26e5332d8f7a5df266b95aa965c147f">parent</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="keywordflow">if</span> (parent.isValid())</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <span class="keywordflow">return</span> QSortFilterProxyModel::filterAcceptsRow(row, parent);</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;}</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1GateSortFilterProxyModel.xhtml#abb441445058b9653865646810ca7cdfc">  397</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classscram_1_1gui_1_1model_1_1GateSortFilterProxyModel.xhtml#abb441445058b9653865646810ca7cdfc">GateSortFilterProxyModel::lessThan</a>(<span class="keyword">const</span> QModelIndex &amp;lhs,</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                                        <span class="keyword">const</span> QModelIndex &amp;rhs)<span class="keyword"> const</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="keywordflow">if</span> (lhs.parent().isValid())</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>; <span class="comment">// Don&#39;t sort arguments.</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="keywordflow">return</span> QSortFilterProxyModel::lessThan(lhs, rhs);</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;}</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;} <span class="comment">// namespace scram::gui::model</span></div><div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEventContainerModel_xhtml_afe73eab2b3248125203edd7afc37107b"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml#afe73eab2b3248125203edd7afc37107b">scram::gui::model::BasicEventContainerModel::columnCount</a></div><div class="ttdeci">int columnCount(const QModelIndex &amp;parent) const override</div><div class="ttdoc">Required standard member functions of QAbstractItemModel interface. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00126">elementcontainermodel.cpp:126</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1GateContainerModel_xhtml_ab1b56ac5d6551554c25ebace2d33613d"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#ab1b56ac5d6551554c25ebace2d33613d">scram::gui::model::GateContainerModel::headerData</a></div><div class="ttdeci">QVariant headerData(int section, Qt::Orientation orientation, int role) const override</div><div class="ttdoc">The index for children embeds the parent information into the data. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00334">elementcontainermodel.cpp:334</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">scram::gui::model::BasicEvent</a></div><div class="ttdoc">The proxy to manage mef::BasicEvent. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00179">model.h:179</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEventContainerModel_xhtml_a64a95b2368b017f25fc06fd78d0a7f33"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml#a64a95b2368b017f25fc06fd78d0a7f33">scram::gui::model::BasicEventContainerModel::BasicEventContainerModel</a></div><div class="ttdeci">BasicEventContainerModel(Model *model, QObject *parent=nullptr)</div><div class="ttdoc">Constructs from the table of proxy Basic Events in the Model. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00118">elementcontainermodel.cpp:118</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1GateSortFilterProxyModel_xhtml_a1c439514ac73ddc749c64af93d5ecb7a"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1GateSortFilterProxyModel.xhtml#a1c439514ac73ddc749c64af93d5ecb7a">scram::gui::model::GateSortFilterProxyModel::filterAcceptsRow</a></div><div class="ttdeci">bool filterAcceptsRow(int row, const QModelIndex &amp;parent) const override</div><div class="ttdoc">Accepts only top elements for sorting and filtering. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00389">elementcontainermodel.cpp:389</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEvent_xhtml_ab35bc38c6b921e382161efcd39fe5c7c"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml#ab35bc38c6b921e382161efcd39fe5c7c">scram::gui::model::HouseEvent::stateChanged</a></div><div class="ttdeci">void stateChanged(bool value)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEventContainerModel_xhtml_a8237b3f4a73b060056871561d92275ba"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml#a8237b3f4a73b060056871561d92275ba">scram::gui::model::HouseEventContainerModel::columnCount</a></div><div class="ttdeci">int columnCount(const QModelIndex &amp;parent) const override</div><div class="ttdoc">Required standard member functions of QAbstractItemModel interface. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00207">elementcontainermodel.cpp:207</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEventContainerModel_xhtml_a46d88af34f0854d4255fd56bc21e26a4"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml#a46d88af34f0854d4255fd56bc21e26a4">scram::gui::model::BasicEventContainerModel::headerData</a></div><div class="ttdeci">QVariant headerData(int section, Qt::Orientation orientation, int role) const override</div><div class="ttdoc">Required standard member functions of QAbstractItemModel interface. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00131">elementcontainermodel.cpp:131</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml_ad3a0378c2f765705286b393613606337"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml#ad3a0378c2f765705286b393613606337">scram::gui::model::Element::idChanged</a></div><div class="ttdeci">void idChanged(const QString &amp;id)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEventContainerModel_xhtml_a82eaf7ab02b9062ae84a12f7d359ae14"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml#a82eaf7ab02b9062ae84a12f7d359ae14">scram::gui::model::HouseEventContainerModel::headerData</a></div><div class="ttdeci">QVariant headerData(int section, Qt::Orientation orientation, int role) const override</div><div class="ttdoc">Required standard member functions of QAbstractItemModel interface. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00212">elementcontainermodel.cpp:212</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml_af97ae0b24134a7c2fd8da6e2fdd3b042"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#af97ae0b24134a7c2fd8da6e2fdd3b042">scram::gui::model::ElementContainerModel::elements</a></div><div class="ttdeci">const std::vector&lt; Element * &gt; &amp; elements() const </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00084">elementcontainermodel.h:84</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">scram::gui::model::HouseEvent</a></div><div class="ttdoc">The proxy to manage mef::HouseEvent. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00284">model.h:284</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEventContainerModel_xhtml_a44a7b2e19f453595a7b6650d5273b2db"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml#a44a7b2e19f453595a7b6650d5273b2db">scram::gui::model::BasicEventContainerModel::data</a></div><div class="ttdeci">QVariant data(const QModelIndex &amp;index, int role) const override</div><div class="ttdoc">Required standard member functions of QAbstractItemModel interface. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00155">elementcontainermodel.cpp:155</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1GateContainerModel_xhtml_abb0b4b700dcc8c68473073f9ca6b543c"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#abb0b4b700dcc8c68473073f9ca6b543c">scram::gui::model::GateContainerModel::rowCount</a></div><div class="ttdeci">int rowCount(const QModelIndex &amp;parent) const override</div><div class="ttdoc">The index for children embeds the parent information into the data. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00297">elementcontainermodel.cpp:297</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1GateContainerModel_xhtml_a6061c63e9a92327088cd1b0767a7c2ae"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a6061c63e9a92327088cd1b0767a7c2ae">scram::gui::model::GateContainerModel::index</a></div><div class="ttdeci">QModelIndex index(int row, int column, const QModelIndex &amp;parent) const override</div><div class="ttdoc">The index for children embeds the parent information into the data. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00308">elementcontainermodel.cpp:308</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml_a29411ec728e7b00fec19dd7170adfe5d"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a29411ec728e7b00fec19dd7170adfe5d">scram::gui::model::BasicEvent::flavorChanged</a></div><div class="ttdeci">void flavorChanged(Flavor flavor)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEventContainerModel_xhtml_aa112416a8c25d3cf8f3c4e0fdcbdc069"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml#aa112416a8c25d3cf8f3c4e0fdcbdc069">scram::gui::model::HouseEventContainerModel::data</a></div><div class="ttdeci">QVariant data(const QModelIndex &amp;index, int role) const override</div><div class="ttdoc">Required standard member functions of QAbstractItemModel interface. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00231">elementcontainermodel.cpp:231</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml_a82e8bcd852ded4bb3c7e30148c0b18c6"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">scram::gui::model::Element::id</a></div><div class="ttdeci">QString id() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00075">model.h:75</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml_a4c7055b012fe4fdd5772acd7c9d6c58d"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml#a4c7055b012fe4fdd5772acd7c9d6c58d">scram::gui::model::Element::labelChanged</a></div><div class="ttdeci">void labelChanged(const QString &amp;label)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml_aea601a1adce8e1fcfe4a43db4b370077"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#aea601a1adce8e1fcfe4a43db4b370077">scram::gui::model::BasicEvent::flavorToString</a></div><div class="ttdeci">static QString flavorToString(Flavor flavor)</div><div class="ttdoc">Converts a basic event flavor to a UI string. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00188">model.h:188</a></div></div>
<div class="ttc" id="elementcontainermodel_8h_xhtml"><div class="ttname"><a href="elementcontainermodel_8h.xhtml">elementcontainermodel.h</a></div><div class="ttdoc">The table model for elements. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml_a057325384c34e69a890a8a409dea2d09"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a057325384c34e69a890a8a409dea2d09">scram::gui::model::ElementContainerModel::getElementIndex</a></div><div class="ttdeci">int getElementIndex(Element *element) const </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00076">elementcontainermodel.cpp:76</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEventContainerModel_xhtml_a1687ef3e47c335b5b3a52e21ba0e7dd2"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml#a1687ef3e47c335b5b3a52e21ba0e7dd2">scram::gui::model::HouseEventContainerModel::HouseEventContainerModel</a></div><div class="ttdeci">HouseEventContainerModel(Model *model, QObject *parent=nullptr)</div><div class="ttdoc">Constructs from the table of proxy House Events in the Model. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00199">elementcontainermodel.cpp:199</a></div></div>
<div class="ttc" id="overload_8h_xhtml"><div class="ttname"><a href="overload_8h.xhtml">overload.h</a></div><div class="ttdoc">Facilities to help with pointers to overloaded functions. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml_a6fe50c483f03f09c44e12336769c2517"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a6fe50c483f03f09c44e12336769c2517">scram::gui::model::BasicEvent::expressionChanged</a></div><div class="ttdeci">void expressionChanged(mef::Expression *expression)</div></div>
<div class="ttc" id="align_8h_xhtml_a43fbaeba49dc611bd956b2b4f2ae281d"><div class="ttname"><a href="align_8h.xhtml#a43fbaeba49dc611bd956b2b4f2ae281d">scram::gui::ALIGN_NUMBER_IN_TABLE</a></div><div class="ttdeci">const int ALIGN_NUMBER_IN_TABLE</div><div class="ttdoc">Default alignment of numerical values in tables. </div><div class="ttdef"><b>Definition:</b> <a href="align_8h_source.xhtml#l00028">align.h:28</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml_a18aa736cabfb5651e6c90330e9046241"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">scram::gui::model::ElementContainerModel::index</a></div><div class="ttdeci">QModelIndex index(int row, int column, const QModelIndex &amp;parent) const override</div><div class="ttdoc">Puts the element pointer into the index&amp;#39;s internal pointer. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00063">elementcontainermodel.cpp:63</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml">scram::gui::model::ElementContainerModel</a></div><div class="ttdoc">The base class for models to list elements in a table. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00042">elementcontainermodel.h:42</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml_ab74b484ca12e28fb5346332c16a9c9f1"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab74b484ca12e28fb5346332c16a9c9f1">scram::gui::model::ElementContainerModel::rowCount</a></div><div class="ttdeci">int rowCount(const QModelIndex &amp;parent) const override</div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00113">elementcontainermodel.cpp:113</a></div></div>
<div class="ttc" id="overload_8h_xhtml_a9b2ccb7e9e0744cd44765f77b05fa93f"><div class="ttname"><a href="overload_8h.xhtml#a9b2ccb7e9e0744cd44765f77b05fa93f">OVERLOAD</a></div><div class="ttdeci">#define OVERLOAD(T, name,...)</div><div class="ttdoc">Helper macro to resolve overloaded signals in Qt 5 style connections. </div><div class="ttdef"><b>Definition:</b> <a href="overload_8h_source.xhtml#l00026">overload.h:26</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml_a9e0c117f40f7d5c87957ae2539b6b4c5"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a9e0c117f40f7d5c87957ae2539b6b4c5">scram::gui::model::ElementContainerModel::ElementContainerModel</a></div><div class="ttdeci">ElementContainerModel(const T &amp;container, Model *model, QObject *parent=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00033">elementcontainermodel.cpp:33</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1GateSortFilterProxyModel_xhtml_abb441445058b9653865646810ca7cdfc"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1GateSortFilterProxyModel.xhtml#abb441445058b9653865646810ca7cdfc">scram::gui::model::GateSortFilterProxyModel::lessThan</a></div><div class="ttdeci">bool lessThan(const QModelIndex &amp;lhs, const QModelIndex &amp;rhs) const override</div><div class="ttdoc">Accepts only top elements for sorting and filtering. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00397">elementcontainermodel.cpp:397</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml_ab0b11ddc9cea4fe7494dcb8df120396b"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">scram::gui::model::ElementContainerModel::parent</a></div><div class="ttdeci">QModelIndex parent(const QModelIndex &amp;) const override</div><div class="ttdoc">Assumes the table-layout and returns null index. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00067">elementcontainermodel.h:67</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1GateContainerModel_xhtml_a9cdee9017df030e4b41b29d5d8b895c9"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a9cdee9017df030e4b41b29d5d8b895c9">scram::gui::model::GateContainerModel::GateContainerModel</a></div><div class="ttdeci">GateContainerModel(Model *model, QObject *parent=nullptr)</div><div class="ttdoc">Constructs from the table of proxy Gates in the Model. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00265">elementcontainermodel.cpp:265</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1GateContainerModel_xhtml_af26e5332d8f7a5df266b95aa965c147f"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#af26e5332d8f7a5df266b95aa965c147f">scram::gui::model::GateContainerModel::parent</a></div><div class="ttdeci">QModelIndex parent(const QModelIndex &amp;index) const override</div><div class="ttdoc">The index for children embeds the parent information into the data. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00322">elementcontainermodel.cpp:322</a></div></div>
<div class="ttc" id="guiassert_8h_xhtml"><div class="ttname"><a href="guiassert_8h.xhtml">guiassert.h</a></div><div class="ttdoc">GUI assertions that should not crash the program by default. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml_a48973e3c3eb7a5323cf73c30f484d861"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a48973e3c3eb7a5323cf73c30f484d861">scram::gui::model::ElementContainerModel::connectElement</a></div><div class="ttdeci">virtual void connectElement(Element *element)</div><div class="ttdoc">Connects of the element change signals to the table modification. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00050">elementcontainermodel.cpp:50</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model.xhtml">scram::gui::model::Model</a></div><div class="ttdoc">The wrapper around the MEF Model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00413">model.h:413</a></div></div>
<div class="ttc" id="guiassert_8h_xhtml_ad04e3dce0040cedb9562b05ff3ff58cb"><div class="ttname"><a href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a></div><div class="ttdeci">#define GUI_ASSERT(cond, ret)</div><div class="ttdoc">Assertion that avoids crashing the application. </div><div class="ttdef"><b>Definition:</b> <a href="guiassert_8h_source.xhtml#l00034">guiassert.h:34</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml_ab406e6af426132143c0d8d08c1fec19b"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml#ab406e6af426132143c0d8d08c1fec19b">scram::gui::model::Gate::formulaChanged</a></div><div class="ttdeci">void formulaChanged()</div><div class="ttdoc">Indicates gate formula changes or resets. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml">scram::gui::model::Element</a></div><div class="ttdoc">The base proxy Element model for mef::Element. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00064">model.h:64</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1GateContainerModel_xhtml_a58083bc206699f49adcc9c0ed7fc6500"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a58083bc206699f49adcc9c0ed7fc6500">scram::gui::model::GateContainerModel::columnCount</a></div><div class="ttdeci">int columnCount(const QModelIndex &amp;parent) const override</div><div class="ttdoc">The index for children embeds the parent information into the data. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00286">elementcontainermodel.cpp:286</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml_a9aee454164cf6db9962bd29e367c9082"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a9aee454164cf6db9962bd29e367c9082">scram::gui::model::ElementContainerModel::getElement</a></div><div class="ttdeci">Element * getElement(int index) const </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00070">elementcontainermodel.cpp:70</a></div></div>
<div class="ttc" id="namespacescram_1_1gui_1_1model_xhtml"><div class="ttname"><a href="namespacescram_1_1gui_1_1model.xhtml">scram::gui::model</a></div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00030">elementcontainermodel.cpp:30</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1GateContainerModel_xhtml_a191036bcdd39eae7889c99ac42208fd6"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a191036bcdd39eae7889c99ac42208fd6">scram::gui::model::GateContainerModel::data</a></div><div class="ttdeci">QVariant data(const QModelIndex &amp;index, int role) const override</div><div class="ttdoc">The index for children embeds the parent information into the data. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00356">elementcontainermodel.cpp:356</a></div></div>
<div class="ttc" id="align_8h_xhtml"><div class="ttname"><a href="align_8h.xhtml">align.h</a></div><div class="ttdoc">Text alignment common conventions. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml">scram::gui::model::Gate</a></div><div class="ttdoc">The proxy to manage mef::Gate. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00326">model.h:326</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:46 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
