<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>eventdialog.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_11bc0974ce736ce9a6fadebbeb7a8314.xhtml">gui</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">eventdialog.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="eventdialog_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2017-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// Dialog to edit and validate events.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;initializer_list&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;QDialog&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;QStatusBar&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;QString&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;ui_eventdialog.h&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;src/event.h&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;src/expression.h&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;src/model.h&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="model_8h.xhtml">model.h</a>&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram_1_1gui.xhtml">scram::gui</a> {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">/// The Dialog to create, present, and manipulate event data.</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">/// Only valid data is accepted by this dialog.</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">/// That is, the dialog constrains the user input to be valid,</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">/// and upon the acceptance, it guarantees that the data is valid</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">/// for usage by the Model classes.</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">/// However, the requested data must be relevant to the current type.</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">/// @pre The model is normalized.</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">/// @todo Generalize to all model element types.</span></div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1EventDialog.xhtml">   54</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> : <span class="keyword">public</span> QDialog, <span class="keyword">private</span> Ui::EventDialog</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;{</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    Q_OBJECT</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">    /// Event types as listed in the drop-down.</span></div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1EventDialog.xhtml#a923776b5a3eba5bd364a258b15a10929">   60</a></span>&#160;<span class="comment"></span>    <span class="keyword">enum</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a923776b5a3eba5bd364a258b15a10929">EventType</a> {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        HouseEvent = 1 &lt;&lt; 0,</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        BasicEvent = 1 &lt;&lt; 1,</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        Undeveloped = 1 &lt;&lt; 2,</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        Conditional = 1 &lt;&lt; 3,</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        Gate = 1 &lt;&lt; 4</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    };</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">    /// Creates a dialog for the definition of a new event.</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">    /// @param[in,out] model  The model with valid data.</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">    /// @param[in,out] parent  The optional owner of this object.</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"></span>    <span class="keyword">explicit</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bd4a7b6bca6ddb91656f4bb87f905">EventDialog</a>(mef::Model *model, QWidget *parent = <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">    /// Sets up the dialog with element data.</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">    /// @param[in] element  The existing valid element in the model.</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">    /// @pre Only one element type is requested for the setup.</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">    /// @todo Consider providing a template constructor instead.</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">    /// @{</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">setupData</a>(<span class="keyword">const</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">model::Gate</a> &amp;element);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">setupData</a>(<span class="keyword">const</span> <a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">model::HouseEvent</a> &amp;element);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">setupData</a>(<span class="keyword">const</span> <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">model::BasicEvent</a> &amp;element);<span class="comment"></span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">    /// @}</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">    /// @returns The type being defined by this dialog.</span></div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1EventDialog.xhtml#af80067675ae0b3f02337533323cf1464">   89</a></span>&#160;<span class="comment"></span>    <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a923776b5a3eba5bd364a258b15a10929">EventType</a> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#af80067675ae0b3f02337533323cf1464">currentType</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a923776b5a3eba5bd364a258b15a10929">EventType</a><span class="keyword">&gt;</span>(1 &lt;&lt; typeBox-&gt;currentIndex());</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">    /// @returns The name data.</span></div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1EventDialog.xhtml#a0c144e53e44d5b9524d60698cb356653">   95</a></span>&#160;<span class="comment"></span>    QString <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a0c144e53e44d5b9524d60698cb356653">name</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> nameLine-&gt;text(); }<span class="comment"></span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">    /// @returns The label data.</span></div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1EventDialog.xhtml#a4beb17e160a4255cd5ea602753689070">   97</a></span>&#160;<span class="comment"></span>    QString <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a4beb17e160a4255cd5ea602753689070">label</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> labelText-&gt;toPlainText().simplified(); }</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">    /// @returns The Boolean constant data.</span></div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1EventDialog.xhtml#a1522bc4b9c9c0ef7d82b3a27d1778108">  100</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a1522bc4b9c9c0ef7d82b3a27d1778108">booleanConstant</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> stateBox-&gt;currentIndex(); }</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">    /// @returns The probability expression for basic events.</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">    ///          nullptr if no expression is defined.</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment"></span>    std::unique_ptr&lt;mef::Expression&gt; <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a0fbc46dd72d7473a8682484172bd7b3c">expression</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">    /// @returns The operator type for the formula.</span></div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1EventDialog.xhtml#ac9d1c80c10d678aadeea36310c242444">  107</a></span>&#160;<span class="comment"></span>    mef::Operator <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#ac9d1c80c10d678aadeea36310c242444">connective</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>mef::Operator<span class="keyword">&gt;</span>(connectiveBox-&gt;currentIndex());</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">    /// @returns The value for the vote number for formulas.</span></div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1EventDialog.xhtml#ac413f5e1b3f9795c80d78a512ad7f0cf">  113</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">int</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#ac413f5e1b3f9795c80d78a512ad7f0cf">voteNumber</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> voteNumberBox-&gt;value(); }</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">    /// @returns The set of formula argument ids.</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment"></span>    std::vector&lt;std::string&gt; <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a3f52697e4e16187eb133aa1d59d249e8">arguments</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">    /// @returns The fault tree container name.</span></div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1EventDialog.xhtml#a4b0937931be261ac68e45aee3062daf9">  119</a></span>&#160;<span class="comment"></span>    std::string <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a4b0937931be261ac68e45aee3062daf9">faultTree</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">return</span> containerFaultTreeName-&gt;text().toStdString();</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    }</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;signals:<span class="comment"></span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">    /// @param[in] valid  True if the current changes and data are valid.</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a26ac970b870dc37d46f1fd2ccd3b6f0c">validated</a>(<span class="keywordtype">bool</span> valid);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">    /// Indicates changes in the list of formula arguments.</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#adac635981e288e568e5f46ec8d3185ba">formulaArgsChanged</a>();</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keyword">public</span> slots:<span class="comment"></span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">    /// Triggers validation of the current data.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a38bf6ffaa2fb4575a8ddeb52a1a953a4">validate</a>();</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keyword">static</span> QString redBackground;    <span class="comment">///&lt; CSS color for error/empty.</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment"></span>    <span class="keyword">static</span> QString yellowBackground; <span class="comment">///&lt; CSS color for partial/invalid.</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">    /// Checks for duplicates in the formula arguments.</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">    /// @param[in] name  The event name to be added to the formula.</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">    /// @returns true if the args list already contains the string name.</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> hasFormulaArg(<span class="keyword">const</span> QString &amp;<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a0c144e53e44d5b9524d60698cb356653">name</a>);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">    /// Checks for cycles before addition of gate arguments.</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">    /// @param[in] gate  The argument gate to be added into the formula list.</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">    /// @returns true if the arg would introduce a cycle.</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">    /// @pre The check is performed only for existing elements.</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">    /// @pre The argument is not a self-cycle.</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">    /// @todo Optimize to be linear.</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">    /// @todo Optimize with memoization.</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> checkCycle(<span class="keyword">const</span> mef::Gate *gate);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">    /// Finds the fault tree container of the event being defined.</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">    /// @tparam T  The MEF type.</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">    /// @param[in] event  The fully initialized MEF event.</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">    /// @returns The fault tree the event belongs to.</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">    ///          nullptr if the event is unused in fault trees.</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">    /// @note Only gates are guaranteed to be in fault trees.</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment"></span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    mef::FaultTree *getFaultTree(<span class="keyword">const</span> T *event) <span class="keyword">const</span>;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">    /// Performs the setup common to all the event types.</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">    /// @tparam T  The MEF event type.</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">    /// @param[in] element  The proxy managing the element.</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">    /// @param[in] origin  The original MEF event.</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment"></span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">setupData</a>(<span class="keyword">const</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">model::Element</a> &amp;element, <span class="keyword">const</span> T *origin);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">    /// Connects the editing widgets with the dialog validation logic.</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> connectLineEdits(std::initializer_list&lt;QLineEdit *&gt; lineEdits);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordtype">void</span> stealTopFocus(QLineEdit *lineEdit); <span class="comment">///&lt; Intercepts the auto-default.</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">    /// Sets up the formula argument completer.</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> setupArgCompleter();</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    mef::Model *m_model;    <span class="comment">///&lt; The main model w/ the data.</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment"></span>    QStatusBar *m_errorBar; <span class="comment">///&lt; The bar for error/validation messages.</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment"></span>    QString m_initName;     <span class="comment">///&lt; The name not validated for duplicates.</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment"></span>    <span class="keyword">const</span> mef::Element *m_event = <span class="keyword">nullptr</span>; <span class="comment">///&lt; Set only for existing events.</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> m_fixContainerName = <span class="keyword">false</span>; <span class="comment">///&lt; @todo Implement fault tree change.</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;} <span class="comment">// namespace scram::gui</span></div><div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">scram::gui::model::BasicEvent</a></div><div class="ttdoc">The proxy to manage mef::BasicEvent. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00179">model.h:179</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a0c144e53e44d5b9524d60698cb356653"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a0c144e53e44d5b9524d60698cb356653">scram::gui::EventDialog::name</a></div><div class="ttdeci">QString name() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00095">eventdialog.h:95</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a3f52697e4e16187eb133aa1d59d249e8"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a3f52697e4e16187eb133aa1d59d249e8">scram::gui::EventDialog::arguments</a></div><div class="ttdeci">std::vector&lt; std::string &gt; arguments() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8cpp_source.xhtml#l00180">eventdialog.cpp:180</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_ac413f5e1b3f9795c80d78a512ad7f0cf"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#ac413f5e1b3f9795c80d78a512ad7f0cf">scram::gui::EventDialog::voteNumber</a></div><div class="ttdeci">int voteNumber() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00113">eventdialog.h:113</a></div></div>
<div class="ttc" id="model_8h_xhtml"><div class="ttname"><a href="model_8h.xhtml">model.h</a></div><div class="ttdoc">Wrapper Model classes for the MEF data. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a38bf6ffaa2fb4575a8ddeb52a1a953a4"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a38bf6ffaa2fb4575a8ddeb52a1a953a4">scram::gui::EventDialog::validate</a></div><div class="ttdeci">void validate()</div><div class="ttdoc">Triggers validation of the current data. </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8cpp_source.xhtml#l00345">eventdialog.cpp:345</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">scram::gui::model::HouseEvent</a></div><div class="ttdoc">The proxy to manage mef::HouseEvent. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00284">model.h:284</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a4beb17e160a4255cd5ea602753689070"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a4beb17e160a4255cd5ea602753689070">scram::gui::EventDialog::label</a></div><div class="ttdeci">QString label() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00097">eventdialog.h:97</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a4b0937931be261ac68e45aee3062daf9"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a4b0937931be261ac68e45aee3062daf9">scram::gui::EventDialog::faultTree</a></div><div class="ttdeci">std::string faultTree() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00119">eventdialog.h:119</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_adac635981e288e568e5f46ec8d3185ba"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#adac635981e288e568e5f46ec8d3185ba">scram::gui::EventDialog::formulaArgsChanged</a></div><div class="ttdeci">void formulaArgsChanged()</div><div class="ttdoc">Indicates changes in the list of formula arguments. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_abe5bd4a7b6bca6ddb91656f4bb87f905"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bd4a7b6bca6ddb91656f4bb87f905">scram::gui::EventDialog::EventDialog</a></div><div class="ttdeci">EventDialog(mef::Model *model, QWidget *parent=nullptr)</div><div class="ttdoc">Creates a dialog for the definition of a new event. </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8cpp_source.xhtml#l00047">eventdialog.cpp:47</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_af80067675ae0b3f02337533323cf1464"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#af80067675ae0b3f02337533323cf1464">scram::gui::EventDialog::currentType</a></div><div class="ttdeci">EventType currentType() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00089">eventdialog.h:89</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_abe5bf2e13a1fbb54ce0d8c5a03ad3a05"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">scram::gui::EventDialog::setupData</a></div><div class="ttdeci">void setupData(const model::Gate &amp;element)</div><div class="ttdoc">Sets up the dialog with element data. </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8cpp_source.xhtml#l00295">eventdialog.cpp:295</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a26ac970b870dc37d46f1fd2ccd3b6f0c"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a26ac970b870dc37d46f1fd2ccd3b6f0c">scram::gui::EventDialog::validated</a></div><div class="ttdeci">void validated(bool valid)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml">scram::gui::model::Element</a></div><div class="ttdoc">The base proxy Element model for mef::Element. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00064">model.h:64</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_ac9d1c80c10d678aadeea36310c242444"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#ac9d1c80c10d678aadeea36310c242444">scram::gui::EventDialog::connective</a></div><div class="ttdeci">mef::Operator connective() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00107">eventdialog.h:107</a></div></div>
<div class="ttc" id="namespacescram_1_1gui_xhtml"><div class="ttname"><a href="namespacescram_1_1gui.xhtml">scram::gui</a></div><div class="ttdef"><b>Definition:</b> <a href="align_8h_source.xhtml#l00025">align.h:25</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a1522bc4b9c9c0ef7d82b3a27d1778108"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a1522bc4b9c9c0ef7d82b3a27d1778108">scram::gui::EventDialog::booleanConstant</a></div><div class="ttdeci">bool booleanConstant() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00100">eventdialog.h:100</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a923776b5a3eba5bd364a258b15a10929"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a923776b5a3eba5bd364a258b15a10929">scram::gui::EventDialog::EventType</a></div><div class="ttdeci">EventType</div><div class="ttdoc">Event types as listed in the drop-down. </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00060">eventdialog.h:60</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml">scram::gui::EventDialog</a></div><div class="ttdoc">The Dialog to create, present, and manipulate event data. </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00054">eventdialog.h:54</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a0fbc46dd72d7473a8682484172bd7b3c"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a0fbc46dd72d7473a8682484172bd7b3c">scram::gui::EventDialog::expression</a></div><div class="ttdeci">std::unique_ptr&lt; mef::Expression &gt; expression() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8cpp_source.xhtml#l00321">eventdialog.cpp:321</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml">scram::gui::model::Gate</a></div><div class="ttdoc">The proxy to manage mef::Gate. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00326">model.h:326</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:46 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
