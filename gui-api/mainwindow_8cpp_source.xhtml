<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>mainwindow.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_11bc0974ce736ce9a6fadebbeb7a8314.xhtml">gui</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">mainwindow.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="mainwindow_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2015-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="mainwindow_8h.xhtml">mainwindow.h</a>&quot;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;ui_mainwindow.h&quot;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &quot;ui_namedialog.h&quot;</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;ui_startpage.h&quot;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;type_traits&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;QApplication&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;QCoreApplication&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;QFileDialog&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;QMessageBox&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;QPrinter&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;QProgressDialog&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;QSvgGenerator&gt;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;QtConcurrent&gt;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;QtOpenGL&gt;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &lt;boost/exception/get_error_info.hpp&gt;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &lt;boost/filesystem.hpp&gt;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &quot;src/config.h&quot;</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;src/env.h&quot;</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;src/error.h&quot;</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;src/expression/constant.h&quot;</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &quot;src/expression/exponential.h&quot;</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &quot;src/ext/algorithm.h&quot;</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &quot;src/ext/find_iterator.h&quot;</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &quot;src/ext/variant.h&quot;</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#include &quot;src/initializer.h&quot;</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#include &quot;src/reporter.h&quot;</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#include &quot;src/serialization.h&quot;</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#include &quot;src/xml.h&quot;</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="diagram_8h.xhtml">diagram.h</a>&quot;</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="elementcontainermodel_8h.xhtml">elementcontainermodel.h</a>&quot;</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="eventdialog_8h.xhtml">eventdialog.h</a>&quot;</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="guiassert_8h.xhtml">guiassert.h</a>&quot;</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="importancetablemodel_8h.xhtml">importancetablemodel.h</a>&quot;</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="modeltree_8h.xhtml">modeltree.h</a>&quot;</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="overload_8h.xhtml">overload.h</a>&quot;</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="preferencesdialog_8h.xhtml">preferencesdialog.h</a>&quot;</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="printable_8h.xhtml">printable.h</a>&quot;</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="producttablemodel_8h.xhtml">producttablemodel.h</a>&quot;</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="reporttree_8h.xhtml">reporttree.h</a>&quot;</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="settingsdialog_8h.xhtml">settingsdialog.h</a>&quot;</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="validator_8h.xhtml">validator.h</a>&quot;</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram_1_1gui.xhtml">scram::gui</a> {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">/// The dialog to set the model name.</span></div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1NameDialog.xhtml">   72</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1gui_1_1NameDialog.xhtml">NameDialog</a> : <span class="keyword">public</span> QDialog, <span class="keyword">public</span> Ui::NameDialog</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">    /// @param[in,out] parent  The owner widget.</span></div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1NameDialog.xhtml#abc272005f7f1987d426a96512e41cf39">   76</a></span>&#160;<span class="comment"></span>    <span class="keyword">explicit</span> <a class="code" href="classscram_1_1gui_1_1NameDialog.xhtml#abc272005f7f1987d426a96512e41cf39">NameDialog</a>(QWidget *parent) : QDialog(parent)</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    {</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        setupUi(<span class="keyword">this</span>);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        nameLine-&gt;setValidator(<a class="code" href="classscram_1_1gui_1_1Validator.xhtml#ade5c7bef2410bb4bc6bb05d88ee99793">Validator::name</a>());</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;};</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">/// The initial start tab.</span></div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1StartPage.xhtml">   84</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1gui_1_1StartPage.xhtml">StartPage</a> : <span class="keyword">public</span> QWidget, <span class="keyword">public</span> Ui::StartPage</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">    /// @param[in,out] parent  The owner widget.</span></div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1StartPage.xhtml#a63e4396c45e7ef5520a0ceef753a7675">   88</a></span>&#160;<span class="comment"></span>    <span class="keyword">explicit</span> <a class="code" href="classscram_1_1gui_1_1StartPage.xhtml#a63e4396c45e7ef5520a0ceef753a7675">StartPage</a>(QWidget *parent = <span class="keyword">nullptr</span>) : QWidget(parent)</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        setupUi(<span class="keyword">this</span>);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;};</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">/// The dialog to block user input while waiting for a long-running process.</span></div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1WaitDialog.xhtml">   95</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1gui_1_1WaitDialog.xhtml">WaitDialog</a> : <span class="keyword">public</span> QProgressDialog</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;{</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">    /// @param[in,out] parent  The owner widget.</span></div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1WaitDialog.xhtml#a0b559d52bc5b87ec92d5f5d871d221d3">   99</a></span>&#160;<span class="comment"></span>    <span class="keyword">explicit</span> <a class="code" href="classscram_1_1gui_1_1WaitDialog.xhtml#a0b559d52bc5b87ec92d5f5d871d221d3">WaitDialog</a>(QWidget *parent) : QProgressDialog(parent)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        setFixedSize(size());</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        setWindowFlags(windowFlags() | Qt::MSWindowsFixedSizeDialogHint</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                       | Qt::FramelessWindowHint);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        setCancelButton(<span class="keyword">nullptr</span>);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        setRange(0, 0);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        setMinimumDuration(0);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    }</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keyword">private</span>:<span class="comment"></span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">    /// Intercepts disruptive keyboard presses.</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> keyPressEvent(QKeyEvent *event)<span class="keyword"> override</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">if</span> (event-&gt;key() == Qt::Key_Escape)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <span class="keywordflow">return</span> event-&gt;accept();</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        QProgressDialog::keyPressEvent(event);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;};</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">/// The default view for graphics views (e.g., fault tree diagram).</span></div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1DiagramView.xhtml">  120</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1gui_1_1DiagramView.xhtml">DiagramView</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1gui_1_1ZoomableView.xhtml">ZoomableView</a>, <span class="keyword">public</span> <a class="code" href="classscram_1_1gui_1_1Printable.xhtml">Printable</a></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;{</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keyword">using</span> ZoomableView::ZoomableView;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">    /// Exports the image of the diagram.</span></div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1DiagramView.xhtml#ae923bef55f717a4922c6f23e45beaabd">  126</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1DiagramView.xhtml#ae923bef55f717a4922c6f23e45beaabd">exportAs</a>()</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        QString filename = QFileDialog::getSaveFileName(</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="keyword">this</span>, QObject::tr(<span class="stringliteral">&quot;Export As&quot;</span>), QDir::homePath(),</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            QObject::tr(<span class="stringliteral">&quot;SVG files (*.svg);;All files (*.*)&quot;</span>));</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        QSize sceneSize = scene()-&gt;sceneRect().size().toSize();</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        QSvgGenerator generator;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        generator.setFileName(filename);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        generator.setSize(sceneSize);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        generator.setViewBox(</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            QRect(0, 0, sceneSize.width(), sceneSize.height()));</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        generator.setTitle(filename);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        QPainter painter;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        painter.begin(&amp;generator);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        scene()-&gt;render(&amp;painter);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        painter.end();</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    }</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordtype">void</span> doPrint(QPrinter *printer)<span class="keyword"> override</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        QPainter painter(printer);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        painter.setRenderHint(QPainter::Antialiasing);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        scene()-&gt;render(&amp;painter);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;};</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1MainWindow.xhtml#a31d1778256db8a5e1ad547ecac7d394d">  154</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml#a31d1778256db8a5e1ad547ecac7d394d">MainWindow::MainWindow</a>(QWidget *parent)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    : QMainWindow(parent), ui(new <a class="code" href="namespaceUi.xhtml">Ui</a>::<a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml">MainWindow</a>),</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      m_undoStack(new QUndoStack(this)),</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      m_zoomBox(new QComboBox), <span class="comment">// Will be owned by the tool bar later.</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      m_autoSaveTimer(new QTimer(this))</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;{</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    ui-&gt;setupUi(<span class="keyword">this</span>);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    m_zoomBox-&gt;setEditable(<span class="keyword">true</span>);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    m_zoomBox-&gt;setEnabled(<span class="keyword">false</span>);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    m_zoomBox-&gt;setInsertPolicy(QComboBox::NoInsert);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    m_zoomBox-&gt;setValidator(<a class="code" href="classscram_1_1gui_1_1Validator.xhtml#aef00f2009b110e78ead2109ffa60897e">Validator::percent</a>());</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">for</span> (QAction *action : ui-&gt;menuZoom-&gt;actions()) {</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        m_zoomBox-&gt;addItem(action-&gt;text());</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        connect(action, &amp;QAction::triggered, m_zoomBox,</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                [action, <span class="keyword">this</span>] { m_zoomBox-&gt;setCurrentText(action-&gt;text()); });</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    }</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    m_zoomBox-&gt;setCurrentText(QStringLiteral(<span class="stringliteral">&quot;100%&quot;</span>));</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    ui-&gt;zoomToolBar-&gt;addWidget(m_zoomBox); <span class="comment">// Transfer the ownership.</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    setupStatusBar();</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    setupActions();</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    setupConnections();</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    loadPreferences();</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    setupStartPage();</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;}</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;MainWindow::~MainWindow() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keyword">namespace </span>{ <span class="comment">// Error message dialog for SCRAM exceptions.</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keywordtype">void</span> displayError(<span class="keyword">const</span> scram::IOError &amp;err, <span class="keyword">const</span> QString &amp;text,</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                  QWidget *parent = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;{</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    QMessageBox message(QMessageBox::Critical, QObject::tr(<span class="stringliteral">&quot;IO Error&quot;</span>), text,</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                        QMessageBox::Ok, parent);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keyword">const</span> std::string *filename =</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        boost::get_error_info&lt;boost::errinfo_file_name&gt;(err);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(filename, );</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    message.setInformativeText(</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        QObject::tr(<span class="stringliteral">&quot;File: %1&quot;</span>).arg(QString::fromStdString(*filename)));</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    std::stringstream detail;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">if</span> (<span class="keyword">const</span> std::string *mode =</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            boost::get_error_info&lt;boost::errinfo_file_open_mode&gt;(err)) {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        detail &lt;&lt; <span class="stringliteral">&quot;Open mode: &quot;</span> &lt;&lt; *mode &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    }</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keywordflow">if</span> (<span class="keyword">const</span> <span class="keywordtype">int</span> *errnum = boost::get_error_info&lt;boost::errinfo_errno&gt;(err)) {</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        detail &lt;&lt; <span class="stringliteral">&quot;Error code: &quot;</span> &lt;&lt; *errnum &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        detail &lt;&lt; <span class="stringliteral">&quot;Error string: &quot;</span> &lt;&lt; std::strerror(*errnum) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    }</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    detail &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span> &lt;&lt; err.what() &lt;&lt; std::endl;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    message.setDetailedText(QString::fromStdString(detail.str()));</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    message.exec();</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;}</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keywordtype">void</span> displayError(<span class="keyword">const</span> scram::Error &amp;err, <span class="keyword">const</span> QString &amp;title,</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                  <span class="keyword">const</span> QString &amp;text, QWidget *parent = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;{</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    QMessageBox message(QMessageBox::Critical, title, text, QMessageBox::Ok,</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                        parent);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    QString info;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keyword">auto</span> newLine = [&amp;info] { info.append(QStringLiteral(<span class="stringliteral">&quot;\n&quot;</span>)); };</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordflow">if</span> (<span class="keyword">const</span> std::string *filename =</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            boost::get_error_info&lt;boost::errinfo_file_name&gt;(err)) {</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        info.append(</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            QObject::tr(<span class="stringliteral">&quot;File: %1&quot;</span>).arg(QString::fromStdString(*filename)));</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        newLine();</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">if</span> (<span class="keyword">const</span> <span class="keywordtype">int</span> *line =</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                boost::get_error_info&lt;boost::errinfo_at_line&gt;(err)) {</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            info.append(QObject::tr(<span class="stringliteral">&quot;Line: %1&quot;</span>).arg(*line));</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            newLine();</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        }</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    }</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keywordflow">if</span> (<span class="keyword">const</span> std::string *container =</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            boost::get_error_info&lt;scram::mef::errinfo_container&gt;(err)) {</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        info.append(QObject::tr(<span class="stringliteral">&quot;MEF Container: %1&quot;</span>)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                        .arg(QString::fromStdString(*container)));</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        newLine();</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    }</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordflow">if</span> (<span class="keyword">const</span> std::string *xml_element =</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            boost::get_error_info&lt;scram::xml::errinfo_element&gt;(err)) {</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        info.append(QObject::tr(<span class="stringliteral">&quot;XML element: %1&quot;</span>)</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                        .arg(QString::fromStdString(*xml_element)));</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        newLine();</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    }</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="keywordflow">if</span> (<span class="keyword">const</span> std::string *xml_attribute =</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            boost::get_error_info&lt;scram::xml::errinfo_attribute&gt;(err)) {</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        info.append(QObject::tr(<span class="stringliteral">&quot;XML attribute: %1&quot;</span>)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                        .arg(QString::fromStdString(*xml_attribute)));</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        newLine();</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    }</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    message.setInformativeText(info);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    std::stringstream detail;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    detail &lt;&lt; boost::core::demangled_name(<span class="keyword">typeid</span>(err)) &lt;&lt; <span class="stringliteral">&quot;\n\n&quot;</span>;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    detail &lt;&lt; err.what() &lt;&lt; std::endl;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    message.setDetailedText(QString::fromStdString(detail.str()));</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    message.exec();</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;}</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;} <span class="comment">// namespace</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1MainWindow.xhtml#a19cf5f94f4b040cf6f2ba685ff439b59">  261</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml#a19cf5f94f4b040cf6f2ba685ff439b59">MainWindow::setConfig</a>(<span class="keyword">const</span> std::string &amp;configPath,</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                           std::vector&lt;std::string&gt; inputFiles)</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;{</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keywordflow">try</span> {</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        Config config(configPath);</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        inputFiles.insert(inputFiles.begin(), config.input_files().begin(),</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                          config.input_files().end());</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        mef::Initializer(inputFiles, config.settings());</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml#ad25ffda8b13e4743312f9a3cad96d271">addInputFiles</a>(inputFiles))</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        m_settings = config.settings();</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    } <span class="keywordflow">catch</span> (<span class="keyword">const</span> scram::IOError &amp;err) {</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        displayError(err, tr(<span class="stringliteral">&quot;Configuration file error&quot;</span>), <span class="keyword">this</span>);</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    } <span class="keywordflow">catch</span> (<span class="keyword">const</span> scram::xml::Error &amp;err) {</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        displayError(err, tr(<span class="stringliteral">&quot;XML Validity Error&quot;</span>),</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                     tr(<span class="stringliteral">&quot;Invalid configuration file&quot;</span>), <span class="keyword">this</span>);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    } <span class="keywordflow">catch</span> (<span class="keyword">const</span> scram::SettingsError &amp;err) {</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        displayError(err, tr(<span class="stringliteral">&quot;Configuration Error&quot;</span>),</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                     tr(<span class="stringliteral">&quot;Invalid configurations&quot;</span>), <span class="keyword">this</span>);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    }</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;}</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1MainWindow.xhtml#ad25ffda8b13e4743312f9a3cad96d271">  287</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml#ad25ffda8b13e4743312f9a3cad96d271">MainWindow::addInputFiles</a>(<span class="keyword">const</span> std::vector&lt;std::string&gt; &amp;inputFiles)</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;{</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keyword">static</span> xml::Validator validator(env::install_dir()</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                                    + <span class="stringliteral">&quot;/share/scram/gui.rng&quot;</span>);</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="keywordflow">if</span> (inputFiles.empty())</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keywordflow">try</span> {</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        std::vector&lt;std::string&gt; allInput = m_inputFiles;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        allInput.insert(allInput.end(), inputFiles.begin(), inputFiles.end());</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        std::shared_ptr&lt;mef::Model&gt; newModel = [<span class="keyword">this</span>, &amp;allInput] {</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            mef::Initializer init(allInput, m_settings);</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = m_inputFiles.size(); i &lt; allInput.size(); ++i)</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                validator.validate(init.documents()[i]);</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="keywordflow">return</span> init.model();</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        }();</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">const</span> mef::FaultTreePtr &amp;faultTree : newModel-&gt;fault_trees()) {</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            <span class="keywordflow">if</span> (faultTree-&gt;top_events().size() != 1) {</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                QMessageBox::critical(</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                    <span class="keyword">this</span>, tr(<span class="stringliteral">&quot;Initialization Error&quot;</span>),</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                    <span class="comment">//: Single top/root event fault tree are expected by GUI.</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                    tr(<span class="stringliteral">&quot;Fault tree &#39;%1&#39; must have a single top-gate.&quot;</span>)</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                        .arg(QString::fromStdString(faultTree-&gt;name())));</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            }</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        }</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        m_model = std::move(newModel);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        m_inputFiles = std::move(allInput);</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    } <span class="keywordflow">catch</span> (<span class="keyword">const</span> scram::IOError &amp;err) {</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        displayError(err, tr(<span class="stringliteral">&quot;Input file error&quot;</span>), <span class="keyword">this</span>);</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    } <span class="keywordflow">catch</span> (<span class="keyword">const</span> scram::xml::Error &amp;err) {</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        displayError(err, tr(<span class="stringliteral">&quot;XML Validity Error&quot;</span>), tr(<span class="stringliteral">&quot;Invalid input file&quot;</span>),</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                     <span class="keyword">this</span>);</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    } <span class="keywordflow">catch</span> (<span class="keyword">const</span> scram::mef::ValidityError &amp;err) {</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        displayError(err,</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                     <span class="comment">//: The error upon initialization from a file.</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                     tr(<span class="stringliteral">&quot;Initialization Error&quot;</span>), tr(<span class="stringliteral">&quot;Invalid input model&quot;</span>),</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                     <span class="keyword">this</span>);</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    }</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    emit <a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml#a26c21baa747d6a713c30efe494d64c1c">configChanged</a>();</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;}</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="keywordtype">void</span> MainWindow::setupStatusBar()</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;{</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    m_searchBar = <span class="keyword">new</span> QLineEdit;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    m_searchBar-&gt;setHidden(<span class="keyword">true</span>);</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    m_searchBar-&gt;setFrame(<span class="keyword">false</span>);</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    m_searchBar-&gt;setMaximumHeight(m_searchBar-&gt;fontMetrics().height());</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    m_searchBar-&gt;setSizePolicy(QSizePolicy::MinimumExpanding,</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                               QSizePolicy::Fixed);</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="comment">//: The search bar.</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    m_searchBar-&gt;setPlaceholderText(tr(<span class="stringliteral">&quot;Find/Filter (Perl Regex)&quot;</span>));</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    ui-&gt;statusBar-&gt;addPermanentWidget(m_searchBar);</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;}</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="keywordtype">void</span> MainWindow::setupActions()</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;{</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    connect(ui-&gt;actionAboutQt, &amp;QAction::triggered, qApp,</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            &amp;QApplication::aboutQt);</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    connect(ui-&gt;actionAboutScram, &amp;QAction::triggered, <span class="keyword">this</span>, [<span class="keyword">this</span>] {</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        QString legal = QStringLiteral(</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            <span class="stringliteral">&quot;This program is distributed in the hope that it will be useful, &quot;</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <span class="stringliteral">&quot;but WITHOUT ANY WARRANTY; without even the implied warranty of &quot;</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            <span class="stringliteral">&quot;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the &quot;</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            <span class="stringliteral">&quot;GNU General Public License for more details.&quot;</span>);</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        QMessageBox::about(</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            this, tr(<span class="stringliteral">&quot;About SCRAM&quot;</span>),</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            tr(<span class="stringliteral">&quot;&lt;h1&gt;SCRAM %1&lt;/h1&gt;&quot;</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;               <span class="stringliteral">&quot;The GUI front-end for SCRAM,&lt;br/&gt;&quot;</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;               <span class="stringliteral">&quot;a command-line risk analysis multi-tool.&lt;br/&gt;&lt;br/&gt;&quot;</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;               <span class="stringliteral">&quot;License: GPLv3+&lt;br/&gt;&quot;</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;               <span class="stringliteral">&quot;Homepage: &lt;a href=\&quot;%2\&quot;&gt;%2&lt;/a&gt;&lt;br/&gt;&quot;</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;               <span class="stringliteral">&quot;Technical Support: &lt;a href=\&quot;%3\&quot;&gt;%3&lt;/a&gt;&lt;br/&gt;&quot;</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;               <span class="stringliteral">&quot;Bug Tracker: &lt;a href=\&quot;%4\&quot;&gt;%4&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;%5&quot;</span>)</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                .arg(QCoreApplication::applicationVersion(),</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                     QStringLiteral(<span class="stringliteral">&quot;https://scram-pra.org&quot;</span>),</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                     QStringLiteral(<span class="stringliteral">&quot;scram-users@googlegroups.com&quot;</span>),</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                     QStringLiteral(<span class="stringliteral">&quot;https://github.com/rakhimov/scram/issues&quot;</span>),</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                     legal));</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    });</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="comment">// File menu actions.</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    ui-&gt;actionExit-&gt;setShortcut(QKeySequence::Quit);</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    ui-&gt;actionNewModel-&gt;setShortcut(QKeySequence::New);</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    connect(ui-&gt;actionNewModel, &amp;QAction::triggered, <span class="keyword">this</span>,</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            &amp;MainWindow::createNewModel);</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    ui-&gt;actionOpenFiles-&gt;setShortcut(QKeySequence::Open);</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    connect(ui-&gt;actionOpenFiles, &amp;QAction::triggered, <span class="keyword">this</span>,</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            [<span class="keyword">this</span>] { openFiles(); });</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    ui-&gt;actionSave-&gt;setShortcut(QKeySequence::Save);</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    connect(ui-&gt;actionSave, &amp;QAction::triggered, <span class="keyword">this</span>, &amp;MainWindow::saveModel);</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    ui-&gt;actionSaveAs-&gt;setShortcut(QKeySequence::SaveAs);</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    connect(ui-&gt;actionSaveAs, &amp;QAction::triggered, <span class="keyword">this</span>,</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            &amp;MainWindow::saveModelAs);</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    ui-&gt;actionPrint-&gt;setShortcut(QKeySequence::Print);</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    connect(ui-&gt;actionExportReportAs, &amp;QAction::triggered, <span class="keyword">this</span>,</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            &amp;MainWindow::exportReportAs);</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    QAction *menuRecentFilesStart = ui-&gt;menuRecentFiles-&gt;actions().front();</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="keywordflow">for</span> (QAction *&amp;fileAction : m_recentFileActions) {</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        fileAction = <span class="keyword">new</span> QAction(<span class="keyword">this</span>);</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        fileAction-&gt;setVisible(<span class="keyword">false</span>);</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        ui-&gt;menuRecentFiles-&gt;insertAction(menuRecentFilesStart, fileAction);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        connect(fileAction, &amp;QAction::triggered, <span class="keyword">this</span>, [<span class="keyword">this</span>, fileAction] {</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            <span class="keyword">auto</span> filePath = fileAction-&gt;text();</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(!filePath.isEmpty(), );</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml#ad25ffda8b13e4743312f9a3cad96d271">addInputFiles</a>({filePath.toStdString()}))</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                updateRecentFiles({filePath});</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        });</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    }</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    connect(ui-&gt;actionClearList, &amp;QAction::triggered, <span class="keyword">this</span>,</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            [<span class="keyword">this</span>] { updateRecentFiles({}); });</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <span class="comment">// View menu actions.</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    ui-&gt;actionZoomIn-&gt;setShortcut(QKeySequence::ZoomIn);</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    ui-&gt;actionZoomOut-&gt;setShortcut(QKeySequence::ZoomOut);</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <span class="comment">// Edit menu actions.</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    ui-&gt;actionRemoveElement-&gt;setShortcut(QKeySequence::Delete);</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    connect(ui-&gt;actionAddElement, &amp;QAction::triggered, <span class="keyword">this</span>,</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;            &amp;MainWindow::addElement);</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    connect(ui-&gt;actionRenameModel, &amp;QAction::triggered, <span class="keyword">this</span>, [<span class="keyword">this</span>] {</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        NameDialog nameDialog(this);</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        if (!m_model-&gt;HasDefaultName())</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;            nameDialog.nameLine-&gt;setText(m_guiModel-&gt;id());</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        if (nameDialog.exec() == QDialog::Accepted) {</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            QString name = nameDialog.nameLine-&gt;text();</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            if (name != QString::fromStdString(m_model-&gt;GetOptionalName())) {</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                m_undoStack-&gt;push(new model::Model::SetName(std::move(name),</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                                                            m_guiModel.get()));</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;            }</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        }</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    });</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    connect(ui-&gt;actionPreferences, &amp;QAction::triggered, <span class="keyword">this</span>, [<span class="keyword">this</span>] {</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        PreferencesDialog dialog(&amp;m_preferences, m_undoStack, m_autoSaveTimer,</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                                 this);</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        dialog.exec();</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    });</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    <span class="comment">// Undo/Redo actions</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    m_undoAction = m_undoStack-&gt;createUndoAction(<span class="keyword">this</span>, tr(<span class="stringliteral">&quot;Undo:&quot;</span>));</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    m_undoAction-&gt;setShortcut(QKeySequence::Undo);</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    m_undoAction-&gt;setIcon(QIcon::fromTheme(QStringLiteral(<span class="stringliteral">&quot;edit-undo&quot;</span>)));</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    m_redoAction = m_undoStack-&gt;createRedoAction(<span class="keyword">this</span>, tr(<span class="stringliteral">&quot;Redo:&quot;</span>));</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    m_redoAction-&gt;setShortcut(QKeySequence::Redo);</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    m_redoAction-&gt;setIcon(QIcon::fromTheme(QStringLiteral(<span class="stringliteral">&quot;edit-redo&quot;</span>)));</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    ui-&gt;menuEdit-&gt;insertAction(ui-&gt;menuEdit-&gt;actions().front(), m_redoAction);</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    ui-&gt;menuEdit-&gt;insertAction(m_redoAction, m_undoAction);</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    ui-&gt;editToolBar-&gt;insertAction(ui-&gt;editToolBar-&gt;actions().front(),</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                                  m_redoAction);</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    ui-&gt;editToolBar-&gt;insertAction(m_redoAction, m_undoAction);</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    connect(m_undoStack, &amp;QUndoStack::cleanChanged, ui-&gt;actionSave,</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;            &amp;QAction::setDisabled);</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    connect(m_undoStack, &amp;QUndoStack::cleanChanged,</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            [<span class="keyword">this</span>](<span class="keywordtype">bool</span> clean) { setWindowModified(!clean); });</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <span class="comment">// Search/filter bar shortcuts.</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <span class="keyword">auto</span> *searchAction = <span class="keyword">new</span> QAction(<span class="keyword">this</span>);</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    searchAction-&gt;setShortcuts({QKeySequence::Find, Qt::Key_Slash});</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    m_searchBar-&gt;addAction(searchAction);</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    connect(searchAction, &amp;QAction::triggered, [<span class="keyword">this</span>] {</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        <span class="keywordflow">if</span> (m_searchBar-&gt;isHidden())</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        m_searchBar-&gt;setFocus();</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        m_searchBar-&gt;selectAll();</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    });</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    <span class="comment">// Providing shortcuts for the tab widget manipulations.</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <span class="keyword">auto</span> *closeCurrentTab = <span class="keyword">new</span> QAction(<span class="keyword">this</span>);</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    <span class="keyword">auto</span> *nextTab = <span class="keyword">new</span> QAction(<span class="keyword">this</span>);</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    <span class="keyword">auto</span> *prevTab = <span class="keyword">new</span> QAction(<span class="keyword">this</span>);</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    closeCurrentTab-&gt;setShortcut(QKeySequence::Close);</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    nextTab-&gt;setShortcut(QKeySequence::NextChild);</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    <span class="comment">// QTBUG-15746: QKeySequence::PreviousChild does not work.</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    prevTab-&gt;setShortcut(Qt::CTRL | Qt::Key_Backtab);</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    ui-&gt;tabWidget-&gt;addAction(closeCurrentTab);</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    ui-&gt;tabWidget-&gt;addAction(nextTab);</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    ui-&gt;tabWidget-&gt;addAction(prevTab);</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <span class="keyword">auto</span> switchTab = [<span class="keyword">this</span>](<span class="keywordtype">bool</span> toNext) {</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        <span class="keywordtype">int</span> numTabs = ui-&gt;tabWidget-&gt;count();</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <span class="keywordflow">if</span> (!numTabs)</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        <span class="keywordtype">int</span> currentIndex = ui-&gt;tabWidget-&gt;currentIndex();</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        <span class="keywordtype">int</span> nextIndex = [currentIndex, numTabs, toNext] {</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            <span class="keywordtype">int</span> ret = currentIndex + (toNext ? 1 : -1);</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            <span class="keywordflow">if</span> (ret &lt; 0)</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                <span class="keywordflow">return</span> numTabs - 1;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            <span class="keywordflow">if</span> (ret &gt;= numTabs)</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;            <span class="keywordflow">return</span> ret;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        }();</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        ui-&gt;tabWidget-&gt;setCurrentIndex(nextIndex);</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    };</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    connect(closeCurrentTab, &amp;QAction::triggered, ui-&gt;tabWidget,</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;            [<span class="keyword">this</span>] { MainWindow::closeTab(ui-&gt;tabWidget-&gt;currentIndex()); });</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    connect(nextTab, &amp;QAction::triggered, ui-&gt;tabWidget,</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;            [switchTab] { switchTab(true); });</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    connect(prevTab, &amp;QAction::triggered, ui-&gt;tabWidget,</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            [switchTab] { switchTab(false); });</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;}</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="keywordtype">void</span> MainWindow::setupConnections()</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;{</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    connect(ui-&gt;modelTree, &amp;QTreeView::activated, <span class="keyword">this</span>,</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            &amp;MainWindow::activateModelTree);</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    connect(ui-&gt;reportTree, &amp;QTreeView::activated, <span class="keyword">this</span>,</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            &amp;MainWindow::activateReportTree);</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    connect(ui-&gt;tabWidget, &amp;QTabWidget::tabCloseRequested, <span class="keyword">this</span>,</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;            &amp;MainWindow::closeTab);</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    connect(ui-&gt;actionSettings, &amp;QAction::triggered, <span class="keyword">this</span>, [<span class="keyword">this</span>] {</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        SettingsDialog dialog(m_settings, this);</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        if (dialog.exec() == QDialog::Accepted)</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            m_settings = dialog.settings();</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    });</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    connect(ui-&gt;actionRun, &amp;QAction::triggered, <span class="keyword">this</span>, &amp;MainWindow::runAnalysis);</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    connect(<span class="keyword">this</span>, &amp;<a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml#a26c21baa747d6a713c30efe494d64c1c">MainWindow::configChanged</a>, [<span class="keyword">this</span>] {</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;        m_undoStack-&gt;clear();</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;        setWindowTitle(QStringLiteral(<span class="stringliteral">&quot;%1[*]&quot;</span>).arg(getModelNameForTitle()));</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        ui-&gt;actionSaveAs-&gt;setEnabled(<span class="keyword">true</span>);</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        ui-&gt;actionAddElement-&gt;setEnabled(<span class="keyword">true</span>);</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        ui-&gt;actionRenameModel-&gt;setEnabled(<span class="keyword">true</span>);</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        ui-&gt;actionRun-&gt;setEnabled(<span class="keyword">true</span>);</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        resetModelTree();</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;        resetReportTree(<span class="keyword">nullptr</span>);</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    });</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    connect(m_undoStack, &amp;QUndoStack::indexChanged, ui-&gt;reportTree, [<span class="keyword">this</span>] {</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;        if (m_analysis)</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            resetReportTree(nullptr);</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    });</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    connect(m_autoSaveTimer, &amp;QTimer::timeout, <span class="keyword">this</span>,</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;            &amp;MainWindow::autoSaveModel);</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;}</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="keywordtype">void</span> MainWindow::loadPreferences()</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;{</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    m_preferences.beginGroup(QStringLiteral(<span class="stringliteral">&quot;MainWindow&quot;</span>));</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    restoreGeometry(</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;        m_preferences.value(QStringLiteral(<span class="stringliteral">&quot;geometry&quot;</span>)).toByteArray());</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    restoreState(m_preferences.value(QStringLiteral(<span class="stringliteral">&quot;state&quot;</span>)).toByteArray(),</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                 LAYOUT_VERSION);</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    m_preferences.endGroup();</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    m_undoStack-&gt;setUndoLimit(</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        m_preferences.value(QStringLiteral(<span class="stringliteral">&quot;undoLimit&quot;</span>), 0).toInt());</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(m_autoSaveTimer-&gt;isActive() == <span class="keyword">false</span>, );</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    <span class="keywordtype">int</span> interval =</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        m_preferences.value(QStringLiteral(<span class="stringliteral">&quot;autoSave&quot;</span>), 300000).toInt();</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    <span class="keywordflow">if</span> (interval)</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;        m_autoSaveTimer-&gt;start(interval);</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    updateRecentFiles(</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;        m_preferences.value(QStringLiteral(<span class="stringliteral">&quot;recentFiles&quot;</span>)).toStringList());</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;}</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<span class="keywordtype">void</span> MainWindow::savePreferences()</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;{</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    m_preferences.beginGroup(QStringLiteral(<span class="stringliteral">&quot;MainWindow&quot;</span>));</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    m_preferences.setValue(QStringLiteral(<span class="stringliteral">&quot;geometry&quot;</span>), saveGeometry());</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    m_preferences.setValue(QStringLiteral(<span class="stringliteral">&quot;state&quot;</span>), saveState(LAYOUT_VERSION));</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    m_preferences.endGroup();</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    QStringList fileList;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    <span class="keywordflow">for</span> (QAction *fileAction : m_recentFileActions) {</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        <span class="keywordflow">if</span> (!fileAction-&gt;isVisible())</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        fileList.push_back(fileAction-&gt;text());</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    }</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    m_preferences.setValue(QStringLiteral(<span class="stringliteral">&quot;recentFiles&quot;</span>), fileList);</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;}</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="keywordtype">void</span> MainWindow::setupStartPage()</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;{</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    <span class="keyword">auto</span> *startPage = <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1StartPage.xhtml">StartPage</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    QString examplesDir =</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        QString::fromStdString(env::install_dir() + <span class="stringliteral">&quot;/share/scram/input&quot;</span>);</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    startPage-&gt;exampleModelsButton-&gt;setEnabled(QDir(examplesDir).exists());</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    connect(startPage-&gt;newModelButton, &amp;QAbstractButton::clicked,</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;            ui-&gt;actionNewModel, &amp;QAction::trigger);</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    connect(startPage-&gt;openModelButton, &amp;QAbstractButton::clicked,</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;            ui-&gt;actionOpenFiles, &amp;QAction::trigger);</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    connect(startPage-&gt;exampleModelsButton, &amp;QAbstractButton::clicked, <span class="keyword">this</span>,</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;            [<span class="keyword">this</span>, examplesDir] { openFiles(examplesDir); });</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    ui-&gt;tabWidget-&gt;addTab(startPage, startPage-&gt;windowIcon(),</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                          startPage-&gt;windowTitle());</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    startPage-&gt;recentFilesBox-&gt;setVisible(</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        m_recentFileActions.front()-&gt;isVisible());</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    <span class="keywordflow">for</span> (QAction *fileAction : m_recentFileActions) {</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;        <span class="keywordflow">if</span> (!fileAction-&gt;isVisible())</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        <span class="keyword">auto</span> *button =</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;            <span class="keyword">new</span> QCommandLinkButton(QFileInfo(fileAction-&gt;text()).fileName());</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        button-&gt;setToolTip(fileAction-&gt;text());</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        startPage-&gt;recentFilesBox-&gt;layout()-&gt;addWidget(button);</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;        connect(button, &amp;QAbstractButton::clicked, fileAction,</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;                &amp;QAction::trigger);</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    }</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;}</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;QString MainWindow::getModelNameForTitle()</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;{</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    <span class="keywordflow">return</span> m_model-&gt;HasDefaultName() ? tr(<span class="stringliteral">&quot;Unnamed Model&quot;</span>)</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;                                     : QString::fromStdString(m_model-&gt;name());</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;}</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;<span class="keywordtype">void</span> MainWindow::createNewModel()</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;{</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    <span class="keywordflow">if</span> (isWindowModified()) {</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        QMessageBox::StandardButton answer = QMessageBox::question(</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;            <span class="keyword">this</span>, tr(<span class="stringliteral">&quot;Save Model?&quot;</span>),</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;            tr(<span class="stringliteral">&quot;Save changes to model &#39;%1&#39; before closing?&quot;</span>)</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;                .arg(getModelNameForTitle()),</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;            QMessageBox::Save | QMessageBox::Discard | QMessageBox::Cancel,</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;            QMessageBox::Save);</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;        <span class="keywordflow">if</span> (answer == QMessageBox::Cancel)</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;        <span class="keywordflow">if</span> (answer == QMessageBox::Save) {</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;            saveModel();</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;            <span class="keywordflow">if</span> (isWindowModified())</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        }</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    }</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    m_inputFiles.clear();</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    m_model = std::make_shared&lt;mef::Model&gt;();</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;    emit <a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml#a26c21baa747d6a713c30efe494d64c1c">configChanged</a>();</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;}</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;<span class="keywordtype">void</span> MainWindow::openFiles(QString directory)</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;{</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;    QStringList filenames = QFileDialog::getOpenFileNames(</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;        <span class="keyword">this</span>, tr(<span class="stringliteral">&quot;Open Model Files&quot;</span>), directory,</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;        QStringLiteral(<span class="stringliteral">&quot;%1 (*.mef *.opsa *.opsa-mef *.xml);;%2 (*.*)&quot;</span>)</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;            .arg(tr(<span class="stringliteral">&quot;Model Exchange Format&quot;</span>), tr(<span class="stringliteral">&quot;All files&quot;</span>)));</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    <span class="keywordflow">if</span> (filenames.empty())</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    std::vector&lt;std::string&gt; inputFiles;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;filename : filenames)</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;        inputFiles.push_back(filename.toStdString());</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml#ad25ffda8b13e4743312f9a3cad96d271">addInputFiles</a>(inputFiles))</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        updateRecentFiles(filenames);</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;}</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;<span class="keywordtype">void</span> MainWindow::autoSaveModel()</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;{</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;    <span class="keywordflow">if</span> (!isWindowModified() || m_inputFiles.empty() || m_inputFiles.size() &gt; 1)</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    saveToFile(m_inputFiles.front());</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;}</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;<span class="keywordtype">void</span> MainWindow::saveModel()</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;{</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;    <span class="keywordflow">if</span> (m_inputFiles.empty() || m_inputFiles.size() &gt; 1)</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;        <span class="keywordflow">return</span> saveModelAs();</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    saveToFile(m_inputFiles.front());</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;}</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="keywordtype">void</span> MainWindow::saveModelAs()</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;{</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;    QString filename = QFileDialog::getSaveFileName(</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;        <span class="keyword">this</span>, tr(<span class="stringliteral">&quot;Save Model As&quot;</span>), QDir::homePath(),</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;        QStringLiteral(<span class="stringliteral">&quot;%1 (*.mef *.opsa *.opsa-mef *.xml);;%2 (*.*)&quot;</span>)</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;            .arg(tr(<span class="stringliteral">&quot;Model Exchange Format&quot;</span>), tr(<span class="stringliteral">&quot;All files&quot;</span>)));</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    <span class="keywordflow">if</span> (filename.isNull())</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;    saveToFile(filename.toStdString());</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;}</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;<span class="keywordtype">void</span> MainWindow::saveToFile(std::string destination)</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;{</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(!destination.empty(), );</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(m_model, );</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    <span class="keyword">namespace </span>fs = boost::filesystem;</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    fs::path temp_file = destination + <span class="stringliteral">&quot;.&quot;</span> + fs::unique_path().string();</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    <span class="keywordflow">try</span> {</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;        mef::Serialize(*m_model, temp_file.string());</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        <span class="keywordflow">try</span> {</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;            fs::rename(temp_file, destination);</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;        } <span class="keywordflow">catch</span> (<span class="keyword">const</span> fs::filesystem_error &amp;err) {</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;            SCRAM_THROW(IOError(err.what()))</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;                &lt;&lt; boost::errinfo_file_name(destination)</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;                &lt;&lt; boost::errinfo_errno(err.code().value());</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;        }</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    } <span class="keywordflow">catch</span> (<span class="keyword">const</span> IOError &amp;err) {</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;        displayError(err, tr(<span class="stringliteral">&quot;Save error&quot;</span>, <span class="stringliteral">&quot;error on saving to file&quot;</span>), <span class="keyword">this</span>);</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;    }</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;    m_undoStack-&gt;setClean();</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;    m_inputFiles.clear();</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;    m_inputFiles.push_back(std::move(destination));</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;}</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;<span class="keywordtype">void</span> MainWindow::updateRecentFiles(QStringList filePaths)</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;{</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    ui-&gt;menuRecentFiles-&gt;setEnabled(!filePaths.empty());</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;    <span class="keywordflow">if</span> (filePaths.empty()) {</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;        <span class="keywordflow">for</span> (QAction *fileAction : m_recentFileActions)</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;            fileAction-&gt;setVisible(<span class="keyword">false</span>);</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;    }</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;    <span class="keywordtype">int</span> remainingCapacity = m_recentFileActions.size() - filePaths.size();</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;    <span class="keywordflow">for</span> (QAction *fileAction : m_recentFileActions) {</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;        <span class="keywordflow">if</span> (remainingCapacity &lt;= 0)</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;        <span class="keywordflow">if</span> (!fileAction-&gt;isVisible())</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;        <span class="keywordflow">if</span> (filePaths.contains(fileAction-&gt;text()))</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;        filePaths.push_back(fileAction-&gt;text());</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;        --remainingCapacity;</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;    }</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    <span class="keyword">auto</span> it = m_recentFileActions.begin();</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;constFilePaths = filePaths; <span class="comment">// Detach prevention w/ for-each.</span></div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> QString &amp;filePath : constFilePaths) {</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        <span class="keywordflow">if</span> (it == m_recentFileActions.end())</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;        (*it)-&gt;setText(filePath);</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;        (*it)-&gt;setVisible(<span class="keyword">true</span>);</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;        ++it;</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;    }</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;    <span class="keywordflow">for</span> (; it != m_recentFileActions.end(); ++it)</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;        (*it)-&gt;setVisible(<span class="keyword">false</span>);</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;}</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;<span class="keywordtype">void</span> MainWindow::closeEvent(QCloseEvent *event)</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;{</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;    savePreferences();</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;    <span class="keywordflow">if</span> (!isWindowModified())</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">event</span>-&gt;accept();</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;    QMessageBox::StandardButton answer = QMessageBox::question(</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;        <span class="keyword">this</span>, tr(<span class="stringliteral">&quot;Save Model?&quot;</span>),</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;        tr(<span class="stringliteral">&quot;Save changes to model &#39;%1&#39; before closing?&quot;</span>)</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;            .arg(getModelNameForTitle()),</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;        QMessageBox::Save | QMessageBox::Discard | QMessageBox::Cancel,</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;        QMessageBox::Save);</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;    <span class="keywordflow">if</span> (answer == QMessageBox::Cancel)</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">event</span>-&gt;ignore();</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;    <span class="keywordflow">if</span> (answer == QMessageBox::Discard)</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">event</span>-&gt;accept();</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;    saveModel();</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    <span class="keywordflow">return</span> isWindowModified() ? <span class="keyword">event</span>-&gt;ignore() : <span class="keyword">event</span>-&gt;accept();</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;}</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;<span class="keywordtype">void</span> MainWindow::closeTab(<span class="keywordtype">int</span> index)</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;{</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;    <span class="keywordflow">if</span> (index &lt; 0)</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;    <span class="comment">// Ensure show/hide order.</span></div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    <span class="keywordflow">if</span> (index == ui-&gt;tabWidget-&gt;currentIndex()) {</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;        <span class="keywordtype">int</span> num_tabs = ui-&gt;tabWidget-&gt;count();</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;        <span class="keywordflow">if</span> (num_tabs &gt; 1) {</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;            ui-&gt;tabWidget-&gt;setCurrentIndex(index == (num_tabs - 1) ? index - 1</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;                                                                   : index + 1);</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;        }</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    }</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;    <span class="keyword">auto</span> *widget = ui-&gt;tabWidget-&gt;widget(index);</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;    ui-&gt;tabWidget-&gt;removeTab(index);</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;    <span class="keyword">delete</span> widget;</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;}</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;<span class="keywordtype">void</span> MainWindow::runAnalysis()</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;{</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(m_model, );</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;    <span class="keywordflow">if</span> (m_settings.probability_analysis()</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;        &amp;&amp; ext::any_of(m_model-&gt;basic_events(),</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;                       [](<span class="keyword">const</span> mef::BasicEventPtr &amp;basicEvent) {</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;                           <span class="keywordflow">return</span> !basicEvent-&gt;HasExpression();</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;                       })) {</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;        QMessageBox::critical(<span class="keyword">this</span>, tr(<span class="stringliteral">&quot;Validation Error&quot;</span>),</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;                              tr(<span class="stringliteral">&quot;Not all basic events have expressions &quot;</span></div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;                                 <span class="stringliteral">&quot;for probability analysis.&quot;</span>));</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;    }</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    <a class="code" href="classscram_1_1gui_1_1WaitDialog.xhtml">WaitDialog</a> progress(<span class="keyword">this</span>);</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;    <span class="comment">//: This is a message shown during the analysis run.</span></div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;    progress.setLabelText(tr(<span class="stringliteral">&quot;Running analysis...&quot;</span>));</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;    <span class="keyword">auto</span> analysis =</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;        std::make_unique&lt;core::RiskAnalysis&gt;(m_model.get(), m_settings);</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;    QFutureWatcher&lt;void&gt; futureWatcher;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;    connect(&amp;futureWatcher, SIGNAL(finished()), &amp;progress, SLOT(reset()));</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;    futureWatcher.setFuture(</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;        QtConcurrent::run([&amp;analysis] { analysis-&gt;Analyze(); }));</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    progress.exec();</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;    futureWatcher.waitForFinished();</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;    resetReportTree(std::move(analysis));</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;}</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;<span class="keywordtype">void</span> MainWindow::exportReportAs()</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;{</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(m_analysis, );</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;    QString filename = QFileDialog::getSaveFileName(</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;        <span class="keyword">this</span>, tr(<span class="stringliteral">&quot;Export Report As&quot;</span>), QDir::homePath(),</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;        QStringLiteral(<span class="stringliteral">&quot;%1 (*.mef *.opsa *.opsa-mef *.xml);;%2 (*.*)&quot;</span>)</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;            .arg(tr(<span class="stringliteral">&quot;Model Exchange Format&quot;</span>), tr(<span class="stringliteral">&quot;All files&quot;</span>)));</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;    <span class="keywordflow">if</span> (filename.isNull())</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;    <span class="keywordflow">try</span> {</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;        Reporter().Report(*m_analysis, filename.toStdString());</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;    } <span class="keywordflow">catch</span> (<span class="keyword">const</span> IOError &amp;err) {</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;        displayError(err, tr(<span class="stringliteral">&quot;Reporting error&quot;</span>), <span class="keyword">this</span>);</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;    }</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;}</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;<span class="keywordtype">void</span> MainWindow::setupZoomableView(<a class="code" href="classscram_1_1gui_1_1ZoomableView.xhtml">ZoomableView</a> *view)</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;{</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;    <span class="keyword">struct </span>ZoomFilter : <span class="keyword">public</span> QObject</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;    {</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;        ZoomFilter(<a class="code" href="classscram_1_1gui_1_1ZoomableView.xhtml">ZoomableView</a> *zoomable, <a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml">MainWindow</a> *window)</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;            : QObject(zoomable), m_window(window), m_zoomable(zoomable)</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;        {</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;        }</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;        <span class="keywordtype">bool</span> eventFilter(QObject *<span class="keywordtype">object</span>, QEvent *event)<span class="keyword"> override</span></div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;            <span class="keyword">auto</span> setEnabled = [<span class="keyword">this</span>](<span class="keywordtype">bool</span> state) {</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;                m_window-&gt;m_zoomBox-&gt;setEnabled(state);</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;                m_window-&gt;ui-&gt;actionZoomIn-&gt;setEnabled(state);</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;                m_window-&gt;ui-&gt;actionZoomIn-&gt;setEnabled(state);</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;                m_window-&gt;ui-&gt;actionZoomOut-&gt;setEnabled(state);</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;                m_window-&gt;ui-&gt;actionBestFit-&gt;setEnabled(state);</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;                m_window-&gt;ui-&gt;menuZoom-&gt;setEnabled(state);</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;            };</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;            <span class="keywordflow">if</span> (event-&gt;type() == QEvent::Show) {</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;                setEnabled(<span class="keyword">true</span>);</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;                m_window-&gt;m_zoomBox-&gt;setCurrentText(</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;                    QStringLiteral(<span class="stringliteral">&quot;%1%&quot;</span>).arg(m_zoomable-&gt;getZoom()));</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;                connect(m_zoomable, &amp;<a class="code" href="classscram_1_1gui_1_1ZoomableView.xhtml#ac755fbceb4cf5149263199d590244c53">ZoomableView::zoomChanged</a>,</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;                        m_window-&gt;m_zoomBox, [<span class="keyword">this</span>](<span class="keywordtype">int</span> level) {</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;                            m_window-&gt;m_zoomBox-&gt;setCurrentText(</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;                                QStringLiteral(<span class="stringliteral">&quot;%1%&quot;</span>).arg(level));</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;                        });</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;                connect(m_window-&gt;m_zoomBox, &amp;QComboBox::currentTextChanged,</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;                        m_zoomable, [<span class="keyword">this</span>](QString text) {</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;                            <span class="comment">// Check if the user editing the box.</span></div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;                            if (m_window-&gt;m_zoomBox-&gt;lineEdit()-&gt;isModified())</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;                                return;</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;                            text.remove(QLatin1Char(<span class="stringliteral">&#39;%&#39;</span>));</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;                            m_zoomable-&gt;setZoom(text.toInt());</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;                        });</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;                connect(m_window-&gt;m_zoomBox-&gt;lineEdit(),</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;                        &amp;QLineEdit::editingFinished, m_zoomable, [<span class="keyword">this</span>] {</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;                            QString text = m_window-&gt;m_zoomBox-&gt;currentText();</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;                            text.remove(QLatin1Char(<span class="charliteral">&#39;%&#39;</span>));</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;                            m_zoomable-&gt;setZoom(text.toInt());</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;                        });</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;                connect(m_window-&gt;ui-&gt;actionZoomIn, &amp;QAction::triggered,</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;                        m_zoomable, [<span class="keyword">this</span>] { m_zoomable-&gt;zoomIn(5); });</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;                connect(m_window-&gt;ui-&gt;actionZoomOut, &amp;QAction::triggered,</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;                        m_zoomable, [<span class="keyword">this</span>] { m_zoomable-&gt;zoomOut(5); });</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;                connect(m_window-&gt;ui-&gt;actionBestFit, &amp;QAction::triggered,</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;                        m_zoomable, &amp;<a class="code" href="classscram_1_1gui_1_1ZoomableView.xhtml#a859d676e6600e263ae4487bc1845385d">ZoomableView::zoomBestFit</a>);</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (event-&gt;type() == QEvent::Hide) {</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;                setEnabled(<span class="keyword">false</span>);</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;                disconnect(m_window-&gt;m_zoomBox-&gt;lineEdit(), 0, m_zoomable, 0);</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;                disconnect(m_zoomable, 0, m_window-&gt;m_zoomBox, 0);</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;                disconnect(m_window-&gt;m_zoomBox, 0, m_zoomable, 0);</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;                disconnect(m_window-&gt;ui-&gt;actionZoomIn, 0, m_zoomable, 0);</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;                disconnect(m_window-&gt;ui-&gt;actionZoomOut, 0, m_zoomable, 0);</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;                disconnect(m_window-&gt;ui-&gt;actionBestFit, 0, m_zoomable, 0);</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;            }</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;            <span class="keywordflow">return</span> QObject::eventFilter(<span class="keywordtype">object</span>, event);</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;        }</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;        <a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml">MainWindow</a> *m_window;</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;        <a class="code" href="classscram_1_1gui_1_1ZoomableView.xhtml">ZoomableView</a> *m_zoomable;</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;    };</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;    view-&gt;installEventFilter(<span class="keyword">new</span> ZoomFilter(view, <span class="keyword">this</span>));</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;}</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;<span class="keywordtype">void</span> MainWindow::setupPrintableView(T *view)</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;{</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;    static_assert(std::is_base_of_v&lt;QObject, T&gt;, <span class="stringliteral">&quot;Missing QObject&quot;</span>);</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;    <span class="keyword">struct </span>PrintFilter : <span class="keyword">public</span> QObject</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;    {</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;        PrintFilter(T *printable, <a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml">MainWindow</a> *window)</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;            : QObject(printable), m_window(window), m_printable(printable)</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;        {</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;        }</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;        <span class="keywordtype">bool</span> eventFilter(QObject *<span class="keywordtype">object</span>, QEvent *event)<span class="keyword"> override</span></div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;            <span class="keyword">auto</span> setEnabled = [<span class="keyword">this</span>](<span class="keywordtype">bool</span> state) {</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;                m_window-&gt;ui-&gt;actionPrint-&gt;setEnabled(state);</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;                m_window-&gt;ui-&gt;actionPrintPreview-&gt;setEnabled(state);</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;            };</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;            <span class="keywordflow">if</span> (event-&gt;type() == QEvent::Show) {</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;                setEnabled(<span class="keyword">true</span>);</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;                connect(m_window-&gt;ui-&gt;actionPrint, &amp;QAction::triggered,</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;                        m_printable, [<span class="keyword">this</span>] { m_printable-&gt;print(); });</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;                connect(m_window-&gt;ui-&gt;actionPrintPreview, &amp;QAction::triggered,</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;                        m_printable, [<span class="keyword">this</span>] { m_printable-&gt;printPreview(); });</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (event-&gt;type() == QEvent::Hide) {</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;                setEnabled(<span class="keyword">false</span>);</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;                disconnect(m_window-&gt;ui-&gt;actionPrint, 0, m_printable, 0);</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;                disconnect(m_window-&gt;ui-&gt;actionPrintPreview, 0, m_printable, 0);</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;            }</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;            <span class="keywordflow">return</span> QObject::eventFilter(<span class="keywordtype">object</span>, event);</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;        }</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;        <a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml">MainWindow</a> *m_window;</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;        T *m_printable;</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;    };</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;    view-&gt;installEventFilter(<span class="keyword">new</span> PrintFilter(view, <span class="keyword">this</span>));</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;}</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;<span class="keywordtype">void</span> MainWindow::setupExportableView(T *view)</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;{</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;    <span class="keyword">struct </span>ExportFilter : <span class="keyword">public</span> QObject</div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;    {</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;        ExportFilter(T *exportable, <a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml">MainWindow</a> *window)</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;            : QObject(exportable), m_window(window), m_exportable(exportable)</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;        {</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;        }</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;        <span class="keywordtype">bool</span> eventFilter(QObject *<span class="keywordtype">object</span>, QEvent *event)<span class="keyword"> override</span></div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;            <span class="keywordflow">if</span> (event-&gt;type() == QEvent::Show) {</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;                m_window-&gt;ui-&gt;actionExportAs-&gt;setEnabled(<span class="keyword">true</span>);</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;                connect(m_window-&gt;ui-&gt;actionExportAs, &amp;QAction::triggered,</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;                        m_exportable, [<span class="keyword">this</span>] { m_exportable-&gt;exportAs(); });</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (event-&gt;type() == QEvent::Hide) {</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;                m_window-&gt;ui-&gt;actionExportAs-&gt;setEnabled(<span class="keyword">false</span>);</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;                disconnect(m_window-&gt;ui-&gt;actionExportAs, 0, m_exportable, 0);</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;            }</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;            <span class="keywordflow">return</span> QObject::eventFilter(<span class="keywordtype">object</span>, event);</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;        }</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;        <a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml">MainWindow</a> *m_window;</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;        T *m_exportable;</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;    };</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;    view-&gt;installEventFilter(<span class="keyword">new</span> ExportFilter(view, <span class="keyword">this</span>));</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;}</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;<span class="keywordtype">void</span> MainWindow::setupSearchable(QObject *view, T *model)</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;{</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;    <span class="keyword">struct </span>SearchFilter : <span class="keyword">public</span> QObject</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;    {</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;        SearchFilter(T *searchable, <a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml">MainWindow</a> *window)</div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;            : QObject(searchable), m_window(window), m_searchable(searchable)</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;        {</div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;        }</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;</div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;        <span class="keywordtype">bool</span> eventFilter(QObject *<span class="keywordtype">object</span>, QEvent *event)<span class="keyword"> override</span></div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;            <span class="keywordflow">if</span> (event-&gt;type() == QEvent::Show) {</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;                m_window-&gt;m_searchBar-&gt;setHidden(<span class="keyword">false</span>);</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;                m_window-&gt;m_searchBar-&gt;setText(</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;                    m_searchable-&gt;filterRegExp().pattern());</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;                connect(m_window-&gt;m_searchBar, &amp;QLineEdit::editingFinished,</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;                        <span class="keywordtype">object</span>, [<span class="keyword">this</span>] {</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;                            m_searchable-&gt;setFilterRegExp(</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;                                m_window-&gt;m_searchBar-&gt;text());</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;                        });</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (event-&gt;type() == QEvent::Hide) {</div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;                m_window-&gt;m_searchBar-&gt;setHidden(<span class="keyword">true</span>);</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;                disconnect(m_window-&gt;m_searchBar, 0, <span class="keywordtype">object</span>, 0);</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;            }</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;            <span class="keywordflow">return</span> QObject::eventFilter(<span class="keywordtype">object</span>, event);</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;        }</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;</div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;        <a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml">MainWindow</a> *m_window;</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;        T *m_searchable;</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;    };</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;    view-&gt;installEventFilter(<span class="keyword">new</span> SearchFilter(model, <span class="keyword">this</span>));</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;}</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;<span class="comment">/// Specialization to find the fault tree container of a gate.</span></div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;<span class="comment">/// @param[in] gate  The gate belonging exactly to one fault tree.</span></div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;<span class="comment">/// @returns The fault tree container with the given gate.</span></div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00995"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1MainWindow.xhtml#a30244c6673b64228daef262210be358c">  995</a></span>&#160;mef::FaultTree *MainWindow::getFaultTree(mef::Gate *gate)</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;<span class="comment">    /// @todo Duplicate code from EventDialog.</span></div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;<span class="comment"></span>    <span class="keyword">auto</span> it = boost::find_if(m_model-&gt;fault_trees(),</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;                             [&amp;gate](<span class="keyword">const</span> mef::FaultTreePtr &amp;faultTree) {</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;                                 <span class="keywordflow">return</span> faultTree-&gt;gates().count(gate-&gt;name());</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;                             });</div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(it != m_model-&gt;fault_trees().end(), <span class="keyword">nullptr</span>);</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;    <span class="keywordflow">return</span> it-&gt;get();</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;}</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;<span class="keywordtype">void</span> MainWindow::removeEvent(T *event, mef::FaultTree *faultTree)</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;{</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;    m_undoStack-&gt;push(</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;        <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1RemoveEvent.xhtml">model::Model::RemoveEvent&lt;T&gt;</a>(event, m_guiModel.get(), faultTree));</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;}</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;<span class="comment"></span></div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;<span class="comment">/// Specialization to deal with complexities of gate/fault-tree removal.</span></div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l01015"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1MainWindow.xhtml#a643cb1334167f1b8ee322ff7b8950335"> 1015</a></span>&#160;<span class="keywordtype">void</span> MainWindow::removeEvent(<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">model::Gate</a> *event, mef::FaultTree *faultTree)</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;{</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(faultTree-&gt;top_events().empty() == <span class="keyword">false</span>, );</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(faultTree-&gt;gates().empty() == <span class="keyword">false</span>, );</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;    <span class="keywordflow">if</span> (faultTree-&gt;top_events().front() != <span class="keyword">event</span>-&gt;data()) {</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;        m_undoStack-&gt;push(<span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1RemoveEvent.xhtml">model::Model::RemoveEvent&lt;model::Gate&gt;</a>(</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;            event, m_guiModel.get(), faultTree));</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;    }</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;    QString faultTreeName = QString::fromStdString(faultTree-&gt;name());</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;    <span class="keywordflow">if</span> (faultTree-&gt;gates().size() &gt; 1) {</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;        QMessageBox::information(</div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;            <span class="keyword">this</span>,</div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;            <span class="comment">//: The container w/ dependents still in the model.</span></div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;            tr(<span class="stringliteral">&quot;Dependency Container Removal&quot;</span>),</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;            tr(<span class="stringliteral">&quot;Fault tree &#39;%1&#39; with root &#39;%2&#39; is not removable because&quot;</span></div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;               <span class="stringliteral">&quot; it has dependent non-root gates.&quot;</span></div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;               <span class="stringliteral">&quot; Remove the gates from the fault tree&quot;</span></div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;               <span class="stringliteral">&quot; before this operation.&quot;</span>)</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;                .arg(faultTreeName, event-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">id</a>()));</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;    }</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;    m_undoStack-&gt;beginMacro(tr(<span class="stringliteral">&quot;Remove fault tree &#39;%1&#39; with root &#39;%2&#39;&quot;</span>)</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;                                .arg(faultTreeName, event-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">id</a>()));</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;    m_undoStack-&gt;push(<span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1RemoveEvent.xhtml">model::Model::RemoveEvent&lt;model::Gate&gt;</a>(</div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;        event, m_guiModel.get(), faultTree));</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;    m_undoStack-&gt;push(</div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;        <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1RemoveFaultTree.xhtml">model::Model::RemoveFaultTree</a>(faultTree, m_guiModel.get()));</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;    m_undoStack-&gt;endMacro();</div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;}</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;<span class="keywordtype">void</span> MainWindow::setupRemovable(QAbstractItemView *view)</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;{</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;    <span class="keyword">struct </span>RemoveFilter : <span class="keyword">public</span> QObject</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;    {</div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;        RemoveFilter(QAbstractItemView *removable, <a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml">MainWindow</a> *window)</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;            : QObject(removable), m_window(window), m_removable(removable)</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;        {</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;        }</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;        <span class="keywordtype">void</span> react(<span class="keyword">const</span> QModelIndexList &amp;indexes)</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;        {</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;            m_window-&gt;ui-&gt;actionRemoveElement-&gt;setEnabled(</div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;                !(indexes.empty() || indexes.front().parent().isValid()));</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;        }</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;        <span class="keywordtype">bool</span> eventFilter(QObject *<span class="keywordtype">object</span>, QEvent *event)<span class="keyword"> override</span></div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;            <span class="keywordflow">if</span> (event-&gt;type() == QEvent::Show) {</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;                react(m_removable-&gt;selectionModel()-&gt;selectedIndexes());</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;                connect(</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;                    m_removable-&gt;model(), &amp;QAbstractItemModel::modelReset,</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;                    m_removable, [<span class="keyword">this</span>] {</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;                        react(m_removable-&gt;selectionModel()-&gt;selectedIndexes());</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;                    });</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;                connect(m_removable-&gt;selectionModel(),</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;                        &amp;QItemSelectionModel::selectionChanged,</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;                        m_window-&gt;ui-&gt;actionRemoveElement,</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;                        [<span class="keyword">this</span>](<span class="keyword">const</span> QItemSelection &amp;selected) {</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;                            react(selected.indexes());</div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;                        });</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;                connect(</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;                    m_window-&gt;ui-&gt;actionRemoveElement, &amp;QAction::triggered,</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;                    m_removable, [<span class="keyword">this</span>] {</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;                        auto currentIndexes =</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;                            m_removable-&gt;selectionModel()-&gt;selectedIndexes();</div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;                        GUI_ASSERT(currentIndexes.empty() == false, );</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;                        auto index = currentIndexes.front();</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;                        GUI_ASSERT(index.parent().isValid() == false, );</div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;                        auto *element = static_cast&lt;T *&gt;(</div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;                            index.data(Qt::UserRole).value&lt;void *&gt;());</div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;                        GUI_ASSERT(element, );</div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;                        auto parents =</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;                            m_window-&gt;m_guiModel-&gt;parents(element-&gt;data());</div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;                        if (!parents.empty()) {</div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;                            QMessageBox::information(</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;                                m_window,</div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;                                <span class="comment">//: The event w/ dependents in the model.</span></div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;                                MainWindow::tr(<span class="stringliteral">&quot;Dependency Event Removal&quot;</span>),</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;                                MainWindow::tr(</div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;                                    <span class="stringliteral">&quot;Event &#39;%1&#39; is not removable because&quot;</span></div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;                                    <span class="stringliteral">&quot; it has dependents.&quot;</span></div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;                                    <span class="stringliteral">&quot; Remove the event from the dependents&quot;</span></div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;                                    <span class="stringliteral">&quot; before this operation.&quot;</span>)</div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;                                    .arg(element-&gt;id()));</div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;                            return;</div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;                        }</div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;                        m_window-&gt;removeEvent(</div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;                            element, m_window-&gt;getFaultTree(element-&gt;data()));</div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;                    });</div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (event-&gt;type() == QEvent::Hide) {</div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;                m_window-&gt;ui-&gt;actionRemoveElement-&gt;setEnabled(<span class="keyword">false</span>);</div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;                disconnect(m_window-&gt;ui-&gt;actionRemoveElement, 0, m_removable,</div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;                           0);</div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;            }</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;            <span class="keywordflow">return</span> QObject::eventFilter(<span class="keywordtype">object</span>, event);</div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;        }</div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;</div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;        <a class="code" href="classscram_1_1gui_1_1MainWindow.xhtml">MainWindow</a> *m_window;</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;        QAbstractItemView *m_removable;</div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;    };</div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;    view-&gt;installEventFilter(<span class="keyword">new</span> RemoveFilter(view, <span class="keyword">this</span>));</div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;}</div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;<span class="comment"></span></div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;<span class="comment">/// Specialization to construct formula out of event editor data.</span></div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;<span class="comment">/// @param[in] dialog  The valid event dialog with data for a gate formula.</span></div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;<span class="comment">/// @returns A new formula with arguments from the event dialog.</span></div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l01127"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1MainWindow.xhtml#acc2ab732bac5669252104ac4df4b3d11"> 1127</a></span>&#160;mef::FormulaPtr MainWindow::extract(<span class="keyword">const</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> &amp;dialog)</div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;{</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;    <span class="keyword">auto</span> formula = std::make_unique&lt;mef::Formula&gt;(dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#ac9d1c80c10d678aadeea36310c242444">connective</a>());</div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;    <span class="keywordflow">if</span> (formula-&gt;type() == mef::kVote)</div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;        formula-&gt;vote_number(dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#ac413f5e1b3f9795c80d78a512ad7f0cf">voteNumber</a>());</div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;</div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> std::string &amp;arg : dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a3f52697e4e16187eb133aa1d59d249e8">arguments</a>()) {</div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;        <span class="keywordflow">try</span> {</div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;            formula-&gt;AddArgument(m_model-&gt;GetEvent(arg));</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;        } <span class="keywordflow">catch</span> (<span class="keyword">const</span> mef::UndefinedElement &amp;) {</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;            <span class="keyword">auto</span> argEvent = std::make_unique&lt;mef::BasicEvent&gt;(arg);</div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;            argEvent-&gt;AddAttribute({<span class="stringliteral">&quot;flavor&quot;</span>, <span class="stringliteral">&quot;undeveloped&quot;</span>, <span class="stringliteral">&quot;&quot;</span>});</div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;            formula-&gt;AddArgument(argEvent.get());<span class="comment"></span></div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;<span class="comment">            /// @todo Add into the parent undo.</span></div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;<span class="comment"></span>            m_undoStack-&gt;push(<span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1AddEvent.xhtml">model::Model::AddEvent&lt;model::BasicEvent&gt;</a>(</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;                std::move(argEvent), m_guiModel.get()));</div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;        }</div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;    }</div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;    <span class="keywordflow">return</span> formula;</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;}</div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;<span class="comment"></span></div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;<span class="comment">/// Specialization to construct basic event out of event editor data.</span></div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l01150"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1MainWindow.xhtml#a73c95b969d3ad6061b345040f9eed585"> 1150</a></span>&#160;mef::BasicEventPtr MainWindow::extract(<span class="keyword">const</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> &amp;dialog)</div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;{</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;    <span class="keyword">auto</span> basicEvent =</div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;        std::make_unique&lt;mef::BasicEvent&gt;(dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a0c144e53e44d5b9524d60698cb356653">name</a>().toStdString());</div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;    basicEvent-&gt;label(dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a4beb17e160a4255cd5ea602753689070">label</a>().toStdString());</div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;    <span class="keywordflow">switch</span> (dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#af80067675ae0b3f02337533323cf1464">currentType</a>()) {</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;    <span class="keywordflow">case</span> EventDialog::BasicEvent:</div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;    <span class="keywordflow">case</span> EventDialog::Undeveloped:</div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;        basicEvent-&gt;AddAttribute({<span class="stringliteral">&quot;flavor&quot;</span>, <span class="stringliteral">&quot;undeveloped&quot;</span>, <span class="stringliteral">&quot;&quot;</span>});</div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;    <span class="keywordflow">case</span> EventDialog::Conditional:</div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;        basicEvent-&gt;AddAttribute({<span class="stringliteral">&quot;flavor&quot;</span>, <span class="stringliteral">&quot;conditional&quot;</span>, <span class="stringliteral">&quot;&quot;</span>});</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;        <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;unexpected event type&quot;</span>, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;    }</div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;    <span class="keywordflow">if</span> (<span class="keyword">auto</span> p_expression = dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a0fbc46dd72d7473a8682484172bd7b3c">expression</a>()) {</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;        basicEvent-&gt;expression(p_expression.get());</div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;        m_model-&gt;Add(std::move(p_expression));</div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;    }</div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;    <span class="keywordflow">return</span> basicEvent;</div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;}</div><div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;<span class="comment"></span></div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;<span class="comment">/// Specialization to construct house event out of event editor data.</span></div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l01176"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1MainWindow.xhtml#a28a90c0994118320191093128c80a948"> 1176</a></span>&#160;mef::HouseEventPtr MainWindow::extract(<span class="keyword">const</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> &amp;dialog)</div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;{</div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#af80067675ae0b3f02337533323cf1464">currentType</a>() == EventDialog::HouseEvent, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;    <span class="keyword">auto</span> houseEvent =</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;        std::make_unique&lt;mef::HouseEvent&gt;(dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a0c144e53e44d5b9524d60698cb356653">name</a>().toStdString());</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;    houseEvent-&gt;label(dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a4beb17e160a4255cd5ea602753689070">label</a>().toStdString());</div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;    houseEvent-&gt;state(dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a1522bc4b9c9c0ef7d82b3a27d1778108">booleanConstant</a>());</div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;    <span class="keywordflow">return</span> houseEvent;</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;}</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;<span class="comment"></span></div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;<span class="comment">/// Specialization to construct gate out of event editor data.</span></div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l01188"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1MainWindow.xhtml#a17853764a7dc4d1f08fcb8e8099562e2"> 1188</a></span>&#160;mef::GatePtr MainWindow::extract(<span class="keyword">const</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> &amp;dialog)</div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;{</div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#af80067675ae0b3f02337533323cf1464">currentType</a>() == EventDialog::Gate, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;    <span class="keyword">auto</span> gate = std::make_unique&lt;mef::Gate&gt;(dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a0c144e53e44d5b9524d60698cb356653">name</a>().toStdString());</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;    gate-&gt;label(dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a4beb17e160a4255cd5ea602753689070">label</a>().toStdString());</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;    gate-&gt;formula(extract&lt;mef::Formula&gt;(dialog));</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;    <span class="keywordflow">return</span> gate;</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;}</div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;</div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;<span class="keywordtype">void</span> MainWindow::addElement()</div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;{</div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;    <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> dialog(m_model.get(), <span class="keyword">this</span>);</div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;    <span class="keywordflow">if</span> (dialog.exec() == QDialog::Rejected)</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;    <span class="keywordflow">switch</span> (dialog.currentType()) {</div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;    <span class="keywordflow">case</span> EventDialog::HouseEvent:</div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;        m_undoStack-&gt;push(<span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1AddEvent.xhtml">model::Model::AddEvent&lt;model::HouseEvent&gt;</a>(</div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;            extract&lt;mef::HouseEvent&gt;(dialog), m_guiModel.get()));</div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;    <span class="keywordflow">case</span> EventDialog::BasicEvent:</div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;    <span class="keywordflow">case</span> EventDialog::Undeveloped:</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;    <span class="keywordflow">case</span> EventDialog::Conditional:</div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;        m_undoStack-&gt;push(<span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1AddEvent.xhtml">model::Model::AddEvent&lt;model::BasicEvent&gt;</a>(</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;            extract&lt;mef::BasicEvent&gt;(dialog), m_guiModel.get()));</div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;    <span class="keywordflow">case</span> EventDialog::Gate: {</div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;        m_undoStack-&gt;beginMacro(</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;            <span class="comment">//: Addition of a fault by defining its root event first.</span></div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;            tr(<span class="stringliteral">&quot;Add fault tree &#39;%1&#39; with gate &#39;%2&#39;&quot;</span>)</div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;                .arg(QString::fromStdString(dialog.faultTree()),</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;                     dialog.name()));</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;        <span class="keyword">auto</span> faultTree = std::make_unique&lt;mef::FaultTree&gt;(dialog.faultTree());</div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;        <span class="keyword">auto</span> *faultTreeAddress = faultTree.get();</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;        m_undoStack-&gt;push(<span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree.xhtml">model::Model::AddFaultTree</a>(std::move(faultTree),</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;                                                         m_guiModel.get()));</div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;        m_undoStack-&gt;push(<span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1AddEvent.xhtml">model::Model::AddEvent&lt;model::Gate&gt;</a>(</div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;            extract&lt;mef::Gate&gt;(dialog), m_guiModel.get(), faultTreeAddress));</div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;        faultTreeAddress-&gt;CollectTopEvents();</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;        m_undoStack-&gt;endMacro();</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;    } <span class="keywordflow">break</span>;</div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;        <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;unexpected event type&quot;</span>, );</div><div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;    }</div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;}</div><div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;</div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;mef::FaultTree *MainWindow::getFaultTree(<span class="keyword">const</span> <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> &amp;dialog)</div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;{</div><div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;    <span class="keywordflow">if</span> (dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a4b0937931be261ac68e45aee3062daf9">faultTree</a>().empty())</div><div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;    <span class="keyword">auto</span> it = m_model-&gt;fault_trees().find(dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a4b0937931be261ac68e45aee3062daf9">faultTree</a>());</div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(it != m_model-&gt;fault_trees().end(), <span class="keyword">nullptr</span>);</div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;    <span class="keywordflow">return</span> it-&gt;get();</div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;}</div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;</div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;<span class="keywordtype">void</span> MainWindow::editElement(<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> *dialog, <a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">model::Element</a> *element)</div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;{</div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;    <span class="keywordflow">if</span> (dialog-&gt;<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a0c144e53e44d5b9524d60698cb356653">name</a>() != element-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">id</a>()) {</div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;        m_undoStack-&gt;push(<span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Element_1_1SetId.xhtml">model::Element::SetId&lt;T&gt;</a>(</div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;            static_cast&lt;T *&gt;(element), dialog-&gt;<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a0c144e53e44d5b9524d60698cb356653">name</a>(), m_model.get(),</div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;            getFaultTree(*dialog)));</div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;    }</div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;    <span class="keywordflow">if</span> (dialog-&gt;<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a4beb17e160a4255cd5ea602753689070">label</a>() != element-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a6d4704b8160d88d8a49f76096ee45677">label</a>())</div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;        m_undoStack-&gt;push(</div><div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;            <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Element_1_1SetLabel.xhtml">model::Element::SetLabel</a>(element, dialog-&gt;<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#a4beb17e160a4255cd5ea602753689070">label</a>()));</div><div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;}</div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;</div><div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;<span class="keywordtype">void</span> MainWindow::editElement(<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> *dialog, <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">model::BasicEvent</a> *element)</div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;{</div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;    editElement&lt;model::BasicEvent&gt;(dialog, element);</div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;    <span class="keywordflow">switch</span> (dialog-&gt;currentType()) {</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;    <span class="keywordflow">case</span> EventDialog::HouseEvent:</div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;        m_undoStack-&gt;push(<span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1ChangeEventType.xhtml">model::Model::ChangeEventType</a>&lt;<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">model::BasicEvent</a>,</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;                                                            <a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">model::HouseEvent</a>&gt;(</div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;            element, extract&lt;mef::HouseEvent&gt;(*dialog), m_guiModel.get(),</div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;            getFaultTree(*dialog)));</div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;    <span class="keywordflow">case</span> EventDialog::BasicEvent:</div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;    <span class="keywordflow">case</span> EventDialog::Undeveloped:</div><div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;    <span class="keywordflow">case</span> EventDialog::Conditional:</div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;    <span class="keywordflow">case</span> EventDialog::Gate:</div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;        m_undoStack-&gt;push(</div><div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;            <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1ChangeEventType.xhtml">model::Model::ChangeEventType&lt;model::BasicEvent, model::Gate&gt;</a>(</div><div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;                element, extract&lt;mef::Gate&gt;(*dialog), m_guiModel.get(),</div><div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;                getFaultTree(*dialog)));</div><div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;        <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;Unexpected event type&quot;</span>, );</div><div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;    }</div><div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;    std::unique_ptr&lt;mef::Expression&gt; expression = dialog-&gt;expression();</div><div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;    <span class="keyword">auto</span> isEqual = [](mef::Expression *lhs, mef::Expression *rhs) {</div><div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;        <span class="keywordflow">if</span> (lhs == rhs) <span class="comment">// Assumes immutable expressions.</span></div><div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;        <span class="keywordflow">if</span> (!lhs || !rhs)</div><div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;</div><div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;        <span class="keyword">auto</span> *const_lhs = <span class="keyword">dynamic_cast&lt;</span>mef::ConstantExpression *<span class="keyword">&gt;</span>(lhs);</div><div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;        <span class="keyword">auto</span> *const_rhs = <span class="keyword">dynamic_cast&lt;</span>mef::ConstantExpression *<span class="keyword">&gt;</span>(rhs);</div><div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;        <span class="keywordflow">if</span> (const_lhs &amp;&amp; const_rhs &amp;&amp; const_lhs-&gt;value() == const_rhs-&gt;value())</div><div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;</div><div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;        <span class="keyword">auto</span> *exp_lhs = <span class="keyword">dynamic_cast&lt;</span>mef::Exponential *<span class="keyword">&gt;</span>(lhs);</div><div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;        <span class="keyword">auto</span> *exp_rhs = <span class="keyword">dynamic_cast&lt;</span>mef::Exponential *<span class="keyword">&gt;</span>(rhs);</div><div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;        <span class="keywordflow">if</span> (exp_lhs &amp;&amp; exp_rhs</div><div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;            &amp;&amp; exp_lhs-&gt;args().front()-&gt;value()</div><div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;                   == exp_rhs-&gt;args().front()-&gt;value())</div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;</div><div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;    };</div><div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;</div><div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;    <span class="keywordflow">if</span> (!isEqual(expression.get(), element-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a4252873cbeb2ec908843a8aa222804a4">expression</a>())) {</div><div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;        m_undoStack-&gt;push(</div><div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160;            <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetExpression.xhtml">model::BasicEvent::SetExpression</a>(element, expression.get()));</div><div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;        m_model-&gt;Add(std::move(expression));</div><div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160;    }</div><div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;</div><div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;    <span class="keyword">auto</span> flavorToType = [](<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a83e39d8225b8a2d4e1a8a00cf5e7f76e">model::BasicEvent::Flavor</a> flavor) {</div><div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;        <span class="keywordflow">switch</span> (flavor) {</div><div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;        <span class="keywordflow">case</span> model::BasicEvent::Basic:</div><div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;            <span class="keywordflow">return</span> EventDialog::BasicEvent;</div><div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;        <span class="keywordflow">case</span> model::BasicEvent::Undeveloped:</div><div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;            <span class="keywordflow">return</span> EventDialog::Undeveloped;</div><div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;        <span class="keywordflow">case</span> model::BasicEvent::Conditional:</div><div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;            <span class="keywordflow">return</span> EventDialog::Conditional;</div><div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;        }</div><div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;        assert(<span class="keyword">false</span>);</div><div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;    };</div><div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;</div><div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;    <span class="keywordflow">if</span> (dialog-&gt;currentType() != flavorToType(element-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a827dd95218bb3eece34e5777d487a590">flavor</a>())) {</div><div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;        m_undoStack-&gt;push([&amp;dialog, &amp;element]() -&gt; QUndoCommand * {</div><div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;            <span class="keywordflow">switch</span> (dialog-&gt;currentType()) {</div><div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;            <span class="keywordflow">case</span> EventDialog::BasicEvent:</div><div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetFlavor.xhtml">model::BasicEvent::SetFlavor</a>(</div><div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;                    element, model::BasicEvent::Basic);</div><div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;            <span class="keywordflow">case</span> EventDialog::Undeveloped:</div><div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetFlavor.xhtml">model::BasicEvent::SetFlavor</a>(</div><div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;                    element, model::BasicEvent::Undeveloped);</div><div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;            <span class="keywordflow">case</span> EventDialog::Conditional:</div><div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetFlavor.xhtml">model::BasicEvent::SetFlavor</a>(</div><div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;                    element, model::BasicEvent::Conditional);</div><div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;                <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;Unexpected event type&quot;</span>, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;            }</div><div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;        }());</div><div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;    }</div><div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;}</div><div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;</div><div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;<span class="keywordtype">void</span> MainWindow::editElement(<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> *dialog, <a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">model::HouseEvent</a> *element)</div><div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;{</div><div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;    editElement&lt;model::HouseEvent&gt;(dialog, element);</div><div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;    <span class="keywordflow">switch</span> (dialog-&gt;currentType()) {</div><div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;    <span class="keywordflow">case</span> EventDialog::HouseEvent:</div><div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;    <span class="keywordflow">case</span> EventDialog::BasicEvent:</div><div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;    <span class="keywordflow">case</span> EventDialog::Undeveloped:</div><div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;    <span class="keywordflow">case</span> EventDialog::Conditional:</div><div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;        m_undoStack-&gt;push(<span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1ChangeEventType.xhtml">model::Model::ChangeEventType</a>&lt;<a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">model::HouseEvent</a>,</div><div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;                                                            <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">model::BasicEvent</a>&gt;(</div><div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;            element, extract&lt;mef::BasicEvent&gt;(*dialog), m_guiModel.get(),</div><div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;            getFaultTree(*dialog)));</div><div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;    <span class="keywordflow">case</span> EventDialog::Gate:</div><div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;        m_undoStack-&gt;push(</div><div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;            <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1ChangeEventType.xhtml">model::Model::ChangeEventType&lt;model::HouseEvent, model::Gate&gt;</a>(</div><div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160;                element, extract&lt;mef::Gate&gt;(*dialog), m_guiModel.get(),</div><div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;                getFaultTree(*dialog)));</div><div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;        <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;Unexpected event type&quot;</span>, );</div><div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;    }</div><div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;    <span class="keywordflow">if</span> (dialog-&gt;booleanConstant() != element-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml#a5d7cf6bceaeb71186648ee0e30bb9710">state</a>())</div><div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;        m_undoStack-&gt;push(<span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent_1_1SetState.xhtml">model::HouseEvent::SetState</a>(</div><div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;            element, dialog-&gt;booleanConstant()));</div><div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;}</div><div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;</div><div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;<span class="keywordtype">void</span> MainWindow::editElement(<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> *dialog, <a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">model::Gate</a> *element)</div><div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160;{</div><div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;    editElement&lt;model::Gate&gt;(dialog, element);</div><div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;    <span class="keywordflow">switch</span> (dialog-&gt;currentType()) {</div><div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;    <span class="keywordflow">case</span> EventDialog::HouseEvent:</div><div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;        m_undoStack-&gt;push(</div><div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160;            <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1ChangeEventType.xhtml">model::Model::ChangeEventType&lt;model::Gate, model::HouseEvent&gt;</a>(</div><div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;                element, extract&lt;mef::HouseEvent&gt;(*dialog), m_guiModel.get(),</div><div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160;                getFaultTree(*dialog)));</div><div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;    <span class="keywordflow">case</span> EventDialog::BasicEvent:</div><div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;    <span class="keywordflow">case</span> EventDialog::Undeveloped:</div><div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;    <span class="keywordflow">case</span> EventDialog::Conditional:</div><div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;        m_undoStack-&gt;push(</div><div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;            <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Model_1_1ChangeEventType.xhtml">model::Model::ChangeEventType&lt;model::Gate, model::BasicEvent&gt;</a>(</div><div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160;                element, extract&lt;mef::BasicEvent&gt;(*dialog), m_guiModel.get(),</div><div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;                getFaultTree(*dialog)));</div><div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160;    <span class="keywordflow">case</span> EventDialog::Gate:</div><div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160;        <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;Unexpected event type&quot;</span>, );</div><div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;    }</div><div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;</div><div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;    <span class="keywordtype">bool</span> formulaChanged = [&amp;dialog, &amp;element] {</div><div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;        <span class="keywordflow">if</span> (dialog-&gt;connective() != element-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml#af6bdef0f594fd764a96912a4df8eb2f2">type</a>())</div><div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;        <span class="keywordflow">if</span> (element-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml#af6bdef0f594fd764a96912a4df8eb2f2">type</a>() == mef::kVote</div><div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;            &amp;&amp; dialog-&gt;voteNumber() != element-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml#a2b68382b9c692bac26eb4775ebb366c9">voteNumber</a>())</div><div class="line"><a name="l01394"></a><span class="lineno"> 1394</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;        std::vector&lt;std::string&gt; dialogArgs = dialog-&gt;arguments();</div><div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;        <span class="keywordflow">if</span> (element-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml#a3db45049d1326cfd214197bfd3aaf007">numArgs</a>() != dialogArgs.size())</div><div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l01398"></a><span class="lineno"> 1398</span>&#160;        <span class="keyword">auto</span> it = dialogArgs.begin();</div><div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">const</span> mef::Formula::EventArg &amp;arg : element-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml#a14671d156e58b060ac84a58410543f64">args</a>()) {</div><div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;            <span class="keywordflow">if</span> (*it != ext::as&lt;const mef::Event *&gt;(arg)-&gt;id())</div><div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;            ++it;</div><div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;        }</div><div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;    }();</div><div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;    <span class="keywordflow">if</span> (formulaChanged)</div><div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;        m_undoStack-&gt;push(<span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Gate_1_1SetFormula.xhtml">model::Gate::SetFormula</a>(</div><div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160;            element, extract&lt;mef::Formula&gt;(*dialog)));</div><div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;}</div><div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;</div><div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class </span>ContainerModel, <span class="keyword">typename</span>... Ts&gt;</div><div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;QTableView *MainWindow::constructTableView(QWidget *parent, Ts &amp;&amp;... modelArgs)</div><div class="line"><a name="l01413"></a><span class="lineno"> 1413</span>&#160;{</div><div class="line"><a name="l01414"></a><span class="lineno"> 1414</span>&#160;    <span class="keyword">auto</span> *table = <span class="keyword">new</span> QTableView(parent);</div><div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;    <span class="keyword">auto</span> *tableModel =</div><div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;        <span class="keyword">new</span> ContainerModel(std::forward&lt;Ts&gt;(modelArgs)..., table);</div><div class="line"><a name="l01417"></a><span class="lineno"> 1417</span>&#160;    <span class="keyword">auto</span> *proxyModel = <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1SortFilterProxyModel.xhtml">model::SortFilterProxyModel</a>(table);</div><div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160;    proxyModel-&gt;setSourceModel(tableModel);</div><div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;    table-&gt;setModel(proxyModel);</div><div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;    table-&gt;setWordWrap(<span class="keyword">false</span>);</div><div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;    table-&gt;horizontalHeader()-&gt;setSortIndicatorShown(<span class="keyword">true</span>);</div><div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;    table-&gt;resizeColumnsToContents();</div><div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;    table-&gt;setSortingEnabled(<span class="keyword">true</span>);</div><div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;    setupSearchable(table, proxyModel);</div><div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;    <span class="keywordflow">return</span> table;</div><div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160;}</div><div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;</div><div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> ContainerModel&gt;</div><div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;QAbstractItemView *MainWindow::constructElementTable(<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">model::Model</a> *guiModel,</div><div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;                                                     QWidget *parent)</div><div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;{</div><div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160;    QTableView *table = constructTableView&lt;ContainerModel&gt;(parent, guiModel);</div><div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;    table-&gt;setSelectionBehavior(QAbstractItemView::SelectRows);</div><div class="line"><a name="l01434"></a><span class="lineno"> 1434</span>&#160;    table-&gt;setSelectionMode(QAbstractItemView::SingleSelection);</div><div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;    setupRemovable&lt;typename ContainerModel::ItemModel&gt;(table);</div><div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;    connect(table, &amp;QAbstractItemView::activated, <span class="keyword">this</span>,</div><div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160;            [<span class="keyword">this</span>](<span class="keyword">const</span> QModelIndex &amp;index) {</div><div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;                <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(index.isValid(), );</div><div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;                <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> dialog(m_model.get(), <span class="keyword">this</span>);</div><div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;                <span class="keyword">auto</span> *item = <span class="keyword">static_cast&lt;</span>typename ContainerModel::ItemModel *<span class="keyword">&gt;</span>(</div><div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;                    index.data(Qt::UserRole).value&lt;<span class="keywordtype">void</span> *&gt;());</div><div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;                <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(item, );</div><div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160;                dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">setupData</a>(*item);</div><div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;                <span class="keywordflow">if</span> (dialog.exec() == QDialog::Accepted)</div><div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;                    editElement(&amp;dialog, item);</div><div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160;            });</div><div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;    <span class="keywordflow">return</span> table;</div><div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;}</div><div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;<span class="comment"></span></div><div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;<span class="comment">/// Specialization to show gates as trees in tables.</span></div><div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l01452"></a><span class="lineno"><a class="line" href="mainwindow_8cpp.xhtml#ad0f4088e2f2115f81473cbb2a6db09ed"> 1452</a></span>&#160;QAbstractItemView *MainWindow::constructElementTable&lt;model::GateContainerModel&gt;(</div><div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;    <a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">model::Model</a> *guiModel, QWidget *parent)</div><div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;{</div><div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160;    <span class="keyword">auto</span> *tree = <span class="keyword">new</span> QTreeView(parent);</div><div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;    <span class="keyword">auto</span> *tableModel = <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml">model::GateContainerModel</a>(guiModel, tree);</div><div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;    <span class="keyword">auto</span> *proxyModel = <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1model_1_1GateSortFilterProxyModel.xhtml">model::GateSortFilterProxyModel</a>(tree);</div><div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;    proxyModel-&gt;setSourceModel(tableModel);</div><div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;    tree-&gt;setModel(proxyModel);</div><div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160;    tree-&gt;setSelectionBehavior(QAbstractItemView::SelectRows);</div><div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;    tree-&gt;setSelectionMode(QAbstractItemView::SingleSelection);</div><div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;    tree-&gt;setWordWrap(<span class="keyword">false</span>);</div><div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160;    tree-&gt;header()-&gt;setSortIndicatorShown(<span class="keyword">true</span>);</div><div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;    tree-&gt;header()-&gt;setDefaultAlignment(Qt::AlignCenter);</div><div class="line"><a name="l01465"></a><span class="lineno"> 1465</span>&#160;    tree-&gt;resizeColumnToContents(0);</div><div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;    tree-&gt;setColumnWidth(0, 2 * tree-&gt;columnWidth(0));</div><div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;    tree-&gt;setAlternatingRowColors(<span class="keyword">true</span>);</div><div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;    tree-&gt;setSortingEnabled(<span class="keyword">true</span>);</div><div class="line"><a name="l01469"></a><span class="lineno"> 1469</span>&#160;</div><div class="line"><a name="l01470"></a><span class="lineno"> 1470</span>&#160;    setupSearchable(tree, proxyModel);</div><div class="line"><a name="l01471"></a><span class="lineno"> 1471</span>&#160;    setupRemovable&lt;model::Gate&gt;(tree);</div><div class="line"><a name="l01472"></a><span class="lineno"> 1472</span>&#160;    connect(tree, &amp;QAbstractItemView::activated, <span class="keyword">this</span>,</div><div class="line"><a name="l01473"></a><span class="lineno"> 1473</span>&#160;            [<span class="keyword">this</span>](<span class="keyword">const</span> QModelIndex &amp;index) {</div><div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;                <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(index.isValid(), );</div><div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160;                <span class="keywordflow">if</span> (index.parent().isValid())</div><div class="line"><a name="l01476"></a><span class="lineno"> 1476</span>&#160;                    <span class="keywordflow">return</span>;</div><div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;                <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> dialog(m_model.get(), <span class="keyword">this</span>);</div><div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;                <span class="keyword">auto</span> *item = <span class="keyword">static_cast&lt;</span><a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">model::Gate</a> *<span class="keyword">&gt;</span>(</div><div class="line"><a name="l01479"></a><span class="lineno"> 1479</span>&#160;                    index.data(Qt::UserRole).value&lt;<span class="keywordtype">void</span> *&gt;());</div><div class="line"><a name="l01480"></a><span class="lineno"> 1480</span>&#160;                <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(item, );</div><div class="line"><a name="l01481"></a><span class="lineno"> 1481</span>&#160;                dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">setupData</a>(*item);</div><div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160;                <span class="keywordflow">if</span> (dialog.exec() == QDialog::Accepted)</div><div class="line"><a name="l01483"></a><span class="lineno"> 1483</span>&#160;                    editElement(&amp;dialog, item);</div><div class="line"><a name="l01484"></a><span class="lineno"> 1484</span>&#160;            });</div><div class="line"><a name="l01485"></a><span class="lineno"> 1485</span>&#160;    <span class="keywordflow">return</span> tree;</div><div class="line"><a name="l01486"></a><span class="lineno"> 1486</span>&#160;}</div><div class="line"><a name="l01487"></a><span class="lineno"> 1487</span>&#160;</div><div class="line"><a name="l01488"></a><span class="lineno"> 1488</span>&#160;<span class="keywordtype">void</span> MainWindow::resetModelTree()</div><div class="line"><a name="l01489"></a><span class="lineno"> 1489</span>&#160;{</div><div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160;    <span class="keywordflow">while</span> (ui-&gt;tabWidget-&gt;count()) {</div><div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160;        <span class="keyword">auto</span> *widget = ui-&gt;tabWidget-&gt;widget(0);</div><div class="line"><a name="l01492"></a><span class="lineno"> 1492</span>&#160;        ui-&gt;tabWidget-&gt;removeTab(0);</div><div class="line"><a name="l01493"></a><span class="lineno"> 1493</span>&#160;        <span class="keyword">delete</span> widget;</div><div class="line"><a name="l01494"></a><span class="lineno"> 1494</span>&#160;    }</div><div class="line"><a name="l01495"></a><span class="lineno"> 1495</span>&#160;    m_guiModel = std::make_unique&lt;model::Model&gt;(m_model.get());</div><div class="line"><a name="l01496"></a><span class="lineno"> 1496</span>&#160;    <span class="keyword">auto</span> *oldModel = ui-&gt;modelTree-&gt;model();</div><div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;    ui-&gt;modelTree-&gt;setModel(<span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1ModelTree.xhtml">ModelTree</a>(m_guiModel.get(), <span class="keyword">this</span>));</div><div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160;    <span class="keyword">delete</span> oldModel;</div><div class="line"><a name="l01499"></a><span class="lineno"> 1499</span>&#160;</div><div class="line"><a name="l01500"></a><span class="lineno"> 1500</span>&#160;    connect(m_guiModel.get(), &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml#a564f2eddf7f2a8db7c0b717ebd7dab71">model::Model::modelNameChanged</a>, <span class="keyword">this</span>, [<span class="keyword">this</span>] {</div><div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;        setWindowTitle(QStringLiteral(<span class="stringliteral">&quot;%1[*]&quot;</span>).arg(getModelNameForTitle()));</div><div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;    });</div><div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;}</div><div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160;</div><div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;<span class="keywordtype">void</span> MainWindow::activateModelTree(<span class="keyword">const</span> QModelIndex &amp;index)</div><div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;{</div><div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(index.isValid(), );</div><div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;    <span class="keywordflow">if</span> (index.parent().isValid() == <span class="keyword">false</span>) {</div><div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;        <span class="keywordflow">switch</span> (static_cast&lt;ModelTree::Row&gt;(index.row())) {</div><div class="line"><a name="l01510"></a><span class="lineno"> 1510</span>&#160;        <span class="keywordflow">case</span> ModelTree::Row::Gates: {</div><div class="line"><a name="l01511"></a><span class="lineno"> 1511</span>&#160;            <span class="keyword">auto</span> *table = constructElementTable&lt;model::GateContainerModel&gt;(</div><div class="line"><a name="l01512"></a><span class="lineno"> 1512</span>&#160;                m_guiModel.get(), <span class="keyword">this</span>);</div><div class="line"><a name="l01513"></a><span class="lineno"> 1513</span>&#160;            <span class="comment">//: The tab for the table of gates.</span></div><div class="line"><a name="l01514"></a><span class="lineno"> 1514</span>&#160;            ui-&gt;tabWidget-&gt;addTab(table, tr(<span class="stringliteral">&quot;Gates&quot;</span>));</div><div class="line"><a name="l01515"></a><span class="lineno"> 1515</span>&#160;            ui-&gt;tabWidget-&gt;setCurrentWidget(table);</div><div class="line"><a name="l01516"></a><span class="lineno"> 1516</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l01517"></a><span class="lineno"> 1517</span>&#160;        }</div><div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160;        <span class="keywordflow">case</span> ModelTree::Row::BasicEvents: {</div><div class="line"><a name="l01519"></a><span class="lineno"> 1519</span>&#160;            <span class="keyword">auto</span> *table =</div><div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;                constructElementTable&lt;model::BasicEventContainerModel&gt;(</div><div class="line"><a name="l01521"></a><span class="lineno"> 1521</span>&#160;                    m_guiModel.get(), <span class="keyword">this</span>);</div><div class="line"><a name="l01522"></a><span class="lineno"> 1522</span>&#160;            <span class="comment">//: The tab for the table of basic events.</span></div><div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160;            ui-&gt;tabWidget-&gt;addTab(table, tr(<span class="stringliteral">&quot;Basic Events&quot;</span>));</div><div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160;            ui-&gt;tabWidget-&gt;setCurrentWidget(table);</div><div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;        }</div><div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160;        <span class="keywordflow">case</span> ModelTree::Row::HouseEvents: {</div><div class="line"><a name="l01528"></a><span class="lineno"> 1528</span>&#160;            <span class="keyword">auto</span> *table =</div><div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;                constructElementTable&lt;model::HouseEventContainerModel&gt;(</div><div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;                    m_guiModel.get(), <span class="keyword">this</span>);</div><div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;            <span class="comment">//: The tab for the table of house events.</span></div><div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160;            ui-&gt;tabWidget-&gt;addTab(table, tr(<span class="stringliteral">&quot;House Events&quot;</span>));</div><div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;            ui-&gt;tabWidget-&gt;setCurrentWidget(table);</div><div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l01535"></a><span class="lineno"> 1535</span>&#160;        }</div><div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;        <span class="keywordflow">case</span> ModelTree::Row::FaultTrees:</div><div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160;        }</div><div class="line"><a name="l01539"></a><span class="lineno"> 1539</span>&#160;        <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span>, );</div><div class="line"><a name="l01540"></a><span class="lineno"> 1540</span>&#160;    }</div><div class="line"><a name="l01541"></a><span class="lineno"> 1541</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(index.parent().parent().isValid() == <span class="keyword">false</span>, );</div><div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(index.parent().row()</div><div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;                   == <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(ModelTree::Row::FaultTrees), );</div><div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;    <span class="keyword">auto</span> faultTree =</div><div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;        <span class="keyword">static_cast&lt;</span>mef::FaultTree *<span class="keyword">&gt;</span>(index.data(Qt::UserRole).value&lt;<span class="keywordtype">void</span> *&gt;());</div><div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(faultTree, );</div><div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;    activateFaultTreeDiagram(faultTree);</div><div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160;}</div><div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160;</div><div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160;<span class="keywordtype">void</span> MainWindow::activateReportTree(<span class="keyword">const</span> QModelIndex &amp;index)</div><div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160;{</div><div class="line"><a name="l01552"></a><span class="lineno"> 1552</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(m_analysis, );</div><div class="line"><a name="l01553"></a><span class="lineno"> 1553</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(index.isValid(), );</div><div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160;    QModelIndex parentIndex = index.parent();</div><div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;    <span class="keywordflow">if</span> (!parentIndex.isValid())</div><div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(parentIndex.parent().isValid() == <span class="keyword">false</span>, );</div><div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;    QString name = parentIndex.data(Qt::DisplayRole).toString();</div><div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(parentIndex.row() &lt; m_analysis-&gt;results().size(), );</div><div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;    <span class="keyword">const</span> core::RiskAnalysis::Result &amp;result =</div><div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;        m_analysis-&gt;results()[parentIndex.row()];</div><div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;</div><div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;    QWidget *widget = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l01564"></a><span class="lineno"> 1564</span>&#160;    <span class="keywordflow">switch</span> (static_cast&lt;ReportTree::Row&gt;(index.row())) {</div><div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;    <span class="keywordflow">case</span> ReportTree::Row::Products: {</div><div class="line"><a name="l01566"></a><span class="lineno"> 1566</span>&#160;        <span class="keywordtype">bool</span> withProbability = result.probability_analysis != <span class="keyword">nullptr</span>;</div><div class="line"><a name="l01567"></a><span class="lineno"> 1567</span>&#160;        <span class="keyword">auto</span> *table = constructTableView&lt;model::ProductTableModel&gt;(</div><div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;            <span class="keyword">this</span>, result.fault_tree_analysis-&gt;products(), withProbability);</div><div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;        ui-&gt;tabWidget-&gt;addTab(table, tr(<span class="stringliteral">&quot;Products: %1&quot;</span>).arg(name));</div><div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160;        table-&gt;sortByColumn(withProbability ? 2 : 1, withProbability</div><div class="line"><a name="l01571"></a><span class="lineno"> 1571</span>&#160;                                                         ? Qt::DescendingOrder</div><div class="line"><a name="l01572"></a><span class="lineno"> 1572</span>&#160;                                                         : Qt::AscendingOrder);</div><div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;        table-&gt;setSortingEnabled(<span class="keyword">true</span>);</div><div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;        widget = table;</div><div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;    }</div><div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160;    <span class="keywordflow">case</span> ReportTree::Row::Probability:</div><div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;    <span class="keywordflow">case</span> ReportTree::Row::Importance: {</div><div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;        widget = constructTableView&lt;model::ImportanceTableModel&gt;(</div><div class="line"><a name="l01581"></a><span class="lineno"> 1581</span>&#160;            <span class="keyword">this</span>, &amp;result.importance_analysis-&gt;importance());</div><div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;        ui-&gt;tabWidget-&gt;addTab(widget, tr(<span class="stringliteral">&quot;Importance: %1&quot;</span>).arg(name));</div><div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;    }</div><div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160;        <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;Unexpected analysis report data&quot;</span>, );</div><div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;    }</div><div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;</div><div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;    <span class="keywordflow">if</span> (!widget)</div><div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;    ui-&gt;tabWidget-&gt;setCurrentWidget(widget);</div><div class="line"><a name="l01592"></a><span class="lineno"> 1592</span>&#160;    connect(ui-&gt;reportTree-&gt;model(), &amp;QObject::destroyed, widget,</div><div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;            [<span class="keyword">this</span>, widget] { closeTab(ui-&gt;tabWidget-&gt;indexOf(widget)); });</div><div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;}</div><div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;</div><div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160;<span class="keywordtype">void</span> MainWindow::activateFaultTreeDiagram(mef::FaultTree *faultTree)</div><div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;{</div><div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(faultTree, );</div><div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(faultTree-&gt;top_events().size() == 1, );</div><div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;    <span class="keyword">auto</span> *topGate = faultTree-&gt;top_events().front();</div><div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;    <span class="keyword">auto</span> *view = <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1DiagramView.xhtml">DiagramView</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;    <span class="keyword">auto</span> *scene = <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1diagram_1_1DiagramScene.xhtml">diagram::DiagramScene</a>(</div><div class="line"><a name="l01603"></a><span class="lineno"> 1603</span>&#160;        m_guiModel-&gt;gates().find(topGate)-&gt;get(), m_guiModel.get(), view);</div><div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;    view-&gt;setScene(scene);</div><div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;    view-&gt;setViewport(<span class="keyword">new</span> QGLWidget(QGLFormat(QGL::SampleBuffers)));</div><div class="line"><a name="l01606"></a><span class="lineno"> 1606</span>&#160;    view-&gt;setRenderHints(QPainter::Antialiasing</div><div class="line"><a name="l01607"></a><span class="lineno"> 1607</span>&#160;                         | QPainter::SmoothPixmapTransform);</div><div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;    view-&gt;setAlignment(Qt::AlignTop);</div><div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;    view-&gt;ensureVisible(0, 0, 0, 0);</div><div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160;    setupZoomableView(view);</div><div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;    setupPrintableView(view);</div><div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160;    setupExportableView(view);</div><div class="line"><a name="l01613"></a><span class="lineno"> 1613</span>&#160;    ui-&gt;tabWidget-&gt;addTab(</div><div class="line"><a name="l01614"></a><span class="lineno"> 1614</span>&#160;        view,</div><div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;        <span class="comment">//: The tab for a fault tree diagram.</span></div><div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;        tr(<span class="stringliteral">&quot;Fault Tree: %1&quot;</span>).arg(QString::fromStdString(faultTree-&gt;name())));</div><div class="line"><a name="l01617"></a><span class="lineno"> 1617</span>&#160;    ui-&gt;tabWidget-&gt;setCurrentWidget(view);</div><div class="line"><a name="l01618"></a><span class="lineno"> 1618</span>&#160;</div><div class="line"><a name="l01619"></a><span class="lineno"> 1619</span>&#160;    connect(scene, &amp;<a class="code" href="classscram_1_1gui_1_1diagram_1_1DiagramScene.xhtml#a53f42b91d223ff18b8ad5e8b87b72839">diagram::DiagramScene::activated</a>, <span class="keyword">this</span>,</div><div class="line"><a name="l01620"></a><span class="lineno"> 1620</span>&#160;            [<span class="keyword">this</span>](<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">model::Element</a> *element) {</div><div class="line"><a name="l01621"></a><span class="lineno"> 1621</span>&#160;                <a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml">EventDialog</a> dialog(m_model.get(), <span class="keyword">this</span>);</div><div class="line"><a name="l01622"></a><span class="lineno"> 1622</span>&#160;                <span class="keyword">auto</span> action = [<span class="keyword">this</span>, &amp;dialog](<span class="keyword">auto</span> *target) {</div><div class="line"><a name="l01623"></a><span class="lineno"> 1623</span>&#160;                    dialog.<a class="code" href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">setupData</a>(*target);</div><div class="line"><a name="l01624"></a><span class="lineno"> 1624</span>&#160;                    <span class="keywordflow">if</span> (dialog.exec() == QDialog::Accepted) {</div><div class="line"><a name="l01625"></a><span class="lineno"> 1625</span>&#160;                        editElement(&amp;dialog, target);</div><div class="line"><a name="l01626"></a><span class="lineno"> 1626</span>&#160;                    }</div><div class="line"><a name="l01627"></a><span class="lineno"> 1627</span>&#160;                };<span class="comment"></span></div><div class="line"><a name="l01628"></a><span class="lineno"> 1628</span>&#160;<span class="comment">                /// @todo Redesign/remove the RAII!</span></div><div class="line"><a name="l01629"></a><span class="lineno"> 1629</span>&#160;<span class="comment"></span>                <span class="keywordflow">if</span> (<span class="keyword">auto</span> *basic = dynamic_cast&lt;model::BasicEvent *&gt;(element)) {</div><div class="line"><a name="l01630"></a><span class="lineno"> 1630</span>&#160;                    action(basic);</div><div class="line"><a name="l01631"></a><span class="lineno"> 1631</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<span class="keyword">auto</span> *gate = dynamic_cast&lt;model::Gate *&gt;(element)) {</div><div class="line"><a name="l01632"></a><span class="lineno"> 1632</span>&#160;                    action(gate);</div><div class="line"><a name="l01633"></a><span class="lineno"> 1633</span>&#160;                } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01634"></a><span class="lineno"> 1634</span>&#160;                    <span class="keyword">auto</span> *house = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">model::HouseEvent</a> *<span class="keyword">&gt;</span>(element);</div><div class="line"><a name="l01635"></a><span class="lineno"> 1635</span>&#160;                    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(house, );</div><div class="line"><a name="l01636"></a><span class="lineno"> 1636</span>&#160;                    action(house);</div><div class="line"><a name="l01637"></a><span class="lineno"> 1637</span>&#160;                }</div><div class="line"><a name="l01638"></a><span class="lineno"> 1638</span>&#160;            });</div><div class="line"><a name="l01639"></a><span class="lineno"> 1639</span>&#160;    connect(m_guiModel.get(), <a class="code" href="overload_8h.xhtml#a9b2ccb7e9e0744cd44765f77b05fa93f">OVERLOAD</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">model::Model</a>, removed, mef::FaultTree *),</div><div class="line"><a name="l01640"></a><span class="lineno"> 1640</span>&#160;            view, [<span class="keyword">this</span>, faultTree, view](mef::FaultTree *removedTree) {</div><div class="line"><a name="l01641"></a><span class="lineno"> 1641</span>&#160;                <span class="keywordflow">if</span> (removedTree == faultTree)</div><div class="line"><a name="l01642"></a><span class="lineno"> 1642</span>&#160;                    closeTab(ui-&gt;tabWidget-&gt;indexOf(view));</div><div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;            });</div><div class="line"><a name="l01644"></a><span class="lineno"> 1644</span>&#160;}</div><div class="line"><a name="l01645"></a><span class="lineno"> 1645</span>&#160;</div><div class="line"><a name="l01646"></a><span class="lineno"> 1646</span>&#160;<span class="keywordtype">void</span> MainWindow::resetReportTree(std::unique_ptr&lt;core::RiskAnalysis&gt; analysis)</div><div class="line"><a name="l01647"></a><span class="lineno"> 1647</span>&#160;{</div><div class="line"><a name="l01648"></a><span class="lineno"> 1648</span>&#160;    ui-&gt;actionExportReportAs-&gt;setEnabled(static_cast&lt;bool&gt;(analysis));</div><div class="line"><a name="l01649"></a><span class="lineno"> 1649</span>&#160;</div><div class="line"><a name="l01650"></a><span class="lineno"> 1650</span>&#160;    <span class="keyword">auto</span> *oldModel = ui-&gt;reportTree-&gt;model();</div><div class="line"><a name="l01651"></a><span class="lineno"> 1651</span>&#160;    ui-&gt;reportTree-&gt;setModel(</div><div class="line"><a name="l01652"></a><span class="lineno"> 1652</span>&#160;        analysis ? <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1ReportTree.xhtml">ReportTree</a>(&amp;analysis-&gt;results(), <span class="keyword">this</span>) : <span class="keyword">nullptr</span>);</div><div class="line"><a name="l01653"></a><span class="lineno"> 1653</span>&#160;    <span class="keyword">delete</span> oldModel;</div><div class="line"><a name="l01654"></a><span class="lineno"> 1654</span>&#160;    m_analysis = std::move(analysis);</div><div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;}</div><div class="line"><a name="l01656"></a><span class="lineno"> 1656</span>&#160;</div><div class="line"><a name="l01657"></a><span class="lineno"> 1657</span>&#160;} <span class="comment">// namespace scram::gui</span></div><div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml_a14671d156e58b060ac84a58410543f64"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml#a14671d156e58b060ac84a58410543f64">scram::gui::model::Gate::args</a></div><div class="ttdeci">const std::vector&lt; mef::Formula::EventArg &gt; &amp; args() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00377">model.h:377</a></div></div>
<div class="ttc" id="preferencesdialog_8h_xhtml"><div class="ttname"><a href="preferencesdialog_8h.xhtml">preferencesdialog.h</a></div><div class="ttdoc">Dialog to manage the application&amp;#39;s persistent preferences. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">scram::gui::model::BasicEvent</a></div><div class="ttdoc">The proxy to manage mef::BasicEvent. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00179">model.h:179</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1ZoomableView_xhtml_a859d676e6600e263ae4487bc1845385d"><div class="ttname"><a href="classscram_1_1gui_1_1ZoomableView.xhtml#a859d676e6600e263ae4487bc1845385d">scram::gui::ZoomableView::zoomBestFit</a></div><div class="ttdeci">void zoomBestFit()</div><div class="ttdoc">Automatically adjusts the zoom to fit the view into the current scene. </div><div class="ttdef"><b>Definition:</b> <a href="zoomableview_8cpp_source.xhtml#l00042">zoomableview.cpp:42</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a0c144e53e44d5b9524d60698cb356653"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a0c144e53e44d5b9524d60698cb356653">scram::gui::EventDialog::name</a></div><div class="ttdeci">QString name() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00095">eventdialog.h:95</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a3f52697e4e16187eb133aa1d59d249e8"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a3f52697e4e16187eb133aa1d59d249e8">scram::gui::EventDialog::arguments</a></div><div class="ttdeci">std::vector&lt; std::string &gt; arguments() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8cpp_source.xhtml#l00180">eventdialog.cpp:180</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_ac413f5e1b3f9795c80d78a512ad7f0cf"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#ac413f5e1b3f9795c80d78a512ad7f0cf">scram::gui::EventDialog::voteNumber</a></div><div class="ttdeci">int voteNumber() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00113">eventdialog.h:113</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_1_1AddEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model_1_1AddEvent.xhtml">scram::gui::model::Model::AddEvent</a></div><div class="ttdoc">Adds an event to the model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00515">model.h:515</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_1_1SetFormula_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate_1_1SetFormula.xhtml">scram::gui::model::Gate::SetFormula</a></div><div class="ttdoc">Formula modification commands. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00385">model.h:385</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_1_1ChangeEventType_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model_1_1ChangeEventType.xhtml">scram::gui::model::Model::ChangeEventType</a></div><div class="ttdoc">Changes the event type. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00593">model.h:593</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1WaitDialog_xhtml_a0b559d52bc5b87ec92d5f5d871d221d3"><div class="ttname"><a href="classscram_1_1gui_1_1WaitDialog.xhtml#a0b559d52bc5b87ec92d5f5d871d221d3">scram::gui::WaitDialog::WaitDialog</a></div><div class="ttdeci">WaitDialog(QWidget *parent)</div><div class="ttdef"><b>Definition:</b> <a href="mainwindow_8cpp_source.xhtml#l00099">mainwindow.cpp:99</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1MainWindow_xhtml_a26c21baa747d6a713c30efe494d64c1c"><div class="ttname"><a href="classscram_1_1gui_1_1MainWindow.xhtml#a26c21baa747d6a713c30efe494d64c1c">scram::gui::MainWindow::configChanged</a></div><div class="ttdeci">void configChanged()</div><div class="ttdoc">Indicates addition of new input or configuration files. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1MainWindow_xhtml_a31d1778256db8a5e1ad547ecac7d394d"><div class="ttname"><a href="classscram_1_1gui_1_1MainWindow.xhtml#a31d1778256db8a5e1ad547ecac7d394d">scram::gui::MainWindow::MainWindow</a></div><div class="ttdeci">MainWindow(QWidget *parent=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="mainwindow_8cpp_source.xhtml#l00154">mainwindow.cpp:154</a></div></div>
<div class="ttc" id="namespaceUi_xhtml"><div class="ttname"><a href="namespaceUi.xhtml">Ui</a></div><div class="ttdef"><b>Definition:</b> <a href="mainwindow_8h_source.xhtml#l00047">mainwindow.h:47</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1ZoomableView_xhtml_ac755fbceb4cf5149263199d590244c53"><div class="ttname"><a href="classscram_1_1gui_1_1ZoomableView.xhtml#ac755fbceb4cf5149263199d590244c53">scram::gui::ZoomableView::zoomChanged</a></div><div class="ttdeci">void zoomChanged(int level)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml_a827dd95218bb3eece34e5777d487a590"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a827dd95218bb3eece34e5777d487a590">scram::gui::model::BasicEvent::flavor</a></div><div class="ttdeci">Flavor flavor() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00207">model.h:207</a></div></div>
<div class="ttc" id="eventdialog_8h_xhtml"><div class="ttname"><a href="eventdialog_8h.xhtml">eventdialog.h</a></div><div class="ttdoc">Dialog to edit and validate events. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">scram::gui::model::HouseEvent</a></div><div class="ttdoc">The proxy to manage mef::HouseEvent. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00284">model.h:284</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1GateSortFilterProxyModel_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1GateSortFilterProxyModel.xhtml">scram::gui::model::GateSortFilterProxyModel</a></div><div class="ttdoc">The proxy model specialized for the gate tree-table. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00200">elementcontainermodel.h:200</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a4beb17e160a4255cd5ea602753689070"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a4beb17e160a4255cd5ea602753689070">scram::gui::EventDialog::label</a></div><div class="ttdeci">QString label() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00097">eventdialog.h:97</a></div></div>
<div class="ttc" id="validator_8h_xhtml"><div class="ttname"><a href="validator_8h.xhtml">validator.h</a></div><div class="ttdoc">Collection of validators. </div></div>
<div class="ttc" id="settingsdialog_8h_xhtml"><div class="ttname"><a href="settingsdialog_8h.xhtml">settingsdialog.h</a></div><div class="ttdoc">Dialog to manage analysis settings. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1StartPage_xhtml_a63e4396c45e7ef5520a0ceef753a7675"><div class="ttname"><a href="classscram_1_1gui_1_1StartPage.xhtml#a63e4396c45e7ef5520a0ceef753a7675">scram::gui::StartPage::StartPage</a></div><div class="ttdeci">StartPage(QWidget *parent=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="mainwindow_8cpp_source.xhtml#l00088">mainwindow.cpp:88</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1MainWindow_xhtml_a19cf5f94f4b040cf6f2ba685ff439b59"><div class="ttname"><a href="classscram_1_1gui_1_1MainWindow.xhtml#a19cf5f94f4b040cf6f2ba685ff439b59">scram::gui::MainWindow::setConfig</a></div><div class="ttdeci">bool setConfig(const std::string &amp;configPath, std::vector&lt; std::string &gt; inputFiles={})</div><div class="ttdoc">Loads a model and analysis configuration from a file. </div><div class="ttdef"><b>Definition:</b> <a href="mainwindow_8cpp_source.xhtml#l00261">mainwindow.cpp:261</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml_a82e8bcd852ded4bb3c7e30148c0b18c6"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">scram::gui::model::Element::id</a></div><div class="ttdeci">QString id() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00075">model.h:75</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1StartPage_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1StartPage.xhtml">scram::gui::StartPage</a></div><div class="ttdoc">The initial start tab. </div><div class="ttdef"><b>Definition:</b> <a href="mainwindow_8cpp_source.xhtml#l00084">mainwindow.cpp:84</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1GateContainerModel_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml">scram::gui::model::GateContainerModel</a></div><div class="ttdoc">Tree-view inside table. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00170">elementcontainermodel.h:170</a></div></div>
<div class="ttc" id="elementcontainermodel_8h_xhtml"><div class="ttname"><a href="elementcontainermodel_8h.xhtml">elementcontainermodel.h</a></div><div class="ttdoc">The table model for elements. </div></div>
<div class="ttc" id="overload_8h_xhtml"><div class="ttname"><a href="overload_8h.xhtml">overload.h</a></div><div class="ttdoc">Facilities to help with pointers to overloaded functions. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_1_1SetId_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element_1_1SetId.xhtml">scram::gui::model::Element::SetId</a></div><div class="ttdoc">Sets the name of an Element. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00103">model.h:103</a></div></div>
<div class="ttc" id="diagram_8h_xhtml"><div class="ttname"><a href="diagram_8h.xhtml">diagram.h</a></div><div class="ttdoc">Graphics classes to draw diagrams. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a4b0937931be261ac68e45aee3062daf9"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a4b0937931be261ac68e45aee3062daf9">scram::gui::EventDialog::faultTree</a></div><div class="ttdeci">std::string faultTree() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00119">eventdialog.h:119</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1WaitDialog_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1WaitDialog.xhtml">scram::gui::WaitDialog</a></div><div class="ttdoc">The dialog to block user input while waiting for a long-running process. </div><div class="ttdef"><b>Definition:</b> <a href="mainwindow_8cpp_source.xhtml#l00095">mainwindow.cpp:95</a></div></div>
<div class="ttc" id="overload_8h_xhtml_a9b2ccb7e9e0744cd44765f77b05fa93f"><div class="ttname"><a href="overload_8h.xhtml#a9b2ccb7e9e0744cd44765f77b05fa93f">OVERLOAD</a></div><div class="ttdeci">#define OVERLOAD(T, name,...)</div><div class="ttdoc">Helper macro to resolve overloaded signals in Qt 5 style connections. </div><div class="ttdef"><b>Definition:</b> <a href="overload_8h_source.xhtml#l00026">overload.h:26</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1ReportTree_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1ReportTree.xhtml">scram::gui::ReportTree</a></div><div class="ttdoc">The report is organized by its top items as analysis identifiers and its descendant items as analysis...</div><div class="ttdef"><b>Definition:</b> <a href="reporttree_8h_source.xhtml#l00037">reporttree.h:37</a></div></div>
<div class="ttc" id="producttablemodel_8h_xhtml"><div class="ttname"><a href="producttablemodel_8h.xhtml">producttablemodel.h</a></div><div class="ttdoc">Table model for reporting products. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml_a3db45049d1326cfd214197bfd3aaf007"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml#a3db45049d1326cfd214197bfd3aaf007">scram::gui::model::Gate::numArgs</a></div><div class="ttdeci">int numArgs() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00369">model.h:369</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEvent_1_1SetState_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEvent_1_1SetState.xhtml">scram::gui::model::HouseEvent::SetState</a></div><div class="ttdoc">Flips the house event state. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00305">model.h:305</a></div></div>
<div class="ttc" id="mainwindow_8h_xhtml"><div class="ttname"><a href="mainwindow_8h.xhtml">mainwindow.h</a></div><div class="ttdoc">The main application window. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetExpression_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetExpression.xhtml">scram::gui::model::BasicEvent::SetExpression</a></div><div class="ttdoc">Sets the basic event expression. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00237">model.h:237</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1NameDialog_xhtml_abc272005f7f1987d426a96512e41cf39"><div class="ttname"><a href="classscram_1_1gui_1_1NameDialog.xhtml#abc272005f7f1987d426a96512e41cf39">scram::gui::NameDialog::NameDialog</a></div><div class="ttdeci">NameDialog(QWidget *parent)</div><div class="ttdef"><b>Definition:</b> <a href="mainwindow_8cpp_source.xhtml#l00076">mainwindow.cpp:76</a></div></div>
<div class="ttc" id="printable_8h_xhtml"><div class="ttname"><a href="printable_8h.xhtml">printable.h</a></div><div class="ttdoc">Interface for printable objects. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1DiagramScene_xhtml_a53f42b91d223ff18b8ad5e8b87b72839"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1DiagramScene.xhtml#a53f42b91d223ff18b8ad5e8b87b72839">scram::gui::diagram::DiagramScene::activated</a></div><div class="ttdeci">void activated(model::Element *event)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml_af6bdef0f594fd764a96912a4df8eb2f2"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml#af6bdef0f594fd764a96912a4df8eb2f2">scram::gui::model::Gate::type</a></div><div class="ttdeci">T type() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00336">model.h:336</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1MainWindow_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1MainWindow.xhtml">scram::gui::MainWindow</a></div><div class="ttdef"><b>Definition:</b> <a href="mainwindow_8h_source.xhtml#l00055">mainwindow.h:55</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_af80067675ae0b3f02337533323cf1464"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#af80067675ae0b3f02337533323cf1464">scram::gui::EventDialog::currentType</a></div><div class="ttdeci">EventType currentType() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00089">eventdialog.h:89</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_xhtml_a564f2eddf7f2a8db7c0b717ebd7dab71"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model.xhtml#a564f2eddf7f2a8db7c0b717ebd7dab71">scram::gui::model::Model::modelNameChanged</a></div><div class="ttdeci">void modelNameChanged(QString name)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1DiagramView_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1DiagramView.xhtml">scram::gui::DiagramView</a></div><div class="ttdoc">The default view for graphics views (e.g., fault tree diagram). </div><div class="ttdef"><b>Definition:</b> <a href="mainwindow_8cpp_source.xhtml#l00120">mainwindow.cpp:120</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_abe5bf2e13a1fbb54ce0d8c5a03ad3a05"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#abe5bf2e13a1fbb54ce0d8c5a03ad3a05">scram::gui::EventDialog::setupData</a></div><div class="ttdeci">void setupData(const model::Gate &amp;element)</div><div class="ttdoc">Sets up the dialog with element data. </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8cpp_source.xhtml#l00295">eventdialog.cpp:295</a></div></div>
<div class="ttc" id="guiassert_8h_xhtml"><div class="ttname"><a href="guiassert_8h.xhtml">guiassert.h</a></div><div class="ttdoc">GUI assertions that should not crash the program by default. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model.xhtml">scram::gui::model::Model</a></div><div class="ttdoc">The wrapper around the MEF Model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00413">model.h:413</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml_a2b68382b9c692bac26eb4775ebb366c9"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml#a2b68382b9c692bac26eb4775ebb366c9">scram::gui::model::Gate::voteNumber</a></div><div class="ttdeci">int voteNumber() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00374">model.h:374</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_1_1SetLabel_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element_1_1SetLabel.xhtml">scram::gui::model::Element::SetLabel</a></div><div class="ttdoc">Sets the label of an Element. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00081">model.h:81</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1Validator_xhtml_aef00f2009b110e78ead2109ffa60897e"><div class="ttname"><a href="classscram_1_1gui_1_1Validator.xhtml#aef00f2009b110e78ead2109ffa60897e">scram::gui::Validator::percent</a></div><div class="ttdeci">static const QValidator * percent()</div><div class="ttdef"><b>Definition:</b> <a href="validator_8cpp_source.xhtml#l00039">validator.cpp:39</a></div></div>
<div class="ttc" id="guiassert_8h_xhtml_ad04e3dce0040cedb9562b05ff3ff58cb"><div class="ttname"><a href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a></div><div class="ttdeci">#define GUI_ASSERT(cond, ret)</div><div class="ttdoc">Assertion that avoids crashing the application. </div><div class="ttdef"><b>Definition:</b> <a href="guiassert_8h_source.xhtml#l00034">guiassert.h:34</a></div></div>
<div class="ttc" id="reporttree_8h_xhtml"><div class="ttname"><a href="reporttree_8h.xhtml">reporttree.h</a></div><div class="ttdoc">Report tree model to represent the analysis results. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml_a4252873cbeb2ec908843a8aa222804a4"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a4252873cbeb2ec908843a8aa222804a4">scram::gui::model::BasicEvent::expression</a></div><div class="ttdeci">mef::Expression * expression() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00211">model.h:211</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml">scram::gui::model::Element</a></div><div class="ttdoc">The base proxy Element model for mef::Element. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00064">model.h:64</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1DiagramScene_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1DiagramScene.xhtml">scram::gui::diagram::DiagramScene</a></div><div class="ttdoc">The scene for the fault tree diagram. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8h_source.xhtml#l00178">diagram.h:178</a></div></div>
<div class="ttc" id="modeltree_8h_xhtml"><div class="ttname"><a href="modeltree_8h.xhtml">modeltree.h</a></div><div class="ttdoc">The main tree representation of the Model. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_ac9d1c80c10d678aadeea36310c242444"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#ac9d1c80c10d678aadeea36310c242444">scram::gui::EventDialog::connective</a></div><div class="ttdeci">mef::Operator connective() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00107">eventdialog.h:107</a></div></div>
<div class="ttc" id="namespacescram_1_1gui_xhtml"><div class="ttname"><a href="namespacescram_1_1gui.xhtml">scram::gui</a></div><div class="ttdef"><b>Definition:</b> <a href="align_8h_source.xhtml#l00025">align.h:25</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1ModelTree_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1ModelTree.xhtml">scram::gui::ModelTree</a></div><div class="ttdoc">The tree representation for the Model constructs. </div><div class="ttdef"><b>Definition:</b> <a href="modeltree_8h_source.xhtml#l00035">modeltree.h:35</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a1522bc4b9c9c0ef7d82b3a27d1778108"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a1522bc4b9c9c0ef7d82b3a27d1778108">scram::gui::EventDialog::booleanConstant</a></div><div class="ttdeci">bool booleanConstant() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00100">eventdialog.h:100</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model_1_1AddFaultTree.xhtml">scram::gui::model::Model::AddFaultTree</a></div><div class="ttdoc">Adds a fault tree into a model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00476">model.h:476</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1SortFilterProxyModel_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1SortFilterProxyModel.xhtml">scram::gui::model::SortFilterProxyModel</a></div><div class="ttdoc">The proxy model allows sorting and filtering. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00106">elementcontainermodel.h:106</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1DiagramView_xhtml_ae923bef55f717a4922c6f23e45beaabd"><div class="ttname"><a href="classscram_1_1gui_1_1DiagramView.xhtml#ae923bef55f717a4922c6f23e45beaabd">scram::gui::DiagramView::exportAs</a></div><div class="ttdeci">void exportAs()</div><div class="ttdoc">Exports the image of the diagram. </div><div class="ttdef"><b>Definition:</b> <a href="mainwindow_8cpp_source.xhtml#l00126">mainwindow.cpp:126</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml_a6d4704b8160d88d8a49f76096ee45677"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml#a6d4704b8160d88d8a49f76096ee45677">scram::gui::model::Element::label</a></div><div class="ttdeci">QString label() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00078">model.h:78</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_1_1RemoveEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model_1_1RemoveEvent.xhtml">scram::gui::model::Model::RemoveEvent</a></div><div class="ttdoc">Removes an existing event from the model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00574">model.h:574</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1MainWindow_xhtml_ad25ffda8b13e4743312f9a3cad96d271"><div class="ttname"><a href="classscram_1_1gui_1_1MainWindow.xhtml#ad25ffda8b13e4743312f9a3cad96d271">scram::gui::MainWindow::addInputFiles</a></div><div class="ttdeci">bool addInputFiles(const std::vector&lt; std::string &gt; &amp;inputFiles)</div><div class="ttdoc">Adds a new set of model elements from input files. </div><div class="ttdef"><b>Definition:</b> <a href="mainwindow_8cpp_source.xhtml#l00287">mainwindow.cpp:287</a></div></div>
<div class="ttc" id="importancetablemodel_8h_xhtml"><div class="ttname"><a href="importancetablemodel_8h.xhtml">importancetablemodel.h</a></div><div class="ttdoc">Table model for reporting importance factors. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml_a83e39d8225b8a2d4e1a8a00cf5e7f76e"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a83e39d8225b8a2d4e1a8a00cf5e7f76e">scram::gui::model::BasicEvent::Flavor</a></div><div class="ttdeci">Flavor</div><div class="ttdoc">Basic event flavors. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00185">model.h:185</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_1_1RemoveFaultTree_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model_1_1RemoveFaultTree.xhtml">scram::gui::model::Model::RemoveFaultTree</a></div><div class="ttdoc">Removes a fault tree from the model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00500">model.h:500</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1Validator_xhtml_ade5c7bef2410bb4bc6bb05d88ee99793"><div class="ttname"><a href="classscram_1_1gui_1_1Validator.xhtml#ade5c7bef2410bb4bc6bb05d88ee99793">scram::gui::Validator::name</a></div><div class="ttdeci">static const QValidator * name()</div><div class="ttdef"><b>Definition:</b> <a href="validator_8cpp_source.xhtml#l00031">validator.cpp:31</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml">scram::gui::EventDialog</a></div><div class="ttdoc">The Dialog to create, present, and manipulate event data. </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8h_source.xhtml#l00054">eventdialog.h:54</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1EventDialog_xhtml_a0fbc46dd72d7473a8682484172bd7b3c"><div class="ttname"><a href="classscram_1_1gui_1_1EventDialog.xhtml#a0fbc46dd72d7473a8682484172bd7b3c">scram::gui::EventDialog::expression</a></div><div class="ttdeci">std::unique_ptr&lt; mef::Expression &gt; expression() const </div><div class="ttdef"><b>Definition:</b> <a href="eventdialog_8cpp_source.xhtml#l00321">eventdialog.cpp:321</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetFlavor_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent_1_1SetFlavor.xhtml">scram::gui::model::BasicEvent::SetFlavor</a></div><div class="ttdoc">Sets the flavor of the basic event. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00253">model.h:253</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEvent_xhtml_a5d7cf6bceaeb71186648ee0e30bb9710"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml#a5d7cf6bceaeb71186648ee0e30bb9710">scram::gui::model::HouseEvent::state</a></div><div class="ttdeci">T state() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00294">model.h:294</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1NameDialog_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1NameDialog.xhtml">scram::gui::NameDialog</a></div><div class="ttdoc">The dialog to set the model name. </div><div class="ttdef"><b>Definition:</b> <a href="mainwindow_8cpp_source.xhtml#l00072">mainwindow.cpp:72</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1ZoomableView_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1ZoomableView.xhtml">scram::gui::ZoomableView</a></div><div class="ttdoc">The base class for graphics views with default zoom logic. </div><div class="ttdef"><b>Definition:</b> <a href="zoomableview_8h_source.xhtml#l00030">zoomableview.h:30</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1Printable_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1Printable.xhtml">scram::gui::Printable</a></div><div class="ttdoc">An abstract mixin class for printable objects. </div><div class="ttdef"><b>Definition:</b> <a href="printable_8h_source.xhtml#l00028">printable.h:28</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml">scram::gui::model::Gate</a></div><div class="ttdoc">The proxy to manage mef::Gate. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00326">model.h:326</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:46 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
