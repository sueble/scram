<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>elementcontainermodel.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_11bc0974ce736ce9a6fadebbeb7a8314.xhtml">gui</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">elementcontainermodel.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="elementcontainermodel_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2017-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// The table model for elements.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;cstdint&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;QAbstractItemModel&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;QSortFilterProxyModel&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;src/element.h&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;src/event.h&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="model_8h.xhtml">model.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram_1_1gui_1_1model.xhtml">scram::gui::model</a> {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">/// The base class for models to list elements in a table.</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">/// The model contains the original element pointer for Qt::UserRole.</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">/// This only applies to top-level indices.</span></div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml">   42</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml">ElementContainerModel</a> : <span class="keyword">public</span> QAbstractItemModel</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    Q_OBJECT</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">    /// @param[in] parent  The top index (i.e., not valid).</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">    /// @returns The number of elements in the list as the row count.</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"></span>    <span class="keywordtype">int</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab74b484ca12e28fb5346332c16a9c9f1">rowCount</a>(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">protected</span>:<span class="comment"></span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">    /// @tparam T  The container type of smart pointers to elements.</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">    /// @param[in] container  The data container.</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">    /// @param[in] model  The model managing the proxy Elements.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">    /// @param[in,out] parent  The optional owner of this object.</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"></span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a9e0c117f40f7d5c87957ae2539b6b4c5">ElementContainerModel</a>(<span class="keyword">const</span> T &amp;container, <a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">Model</a> *model,</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                   QObject *parent = <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">    /// Puts the element pointer into the index&#39;s internal pointer.</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"></span>    QModelIndex <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a>(<span class="keywordtype">int</span> row, <span class="keywordtype">int</span> column,</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                      <span class="keyword">const</span> QModelIndex &amp;parent) <span class="keyword">const override</span>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">    /// Assumes the table-layout and returns null index.</span></div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">   67</a></span>&#160;<span class="comment"></span>    QModelIndex <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a>(<span class="keyword">const</span> QModelIndex &amp;)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> {}; }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">    /// @param[in] index  The top row index in this container model.</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">    /// @returns The element with the given index (row).</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">    /// @pre The index is valid.</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment"></span>    <a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a9aee454164cf6db9962bd29e367c9082">getElement</a>(<span class="keywordtype">int</span> index) <span class="keyword">const</span>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">    /// @param[in] element  The element in this container model.</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">    /// @returns The current index (row) of the element.</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">    /// @pre The element is in the table.</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment"></span>    <span class="keywordtype">int</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a057325384c34e69a890a8a409dea2d09">getElementIndex</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element) <span class="keyword">const</span>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">    /// @returns The current elements in the container.</span></div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#af97ae0b24134a7c2fd8da6e2fdd3b042">   84</a></span>&#160;<span class="comment"></span>    <span class="keyword">const</span> std::vector&lt;Element *&gt; &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#af97ae0b24134a7c2fd8da6e2fdd3b042">elements</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_elements; }</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keyword">protected</span>:<span class="comment"></span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">    /// Connects of the element change signals to the table modification.</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">    /// The base implementation only handles signals coming from base element.</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">    /// The derived classes need to override this function</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">    /// and append more connections.</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">    /// @param[in] element  The element in this container model.</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a48973e3c3eb7a5323cf73c30f484d861">connectElement</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keyword">private</span>:<span class="comment"></span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">    /// Adds an elements to the end of this container model.</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> addElement(<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element);<span class="comment"></span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">    /// Removes an element from the container model.</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> removeElement(<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    std::vector&lt;Element *&gt; m_elements; <span class="comment">///&lt; All the elements in the model.</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment"></span>    std::unordered_map&lt;Element *, int&gt; m_elementToIndex; <span class="comment">///&lt; An element to row.</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">/// The proxy model allows sorting and filtering.</span></div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1SortFilterProxyModel.xhtml">  106</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1gui_1_1model_1_1SortFilterProxyModel.xhtml">SortFilterProxyModel</a> : <span class="keyword">public</span> QSortFilterProxyModel</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    Q_OBJECT</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keyword">using</span> QSortFilterProxyModel::QSortFilterProxyModel;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">    /// Keep the row indices sequential.</span></div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1SortFilterProxyModel.xhtml#ab172029b6068ccc8011e39c9bc7e0f8c">  114</a></span>&#160;<span class="comment"></span>    QVariant <a class="code" href="classscram_1_1gui_1_1model_1_1SortFilterProxyModel.xhtml#ab172029b6068ccc8011e39c9bc7e0f8c">headerData</a>(<span class="keywordtype">int</span> section, Qt::Orientation orientation,</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                        <span class="keywordtype">int</span> role)<span class="keyword"> const override</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">return</span> sourceModel()-&gt;headerData(section, orientation, role);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    }</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;};</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">/// Container model for basic events.</span></div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml">  122</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml">BasicEventContainerModel</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml">ElementContainerModel</a></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;{</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    Q_OBJECT</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml#a294f68fe48df2261d1b9901c60815fef">  127</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">ItemModel</a> = <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">BasicEvent</a>;     <span class="comment">///&lt; The proxy Element type.</span></div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml#a23e768dcd2fc0edac72dae73579ca24c">  128</a></span>&#160;<span class="comment"></span>    <span class="keyword">using</span> <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml#a23e768dcd2fc0edac72dae73579ca24c">DataType</a> = mef::BasicEvent; <span class="comment">///&lt; The data Element type.</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">    /// Constructs from the table of proxy Basic Events in the Model.</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment"></span>    <span class="keyword">explicit</span> <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml">BasicEventContainerModel</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">Model</a> *model, QObject *<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a> = <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">    /// Required standard member functions of QAbstractItemModel interface.</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">    /// @{</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment"></span>    <span class="keywordtype">int</span> columnCount(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    QVariant headerData(<span class="keywordtype">int</span> section, Qt::Orientation orientation,</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                        <span class="keywordtype">int</span> role) <span class="keyword">const override</span>;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    QVariant data(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a>, <span class="keywordtype">int</span> role) <span class="keyword">const override</span>;<span class="comment"></span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">    /// @}</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a48973e3c3eb7a5323cf73c30f484d861">connectElement</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element) <span class="keyword">final</span>;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;};</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">/// Container model for house events.</span></div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml">  146</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml">HouseEventContainerModel</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml">ElementContainerModel</a></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    Q_OBJECT</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml#ac56020c6e5920d2a7fd5b9c160c8294d">  151</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">ItemModel</a> = <a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">HouseEvent</a>;     <span class="comment">///&lt; The proxy Element type.</span></div><div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml#a7b1fe699ec6e75c89628ea62ef7d642c">  152</a></span>&#160;<span class="comment"></span>    <span class="keyword">using</span> <a class="code" href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml#a7b1fe699ec6e75c89628ea62ef7d642c">DataType</a> = mef::HouseEvent; <span class="comment">///&lt; The data Element type.</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">    /// Constructs from the table of proxy House Events in the Model.</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment"></span>    <span class="keyword">explicit</span> <a class="code" href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml">HouseEventContainerModel</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">Model</a> *model, QObject *<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a> = <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">    /// Required standard member functions of QAbstractItemModel interface.</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">    /// @{</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment"></span>    <span class="keywordtype">int</span> columnCount(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    QVariant headerData(<span class="keywordtype">int</span> section, Qt::Orientation orientation,</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                        <span class="keywordtype">int</span> role) <span class="keyword">const override</span>;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    QVariant data(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a>, <span class="keywordtype">int</span> role) <span class="keyword">const override</span>;<span class="comment"></span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">    /// @}</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a48973e3c3eb7a5323cf73c30f484d861">connectElement</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element) <span class="keyword">final</span>;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;};</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">/// Tree-view inside table.</span></div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml">  170</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml">GateContainerModel</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml">ElementContainerModel</a></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;{</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    Q_OBJECT</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a01167f903ffd02edb3af3bf583854402">  175</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">ItemModel</a> = <a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">Gate</a>;     <span class="comment">///&lt; The proxy Element type.</span></div><div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a6cb1db458db9e09b39cd5ecdcf916006">  176</a></span>&#160;<span class="comment"></span>    <span class="keyword">using</span> <a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a6cb1db458db9e09b39cd5ecdcf916006">DataType</a> = mef::Gate; <span class="comment">///&lt; The data Element type.</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">    /// Constructs from the table of proxy Gates in the Model.</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment"></span>    <span class="keyword">explicit</span> <a class="code" href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml">GateContainerModel</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">Model</a> *model, QObject *<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a> = <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">    /// The index for children embeds the parent information into the data.</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">    /// @{</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment"></span>    QModelIndex <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a>(<span class="keywordtype">int</span> row, <span class="keywordtype">int</span> column,</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                      <span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordtype">int</span> columnCount(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab74b484ca12e28fb5346332c16a9c9f1">rowCount</a>(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    QModelIndex <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a>(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    QVariant headerData(<span class="keywordtype">int</span> section, Qt::Orientation orientation,</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                        <span class="keywordtype">int</span> role) <span class="keyword">const override</span>;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    QVariant data(<span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">index</a>, <span class="keywordtype">int</span> role) <span class="keyword">const override</span>;<span class="comment"></span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">    /// @}</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> std::uintptr_t m_parentMask = 1; <span class="comment">///&lt; Tagged parent pointer.</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a48973e3c3eb7a5323cf73c30f484d861">connectElement</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">Element</a> *element) <span class="keyword">final</span>;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;};</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">/// The proxy model specialized for the gate tree-table.</span></div><div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1model_1_1GateSortFilterProxyModel.xhtml">  200</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1gui_1_1model_1_1GateSortFilterProxyModel.xhtml">GateSortFilterProxyModel</a> : <span class="keyword">public</span> QSortFilterProxyModel</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;{</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    Q_OBJECT</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keyword">using</span> QSortFilterProxyModel::QSortFilterProxyModel;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keyword">protected</span>:<span class="comment"></span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">    /// Accepts only top elements for sorting and filtering.</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">    /// @{</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> filterAcceptsRow(<span class="keywordtype">int</span> row, <span class="keyword">const</span> QModelIndex &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">parent</a>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keywordtype">bool</span> lessThan(<span class="keyword">const</span> QModelIndex &amp;lhs,</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                  <span class="keyword">const</span> QModelIndex &amp;rhs) <span class="keyword">const override</span>;<span class="comment"></span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">    /// @}</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;} <span class="comment">// namespace scram::gui::model</span></div><div class="ttc" id="classscram_1_1gui_1_1model_1_1GateContainerModel_xhtml_a6cb1db458db9e09b39cd5ecdcf916006"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml#a6cb1db458db9e09b39cd5ecdcf916006">scram::gui::model::GateContainerModel::DataType</a></div><div class="ttdeci">mef::Gate DataType</div><div class="ttdoc">The data Element type. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00176">elementcontainermodel.h:176</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">scram::gui::model::BasicEvent</a></div><div class="ttdoc">The proxy to manage mef::BasicEvent. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00179">model.h:179</a></div></div>
<div class="ttc" id="model_8h_xhtml"><div class="ttname"><a href="model_8h.xhtml">model.h</a></div><div class="ttdoc">Wrapper Model classes for the MEF data. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml_af97ae0b24134a7c2fd8da6e2fdd3b042"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#af97ae0b24134a7c2fd8da6e2fdd3b042">scram::gui::model::ElementContainerModel::elements</a></div><div class="ttdeci">const std::vector&lt; Element * &gt; &amp; elements() const </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00084">elementcontainermodel.h:84</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">scram::gui::model::HouseEvent</a></div><div class="ttdoc">The proxy to manage mef::HouseEvent. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00284">model.h:284</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1GateSortFilterProxyModel_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1GateSortFilterProxyModel.xhtml">scram::gui::model::GateSortFilterProxyModel</a></div><div class="ttdoc">The proxy model specialized for the gate tree-table. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00200">elementcontainermodel.h:200</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1GateContainerModel_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1GateContainerModel.xhtml">scram::gui::model::GateContainerModel</a></div><div class="ttdoc">Tree-view inside table. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00170">elementcontainermodel.h:170</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1SortFilterProxyModel_xhtml_ab172029b6068ccc8011e39c9bc7e0f8c"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1SortFilterProxyModel.xhtml#ab172029b6068ccc8011e39c9bc7e0f8c">scram::gui::model::SortFilterProxyModel::headerData</a></div><div class="ttdeci">QVariant headerData(int section, Qt::Orientation orientation, int role) const override</div><div class="ttdoc">Keep the row indices sequential. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00114">elementcontainermodel.h:114</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml_a057325384c34e69a890a8a409dea2d09"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a057325384c34e69a890a8a409dea2d09">scram::gui::model::ElementContainerModel::getElementIndex</a></div><div class="ttdeci">int getElementIndex(Element *element) const </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00076">elementcontainermodel.cpp:76</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEventContainerModel_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml">scram::gui::model::BasicEventContainerModel</a></div><div class="ttdoc">Container model for basic events. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00122">elementcontainermodel.h:122</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml_a18aa736cabfb5651e6c90330e9046241"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a18aa736cabfb5651e6c90330e9046241">scram::gui::model::ElementContainerModel::index</a></div><div class="ttdeci">QModelIndex index(int row, int column, const QModelIndex &amp;parent) const override</div><div class="ttdoc">Puts the element pointer into the index&amp;#39;s internal pointer. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00063">elementcontainermodel.cpp:63</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEventContainerModel_xhtml_a23e768dcd2fc0edac72dae73579ca24c"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEventContainerModel.xhtml#a23e768dcd2fc0edac72dae73579ca24c">scram::gui::model::BasicEventContainerModel::DataType</a></div><div class="ttdeci">mef::BasicEvent DataType</div><div class="ttdoc">The data Element type. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00128">elementcontainermodel.h:128</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml">scram::gui::model::ElementContainerModel</a></div><div class="ttdoc">The base class for models to list elements in a table. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00042">elementcontainermodel.h:42</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml_ab74b484ca12e28fb5346332c16a9c9f1"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab74b484ca12e28fb5346332c16a9c9f1">scram::gui::model::ElementContainerModel::rowCount</a></div><div class="ttdeci">int rowCount(const QModelIndex &amp;parent) const override</div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00113">elementcontainermodel.cpp:113</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml_a9e0c117f40f7d5c87957ae2539b6b4c5"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a9e0c117f40f7d5c87957ae2539b6b4c5">scram::gui::model::ElementContainerModel::ElementContainerModel</a></div><div class="ttdeci">ElementContainerModel(const T &amp;container, Model *model, QObject *parent=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00033">elementcontainermodel.cpp:33</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml_ab0b11ddc9cea4fe7494dcb8df120396b"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#ab0b11ddc9cea4fe7494dcb8df120396b">scram::gui::model::ElementContainerModel::parent</a></div><div class="ttdeci">QModelIndex parent(const QModelIndex &amp;) const override</div><div class="ttdoc">Assumes the table-layout and returns null index. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00067">elementcontainermodel.h:67</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml_a48973e3c3eb7a5323cf73c30f484d861"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a48973e3c3eb7a5323cf73c30f484d861">scram::gui::model::ElementContainerModel::connectElement</a></div><div class="ttdeci">virtual void connectElement(Element *element)</div><div class="ttdoc">Connects of the element change signals to the table modification. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00050">elementcontainermodel.cpp:50</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEventContainerModel_xhtml_a7b1fe699ec6e75c89628ea62ef7d642c"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml#a7b1fe699ec6e75c89628ea62ef7d642c">scram::gui::model::HouseEventContainerModel::DataType</a></div><div class="ttdeci">mef::HouseEvent DataType</div><div class="ttdoc">The data Element type. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00152">elementcontainermodel.h:152</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model.xhtml">scram::gui::model::Model</a></div><div class="ttdoc">The wrapper around the MEF Model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00413">model.h:413</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEventContainerModel_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEventContainerModel.xhtml">scram::gui::model::HouseEventContainerModel</a></div><div class="ttdoc">Container model for house events. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00146">elementcontainermodel.h:146</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml">scram::gui::model::Element</a></div><div class="ttdoc">The base proxy Element model for mef::Element. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00064">model.h:64</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1ElementContainerModel_xhtml_a9aee454164cf6db9962bd29e367c9082"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1ElementContainerModel.xhtml#a9aee454164cf6db9962bd29e367c9082">scram::gui::model::ElementContainerModel::getElement</a></div><div class="ttdeci">Element * getElement(int index) const </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00070">elementcontainermodel.cpp:70</a></div></div>
<div class="ttc" id="namespacescram_1_1gui_1_1model_xhtml"><div class="ttname"><a href="namespacescram_1_1gui_1_1model.xhtml">scram::gui::model</a></div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8cpp_source.xhtml#l00030">elementcontainermodel.cpp:30</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1SortFilterProxyModel_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1SortFilterProxyModel.xhtml">scram::gui::model::SortFilterProxyModel</a></div><div class="ttdoc">The proxy model allows sorting and filtering. </div><div class="ttdef"><b>Definition:</b> <a href="elementcontainermodel_8h_source.xhtml#l00106">elementcontainermodel.h:106</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml">scram::gui::model::Gate</a></div><div class="ttdoc">The proxy to manage mef::Gate. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00326">model.h:326</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:46 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
