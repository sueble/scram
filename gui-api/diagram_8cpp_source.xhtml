<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>diagram.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_11bc0974ce736ce9a6fadebbeb7a8314.xhtml">gui</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">diagram.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="diagram_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2016-2018 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// Implementation of diagram graphics.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="diagram_8h.xhtml">diagram.h</a>&quot;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;cmath&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;QApplication&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;QFontMetrics&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;QGraphicsLineItem&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;QGraphicsPathItem&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;QGraphicsPolygonItem&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;QGraphicsRectItem&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;QGraphicsTextItem&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;QPainter&gt;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;QPainterPath&gt;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;QRectF&gt;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &lt;QStyleOptionGraphicsItem&gt;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &quot;src/ext/find_iterator.h&quot;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="guiassert_8h.xhtml">guiassert.h</a>&quot;</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="overload_8h.xhtml">overload.h</a>&quot;</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram_1_1gui_1_1diagram.xhtml">scram::gui::diagram</a> {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">const</span> QSizeF <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#aed4f40055728d4267b25d6b29b020e1e">Event::m_size</a> = {16, 11};</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">const</span> <span class="keywordtype">double</span> <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a8cc052bc51a140c979654e33e13d0a98">Event::m_baseHeight</a> = 6.5;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">const</span> <span class="keywordtype">double</span> <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#ac8b23e94c2d42c69c4ca28e66b62745e">Event::m_idBoxLength</a> = 10;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">const</span> <span class="keywordtype">double</span> <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#ab0cdcfb3126ca448d6814ed87a0c5aec">Event::m_labelBoxHeight</a> = 4;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a4e59035f3b99fb4d8342a43db34144fa">   52</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a4e59035f3b99fb4d8342a43db34144fa">Event::Event</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml">model::Element</a> *event, QGraphicsItem *parent)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    : QGraphicsItem(parent), m_event(event), m_typeGraphics(nullptr)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    m_labelConnection = QObject::connect(event, &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a4c7055b012fe4fdd5772acd7c9d6c58d">model::Element::labelChanged</a>,</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                         [<span class="keyword">this</span>] { update(); });</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    m_idConnection = QObject::connect(event, &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#ad3a0378c2f765705286b393613606337">model::Element::idChanged</a>,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                      [<span class="keyword">this</span>] { update(); });</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    setFlag(QGraphicsItem::ItemIsSelectable, <span class="keyword">true</span>);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;Event::~Event() noexcept</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    QObject::disconnect(m_labelConnection);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    QObject::disconnect(m_idConnection);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">   68</a></span>&#160;QSizeF <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">Event::units</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordtype">double</span> h = QApplication::fontMetrics().height();</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">return</span> {h / 2, h};</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a15522fb056ce3877d83d27c4f1465a9b">   74</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a15522fb056ce3877d83d27c4f1465a9b">Event::width</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#aed4f40055728d4267b25d6b29b020e1e">m_size</a>.width() * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().width();</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a689aedbf5244a97df88a76993241991d">   79</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a689aedbf5244a97df88a76993241991d">Event::setTypeGraphics</a>(QGraphicsItem *item)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keyword">delete</span> m_typeGraphics;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    m_typeGraphics = item;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    m_typeGraphics-&gt;setParentItem(<span class="keyword">this</span>);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    m_typeGraphics-&gt;setPos(0, <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a8cc052bc51a140c979654e33e13d0a98">m_baseHeight</a> * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height());</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a95018bb65f073fc16894750d0557d58f">   87</a></span>&#160;QRectF <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a95018bb65f073fc16894750d0557d58f">Event::boundingRect</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordtype">double</span> w = <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().width();</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordtype">double</span> h = <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height();</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">double</span> labelBoxWidth = <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#aed4f40055728d4267b25d6b29b020e1e">m_size</a>.width() * w;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">return</span> QRectF(-labelBoxWidth / 2, 0, labelBoxWidth, <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a8cc052bc51a140c979654e33e13d0a98">m_baseHeight</a> * h);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#ab9341662591da72ff584e8a741cdee75">   95</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#ab9341662591da72ff584e8a741cdee75">Event::paint</a>(QPainter *painter, <span class="keyword">const</span> QStyleOptionGraphicsItem *option,</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                  QWidget * <span class="comment">/*widget*/</span>)</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">if</span> (option-&gt;state &amp; QStyle::State_Selected)</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        painter-&gt;setBrush(QColor(<span class="stringliteral">&quot;cyan&quot;</span>));</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordtype">double</span> w = <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().width();</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordtype">double</span> h = <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height();</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordtype">double</span> labelBoxWidth = <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#aed4f40055728d4267b25d6b29b020e1e">m_size</a>.width() * w;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    QRectF rect(-labelBoxWidth / 2, 0, labelBoxWidth, <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#ab0cdcfb3126ca448d6814ed87a0c5aec">m_labelBoxHeight</a> * h);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    painter-&gt;drawRect(rect);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    painter-&gt;drawText(rect, Qt::AlignCenter | Qt::TextWordWrap,</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                      painter-&gt;fontMetrics().elidedText(</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                          <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a812e5932616a887dc1a6ba8f0a9d2747">m_event</a>-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a6d4704b8160d88d8a49f76096ee45677">label</a>(), Qt::ElideRight,</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                          labelBoxWidth * (<a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#ab0cdcfb3126ca448d6814ed87a0c5aec">m_labelBoxHeight</a> - 0.5)));</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    painter-&gt;drawLine(QPointF(0, <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#ab0cdcfb3126ca448d6814ed87a0c5aec">m_labelBoxHeight</a> * h),</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                      QPointF(0, (<a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#ab0cdcfb3126ca448d6814ed87a0c5aec">m_labelBoxHeight</a> + 1) * h));</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordtype">double</span> idBoxWidth = <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#ac8b23e94c2d42c69c4ca28e66b62745e">m_idBoxLength</a> * w;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    QRectF nameRect(-idBoxWidth / 2, (<a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#ab0cdcfb3126ca448d6814ed87a0c5aec">m_labelBoxHeight</a> + 1) * h, idBoxWidth, h);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    painter-&gt;drawRect(nameRect);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    painter-&gt;drawText(nameRect, Qt::AlignCenter,</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                      painter-&gt;fontMetrics().elidedText(</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                          <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a812e5932616a887dc1a6ba8f0a9d2747">m_event</a>-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">id</a>(), Qt::ElideRight, idBoxWidth));</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    painter-&gt;drawLine(QPointF(0, (<a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#ab0cdcfb3126ca448d6814ed87a0c5aec">m_labelBoxHeight</a> + 2) * h),</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                      QPointF(0, (<a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#ab0cdcfb3126ca448d6814ed87a0c5aec">m_labelBoxHeight</a> + 2.5) * h));</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;}</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1diagram_1_1BasicEvent.xhtml#a8d42e9b3c6a1f1dc7c764da03aa2134e">  125</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1diagram_1_1BasicEvent.xhtml#a8d42e9b3c6a1f1dc7c764da03aa2134e">BasicEvent::BasicEvent</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">model::BasicEvent</a> *event, QGraphicsItem *parent)</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    : <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml">Event</a>(event, parent)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordtype">double</span> d = int(<a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#aed4f40055728d4267b25d6b29b020e1e">m_size</a>.height() - <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a8cc052bc51a140c979654e33e13d0a98">m_baseHeight</a>) * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height();</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a689aedbf5244a97df88a76993241991d">Event::setTypeGraphics</a>(<span class="keyword">new</span> QGraphicsEllipseItem(-d / 2, 0, d, d));</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1diagram_1_1HouseEvent.xhtml#aa0e8d4250c50e7795f15e7e67fd8da5c">  132</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1diagram_1_1HouseEvent.xhtml#aa0e8d4250c50e7795f15e7e67fd8da5c">HouseEvent::HouseEvent</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">model::HouseEvent</a> *event, QGraphicsItem *parent)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    : <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml">Event</a>(event, parent)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordtype">double</span> h = int(<a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#aed4f40055728d4267b25d6b29b020e1e">m_size</a>.height() - <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a8cc052bc51a140c979654e33e13d0a98">m_baseHeight</a>) * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height();</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordtype">double</span> y0 = h * 0.25;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a689aedbf5244a97df88a76993241991d">Event::setTypeGraphics</a>(<span class="keyword">new</span> QGraphicsPolygonItem(</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        {{{0, 0}, {-h / 2, y0}, {-h / 2, h}, {h / 2, h}, {h / 2, y0}}}));</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;}</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1diagram_1_1UndevelopedEvent.xhtml#a5047cec2da3a7af805982b9acf10d063">  141</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1diagram_1_1UndevelopedEvent.xhtml#a5047cec2da3a7af805982b9acf10d063">UndevelopedEvent::UndevelopedEvent</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">model::BasicEvent</a> *event,</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                                   QGraphicsItem *parent)</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    : <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml">Event</a>(event, parent)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;{</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordtype">double</span> h = int(<a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#aed4f40055728d4267b25d6b29b020e1e">m_size</a>.height() - <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a8cc052bc51a140c979654e33e13d0a98">m_baseHeight</a>) * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height();</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordtype">double</span> a = h / std::sqrt(2);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keyword">auto</span> *diamond = <span class="keyword">new</span> QGraphicsRectItem(-a / 2, (h - a) / 2, a, a);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    diamond-&gt;setTransformOriginPoint(0, h / 2);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    diamond-&gt;setRotation(45);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a689aedbf5244a97df88a76993241991d">Event::setTypeGraphics</a>(diamond);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;}</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1diagram_1_1ConditionalEvent.xhtml#a87f483e907b2feecb3b44989dbce44d1">  153</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1diagram_1_1ConditionalEvent.xhtml#a87f483e907b2feecb3b44989dbce44d1">ConditionalEvent::ConditionalEvent</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">model::BasicEvent</a> *event,</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                                   QGraphicsItem *parent)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    : <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml">Event</a>(event, parent)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;{</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordtype">double</span> d = int(<a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#aed4f40055728d4267b25d6b29b020e1e">m_size</a>.height() - <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a8cc052bc51a140c979654e33e13d0a98">m_baseHeight</a>) * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height();</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordtype">double</span> minor = 0.70 * d;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a689aedbf5244a97df88a76993241991d">Event::setTypeGraphics</a>(<span class="keyword">new</span> QGraphicsEllipseItem(-d / 2, 0, d, minor));</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1diagram_1_1TransferIn.xhtml#a2730a1fcb6263bbe58286e9b6082f642">  162</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1diagram_1_1TransferIn.xhtml#a2730a1fcb6263bbe58286e9b6082f642">TransferIn::TransferIn</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">model::Gate</a> *event, QGraphicsItem *parent)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    : <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml">Event</a>(event, parent)</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;{</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordtype">double</span> d = int(<a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#aed4f40055728d4267b25d6b29b020e1e">m_size</a>.height() - <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a8cc052bc51a140c979654e33e13d0a98">m_baseHeight</a>) * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height();</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a689aedbf5244a97df88a76993241991d">Event::setTypeGraphics</a>(</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keyword">new</span> QGraphicsPolygonItem({{{0, 0}, {-d / 2, d}, {d / 2, d}}}));</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;}</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword">const</span> QSizeF Gate::m_maxSize = {6, 3};</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keyword">const</span> <span class="keywordtype">double</span> Gate::m_space = 1;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml#a2111abee08814f57bc5cdfd0452b8ec0">  173</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml#a2111abee08814f57bc5cdfd0452b8ec0">Gate::Gate</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">model::Gate</a> *event, <a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">model::Model</a> *model,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;           std::unordered_map&lt;const mef::Gate *, Gate *&gt; *transfer,</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;           QGraphicsItem *parent)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    : <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml">Event</a>(event, parent)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;{</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordtype">double</span> availableHeight =</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#aed4f40055728d4267b25d6b29b020e1e">m_size</a>.height() - <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a8cc052bc51a140c979654e33e13d0a98">m_baseHeight</a> - m_maxSize.height();</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keyword">auto</span> *pathItem = <span class="keyword">new</span> QGraphicsLineItem(</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        0, 0, 0, (availableHeight - 1) * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height(), <span class="keyword">this</span>);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    pathItem-&gt;setPos(0, (<a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a8cc052bc51a140c979654e33e13d0a98">m_baseHeight</a> + m_maxSize.height()) * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height());</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a689aedbf5244a97df88a76993241991d">Event::setTypeGraphics</a>(<a class="code" href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml#a02600d1e3655e693056bb5277ff35a20">getGateGraphicsType</a>(event-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml#af6bdef0f594fd764a96912a4df8eb2f2">type</a>()).release());</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keyword">struct</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    {</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml">Event</a> *operator()(<span class="keyword">const</span> mef::BasicEvent *arg)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        {</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">model::BasicEvent</a> *proxyEvent =</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                m_model-&gt;basicEvents().find(arg)-&gt;get();</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="keywordflow">switch</span> (proxyEvent-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a827dd95218bb3eece34e5777d487a590">flavor</a>()) {</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keywordflow">case</span> model::BasicEvent::Basic:</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1diagram_1_1BasicEvent.xhtml">BasicEvent</a>(proxyEvent, m_parent);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keywordflow">case</span> model::BasicEvent::Undeveloped:</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1diagram_1_1UndevelopedEvent.xhtml">UndevelopedEvent</a>(proxyEvent, m_parent);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordflow">case</span> model::BasicEvent::Conditional:</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1diagram_1_1ConditionalEvent.xhtml">ConditionalEvent</a>(proxyEvent, m_parent);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            }</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;Unexpected event flavor&quot;</span>, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        }</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml">Event</a> *operator()(<span class="keyword">const</span> mef::HouseEvent *arg)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        {</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1diagram_1_1HouseEvent.xhtml">HouseEvent</a>(m_model-&gt;houseEvents().find(arg)-&gt;get(),</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                                  m_parent);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        }</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml">Event</a> *operator()(<span class="keyword">const</span> mef::Gate *arg)</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        {</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            <a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">model::Gate</a> *proxyEvent = m_model-&gt;gates().find(arg)-&gt;get();</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="keywordflow">if</span> (<span class="keyword">auto</span> it = ext::find(*m_transfer, arg)) {</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                it-&gt;second-&gt;addTransferOut();</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1diagram_1_1TransferIn.xhtml">TransferIn</a>(proxyEvent, m_parent);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            }</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <span class="keyword">auto</span> *arg_gate =</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                <span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml#a2111abee08814f57bc5cdfd0452b8ec0">Gate</a>(proxyEvent, m_model, m_transfer, m_parent);</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            m_transfer-&gt;emplace(arg, arg_gate);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="keywordflow">return</span> arg_gate;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        }</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        QGraphicsItem *m_parent;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        decltype(model) m_model;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        decltype(transfer) m_transfer;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    } formula_visitor{<span class="keyword">this</span>, model, transfer};</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="keywordtype">double</span> linkY = (<a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#aed4f40055728d4267b25d6b29b020e1e">m_size</a>.height() - 1) * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height();</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    std::vector&lt;std::pair&lt;Event *, QGraphicsLineItem *&gt;&gt; children;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> mef::Formula::EventArg &amp;eventArg : event-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml#a14671d156e58b060ac84a58410543f64">args</a>()) {</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keyword">auto</span> *child = std::visit(formula_visitor, eventArg);</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keyword">auto</span> *link = <span class="keyword">new</span> QGraphicsLineItem(0, 0, 0, <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height(), <span class="keyword">this</span>);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">if</span> (!children.empty())</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            m_width += m_space * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height();</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        child-&gt;moveBy(m_width + child-&gt;width() / 2,</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                      <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#aed4f40055728d4267b25d6b29b020e1e">m_size</a>.height() * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height());</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        link-&gt;moveBy(m_width + child-&gt;width() / 2, linkY);</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        m_width += child-&gt;width();</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        children.emplace_back(child, link);</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    }</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="comment">// Shift the children left.</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;child : children) {</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        child.first-&gt;moveBy(-m_width / 2, 0);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        child.second-&gt;moveBy(-m_width / 2, 0);</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    }</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="comment">// Add the planar line to complete the connection.</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keywordflow">if</span> (children.size() &gt; 1)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="keyword">new</span> QGraphicsLineItem(children.front().first-&gt;pos().x(), linkY,</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                              children.back().first-&gt;pos().x(), linkY, <span class="keyword">this</span>);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;}</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml#a02600d1e3655e693056bb5277ff35a20">  246</a></span>&#160;std::unique_ptr&lt;QGraphicsItem&gt; <a class="code" href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml#a02600d1e3655e693056bb5277ff35a20">Gate::getGateGraphicsType</a>(mef::Operator type)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;{</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    static_assert(mef::kNumOperators == 8, <span class="stringliteral">&quot;Unexpected operator changes&quot;</span>);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keywordflow">switch</span> (type) {</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keywordflow">case</span> mef::kNull:</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordflow">return</span> std::make_unique&lt;QGraphicsLineItem&gt;(</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            0, 0, 0, m_maxSize.height() * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height());</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordflow">case</span> mef::kAnd: {</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keywordtype">double</span> h = m_maxSize.height() * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height();</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        QPainterPath paintPath;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="keywordtype">double</span> maxHeight = m_maxSize.height() * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height();</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        paintPath.moveTo(0, maxHeight);</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        paintPath.arcTo(-h / 2, 0, h, maxHeight * 2, 0, 180);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        paintPath.closeSubpath();</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">return</span> std::make_unique&lt;QGraphicsPathItem&gt;(paintPath);</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    }</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keywordflow">case</span> mef::kOr: {</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        QPainterPath paintPath;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="keywordtype">double</span> x1 = m_maxSize.width() * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().width() / 2;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keywordtype">double</span> maxHeight = m_maxSize.height() * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height();</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        QRectF rectangle(-x1, 0, x1 * 2, maxHeight * 2);</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        paintPath.arcMoveTo(rectangle, 0);</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        paintPath.arcTo(rectangle, 0, 180);</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="keywordtype">double</span> lowerArc = 0.25;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        rectangle.setHeight(rectangle.height() * lowerArc);</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        rectangle.moveTop(maxHeight * (1 - lowerArc));</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        paintPath.arcMoveTo(rectangle, 0);</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        paintPath.arcTo(rectangle, 0, 180);</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        paintPath.arcMoveTo(rectangle, 90);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        paintPath.lineTo(0, maxHeight);</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <span class="keywordflow">return</span> std::make_unique&lt;QGraphicsPathItem&gt;(paintPath);</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    }</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keywordflow">case</span> mef::kVote: {</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="keywordtype">double</span> h = m_maxSize.height() * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height();</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="keywordtype">double</span> a = h / sqrt(3);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keyword">auto</span> polygon =</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            std::make_unique&lt;QGraphicsPolygonItem&gt;(QPolygonF{{{-a / 2, 0},</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                                                              {a / 2, 0},</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                                                              {a, h / 2},</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                                                              {a / 2, h},</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                                                              {-a / 2, h},</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                                                              {-a, h / 2}}});</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keyword">auto</span> *gate = <span class="keyword">static_cast&lt;</span><a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">model::Gate</a> *<span class="keyword">&gt;</span>(<a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a812e5932616a887dc1a6ba8f0a9d2747">m_event</a>);</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="keyword">auto</span> *text = <span class="keyword">new</span> QGraphicsTextItem(QStringLiteral(<span class="stringliteral">&quot;%1/%2&quot;</span>)</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                                               .arg(gate-&gt;voteNumber())</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                                               .arg(gate-&gt;numArgs()),</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                                           polygon.get());</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        QFont font = text-&gt;font();</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        font.setPointSizeF(1.5 * font.pointSizeF());</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        text-&gt;setFont(font);</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        text-&gt;setPos(-text-&gt;boundingRect().width() / 2,</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                     (h - text-&gt;boundingRect().height()) / 2);</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <span class="keywordflow">return</span> std::move(polygon);</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    }</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="keywordflow">case</span> mef::kNot: {</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <span class="keywordtype">double</span> h = m_maxSize.height() * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height();</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        QPainterPath paintPath;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        paintPath.addEllipse(-<a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height() / 2, 0, <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height(),</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                             <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height());</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        paintPath.moveTo(0, <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height());</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        <span class="keywordtype">double</span> a = h - <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height();</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        paintPath.lineTo(-a / 2, h);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        paintPath.lineTo(a / 2, h);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        paintPath.closeSubpath();</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        <span class="keywordflow">return</span> std::make_unique&lt;QGraphicsPathItem&gt;(paintPath);</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    }</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordflow">case</span> mef::kXor: {</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <span class="keyword">auto</span> orItem = <a class="code" href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml#a02600d1e3655e693056bb5277ff35a20">getGateGraphicsType</a>(mef::kOr);</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        <span class="keywordtype">double</span> x1 = m_maxSize.width() * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().width() / 2;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <span class="keywordtype">double</span> h = m_maxSize.height() * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height();</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        QPainterPath paintPath;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        paintPath.lineTo(-x1, h);</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        paintPath.moveTo(x1, h);</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        paintPath.lineTo(0, 0);</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        <span class="keyword">new</span> QGraphicsPathItem(paintPath, orItem.get());</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        <span class="keywordflow">return</span> orItem;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    }</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordflow">case</span> mef::kNor: {</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="keyword">auto</span> orItem = <a class="code" href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml#a02600d1e3655e693056bb5277ff35a20">getGateGraphicsType</a>(mef::kOr);</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="keyword">auto</span> circle = std::make_unique&lt;QGraphicsEllipseItem&gt;(</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            -<a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height() / 2, 0, <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height(), <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height());</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <span class="keywordtype">double</span> orHeight = orItem-&gt;boundingRect().height();</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        orItem-&gt;setScale((orHeight - <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height()) / orHeight);</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        orItem-&gt;setPos(0, <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height());</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        orItem.release()-&gt;setParentItem(circle.get());</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <span class="keywordflow">return</span> std::move(circle);</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    }</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="keywordflow">case</span> mef::kNand: {</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        <span class="keyword">auto</span> andItem = <a class="code" href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml#a02600d1e3655e693056bb5277ff35a20">getGateGraphicsType</a>(mef::kAnd);</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="keyword">auto</span> circle = std::make_unique&lt;QGraphicsEllipseItem&gt;(</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            -<a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height() / 2, 0, <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height(), <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height());</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="keywordtype">double</span> andHeight = andItem-&gt;boundingRect().height();</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        andItem-&gt;setScale((andHeight - <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height()) / andHeight);</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        andItem-&gt;setPos(0, <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height());</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        andItem.release()-&gt;setParentItem(circle.get());</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <span class="keywordflow">return</span> std::move(circle);</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    }</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    }</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(<span class="keyword">false</span> &amp;&amp; <span class="stringliteral">&quot;Unexpected gate type&quot;</span>, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;}</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml#a40be194272efe4266eeb8a62364826f7">  347</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml#a40be194272efe4266eeb8a62364826f7">Gate::width</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="keywordflow">return</span> m_width;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;}</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml#a0d59d686a63ffaa23f6c121860354d4b">  352</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml#a0d59d686a63ffaa23f6c121860354d4b">Gate::addTransferOut</a>()</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;{</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keywordflow">if</span> (m_transferOut)</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    m_transferOut = <span class="keyword">true</span>;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    QPainterPath paintPath;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keywordtype">double</span> x1 = m_maxSize.width() * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().width() / 2;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="keywordtype">double</span> h = <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height() * std::sqrt(3) / 2;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    paintPath.lineTo(x1 + <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height(), 0);</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    paintPath.lineTo(x1 + 0.5 * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height(), h);</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    paintPath.lineTo(x1 + 1.5 * <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height(), h);</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    paintPath.lineTo(x1 + <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">units</a>().height(), 0);</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keyword">new</span> QGraphicsPathItem(paintPath, <a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a0cec58c01e850dc2571dcecfe1261c8e">Event::getTypeGraphics</a>());</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;}</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div><div class="line"><a name="l00367"></a><span class="lineno"><a class="line" href="classscram_1_1gui_1_1diagram_1_1DiagramScene.xhtml#abdb67a7e57cd69498008f0fcfa884af3">  367</a></span>&#160;<a class="code" href="classscram_1_1gui_1_1diagram_1_1DiagramScene.xhtml#abdb67a7e57cd69498008f0fcfa884af3">DiagramScene::DiagramScene</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">model::Gate</a> *event, <a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">model::Model</a> *model,</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                           QObject *parent)</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    : QGraphicsScene(parent), m_root(event), m_model(model)</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;{</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    redraw();</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    connect(m_model, <a class="code" href="overload_8h.xhtml#a9b2ccb7e9e0744cd44765f77b05fa93f">OVERLOAD</a>(<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml">model::Model</a>, removed, <a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">model::Gate</a> *), <span class="keyword">this</span>,</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            [<span class="keyword">this</span>](<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">model::Gate</a> *gate) {</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                <span class="keywordflow">if</span> (gate == m_root) {</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                    clear();</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                    m_root = <span class="keyword">nullptr</span>; <span class="comment">///&lt; @todo Remove the implicit delete.</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="comment"></span>                }</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            });</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;}</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="keywordtype">void</span> DiagramScene::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *mouseEvent)</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;{</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    QGraphicsScene::mouseDoubleClickEvent(mouseEvent);</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="keyword">const</span> QList&lt;QGraphicsItem *&gt; items = selectedItems();</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keywordflow">if</span> (!items.empty()) {</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(items.size() == 1, );</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        <span class="keyword">auto</span> *<span class="keyword">event</span> = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="classscram_1_1gui_1_1diagram_1_1Event.xhtml">diagram::Event</a> *<span class="keyword">&gt;</span>(items.front());</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <a class="code" href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a>(event, );</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        emit <a class="code" href="classscram_1_1gui_1_1diagram_1_1DiagramScene.xhtml#a53f42b91d223ff18b8ad5e8b87b72839">activated</a>(event-&gt;data());</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    }</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;}</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="keywordtype">void</span> DiagramScene::redraw()</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;{</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="keywordflow">if</span> (m_root == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    clear();</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    std::unordered_map&lt;const mef::Gate *, Gate *&gt; transfer;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    addItem(<span class="keyword">new</span> <a class="code" href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml">Gate</a>(m_root, m_model, &amp;transfer));</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="keyword">struct</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    {</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        <span class="keywordtype">void</span> operator()(mef::Event *)<span class="keyword"> const </span>{}</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        <span class="keywordtype">void</span> operator()(mef::BasicEvent *event)<span class="keyword"> const</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            <span class="keyword">auto</span> *proxy = <span class="keyword">self</span>-&gt;m_model-&gt;basicEvents().find(event)-&gt;get();</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            connect(proxy, &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a29411ec728e7b00fec19dd7170adfe5d">model::BasicEvent::flavorChanged</a>, <span class="keyword">self</span>,</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                    &amp;DiagramScene::redraw, Qt::UniqueConnection);</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        }</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        <a class="code" href="classscram_1_1gui_1_1diagram_1_1DiagramScene.xhtml">DiagramScene</a> *<span class="keyword">self</span>;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    } visitor{<span class="keyword">this</span>};</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <span class="keyword">auto</span> link = [<span class="keyword">this</span>, &amp;visitor](<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml">model::Gate</a> *gate) {</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        connect(gate, &amp;<a class="code" href="classscram_1_1gui_1_1model_1_1Gate.xhtml#ab406e6af426132143c0d8d08c1fec19b">model::Gate::formulaChanged</a>, <span class="keyword">this</span>, &amp;DiagramScene::redraw,</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                Qt::UniqueConnection);</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">const</span> mef::Formula::EventArg &amp;arg : gate-&gt;args())</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;            std::visit(visitor, arg);</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    };</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment">    /// @todo Finer signal tracking.</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment"></span>    link(m_root);</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;entry : transfer)</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        link(m_model-&gt;<a class="code" href="classscram_1_1gui_1_1model_1_1Model.xhtml#a49da2565500081e227483c22ff7012a6">gates</a>().find(entry.first)-&gt;get());</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;}</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;} <span class="comment">// namespace scram::gui::diagram</span></div><div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Gate_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml">scram::gui::diagram::Gate</a></div><div class="ttdoc">Fault tree intermediate events or gates. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8h_source.xhtml#l00147">diagram.h:147</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml_a14671d156e58b060ac84a58410543f64"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml#a14671d156e58b060ac84a58410543f64">scram::gui::model::Gate::args</a></div><div class="ttdeci">const std::vector&lt; mef::Formula::EventArg &gt; &amp; args() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00377">model.h:377</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1HouseEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1HouseEvent.xhtml">scram::gui::diagram::HouseEvent</a></div><div class="ttdoc">Representation of a fault tree house events. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8h_source.xhtml#l00112">diagram.h:112</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml">scram::gui::model::BasicEvent</a></div><div class="ttdoc">The proxy to manage mef::BasicEvent. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00179">model.h:179</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Gate_xhtml_a40be194272efe4266eeb8a62364826f7"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml#a40be194272efe4266eeb8a62364826f7">scram::gui::diagram::Gate::width</a></div><div class="ttdeci">double width() const override</div><div class="ttdef"><b>Definition:</b> <a href="diagram_8cpp_source.xhtml#l00347">diagram.cpp:347</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Event_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Event.xhtml">scram::gui::diagram::Event</a></div><div class="ttdoc">The base class for probabilistic events in a fault tree. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8h_source.xhtml#l00047">diagram.h:47</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Event_xhtml_a8cc052bc51a140c979654e33e13d0a98"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a8cc052bc51a140c979654e33e13d0a98">scram::gui::diagram::Event::m_baseHeight</a></div><div class="ttdeci">static const double m_baseHeight</div><div class="ttdoc">The height of the confining space used only by the Event base class. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8h_source.xhtml#l00070">diagram.h:70</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Event_xhtml_a29eb38d7ae8c6258de2a2bcc69f79046"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a29eb38d7ae8c6258de2a2bcc69f79046">scram::gui::diagram::Event::units</a></div><div class="ttdeci">QSizeF units() const </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8cpp_source.xhtml#l00068">diagram.cpp:68</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1TransferIn_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1TransferIn.xhtml">scram::gui::diagram::TransferIn</a></div><div class="ttdoc">An alias pointer to a gate. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8h_source.xhtml#l00139">diagram.h:139</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml_ad3a0378c2f765705286b393613606337"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml#ad3a0378c2f765705286b393613606337">scram::gui::model::Element::idChanged</a></div><div class="ttdeci">void idChanged(const QString &amp;id)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml_a827dd95218bb3eece34e5777d487a590"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a827dd95218bb3eece34e5777d487a590">scram::gui::model::BasicEvent::flavor</a></div><div class="ttdeci">Flavor flavor() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00207">model.h:207</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1ConditionalEvent_xhtml_a87f483e907b2feecb3b44989dbce44d1"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1ConditionalEvent.xhtml#a87f483e907b2feecb3b44989dbce44d1">scram::gui::diagram::ConditionalEvent::ConditionalEvent</a></div><div class="ttdeci">ConditionalEvent(model::BasicEvent *event, QGraphicsItem *parent=nullptr)</div><div class="ttdoc">Assigns an event to a presentation view. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8cpp_source.xhtml#l00153">diagram.cpp:153</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1BasicEvent_xhtml_a8d42e9b3c6a1f1dc7c764da03aa2134e"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1BasicEvent.xhtml#a8d42e9b3c6a1f1dc7c764da03aa2134e">scram::gui::diagram::BasicEvent::BasicEvent</a></div><div class="ttdeci">BasicEvent(model::BasicEvent *event, QGraphicsItem *parent=nullptr)</div><div class="ttdoc">Assigns an event to a presentation view. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8cpp_source.xhtml#l00125">diagram.cpp:125</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1HouseEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1HouseEvent.xhtml">scram::gui::model::HouseEvent</a></div><div class="ttdoc">The proxy to manage mef::HouseEvent. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00284">model.h:284</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Event_xhtml_a0cec58c01e850dc2571dcecfe1261c8e"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a0cec58c01e850dc2571dcecfe1261c8e">scram::gui::diagram::Event::getTypeGraphics</a></div><div class="ttdeci">QGraphicsItem * getTypeGraphics() const </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8h_source.xhtml#l00084">diagram.h:84</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Gate_xhtml_a0d59d686a63ffaa23f6c121860354d4b"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml#a0d59d686a63ffaa23f6c121860354d4b">scram::gui::diagram::Gate::addTransferOut</a></div><div class="ttdeci">void addTransferOut()</div><div class="ttdoc">Adds the transfer-out symbol besides the gate shape. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8cpp_source.xhtml#l00352">diagram.cpp:352</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1BasicEvent_xhtml_a29411ec728e7b00fec19dd7170adfe5d"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1BasicEvent.xhtml#a29411ec728e7b00fec19dd7170adfe5d">scram::gui::model::BasicEvent::flavorChanged</a></div><div class="ttdeci">void flavorChanged(Flavor flavor)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml_a82e8bcd852ded4bb3c7e30148c0b18c6"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml#a82e8bcd852ded4bb3c7e30148c0b18c6">scram::gui::model::Element::id</a></div><div class="ttdeci">QString id() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00075">model.h:75</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml_a4c7055b012fe4fdd5772acd7c9d6c58d"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml#a4c7055b012fe4fdd5772acd7c9d6c58d">scram::gui::model::Element::labelChanged</a></div><div class="ttdeci">void labelChanged(const QString &amp;label)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Event_xhtml_a95018bb65f073fc16894750d0557d58f"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a95018bb65f073fc16894750d0557d58f">scram::gui::diagram::Event::boundingRect</a></div><div class="ttdeci">QRectF boundingRect() const final</div><div class="ttdoc">Required standard member functions of QGraphicsItem interface. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8cpp_source.xhtml#l00087">diagram.cpp:87</a></div></div>
<div class="ttc" id="overload_8h_xhtml"><div class="ttname"><a href="overload_8h.xhtml">overload.h</a></div><div class="ttdoc">Facilities to help with pointers to overloaded functions. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1TransferIn_xhtml_a2730a1fcb6263bbe58286e9b6082f642"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1TransferIn.xhtml#a2730a1fcb6263bbe58286e9b6082f642">scram::gui::diagram::TransferIn::TransferIn</a></div><div class="ttdeci">TransferIn(model::Gate *event, QGraphicsItem *parent=nullptr)</div><div class="ttdoc">Assigns an event to a presentation view. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8cpp_source.xhtml#l00162">diagram.cpp:162</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Event_xhtml_a4e59035f3b99fb4d8342a43db34144fa"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a4e59035f3b99fb4d8342a43db34144fa">scram::gui::diagram::Event::Event</a></div><div class="ttdeci">Event(model::Element *event, QGraphicsItem *parent=nullptr)</div><div class="ttdoc">Assigns an event to a presentation view. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8cpp_source.xhtml#l00052">diagram.cpp:52</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Event_xhtml_ab0cdcfb3126ca448d6814ed87a0c5aec"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#ab0cdcfb3126ca448d6814ed87a0c5aec">scram::gui::diagram::Event::m_labelBoxHeight</a></div><div class="ttdeci">static const double m_labelBoxHeight</div><div class="ttdoc">The height of the Label box in characters. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8h_source.xhtml#l00075">diagram.h:75</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Event_xhtml_a689aedbf5244a97df88a76993241991d"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a689aedbf5244a97df88a76993241991d">scram::gui::diagram::Event::setTypeGraphics</a></div><div class="ttdeci">void setTypeGraphics(QGraphicsItem *item)</div><div class="ttdoc">Releases the current derived class item, and sets the new one. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8cpp_source.xhtml#l00079">diagram.cpp:79</a></div></div>
<div class="ttc" id="diagram_8h_xhtml"><div class="ttname"><a href="diagram_8h.xhtml">diagram.h</a></div><div class="ttdoc">Graphics classes to draw diagrams. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1ConditionalEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1ConditionalEvent.xhtml">scram::gui::diagram::ConditionalEvent</a></div><div class="ttdoc">The event used in Inhibit gates. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8h_source.xhtml#l00130">diagram.h:130</a></div></div>
<div class="ttc" id="overload_8h_xhtml_a9b2ccb7e9e0744cd44765f77b05fa93f"><div class="ttname"><a href="overload_8h.xhtml#a9b2ccb7e9e0744cd44765f77b05fa93f">OVERLOAD</a></div><div class="ttdeci">#define OVERLOAD(T, name,...)</div><div class="ttdoc">Helper macro to resolve overloaded signals in Qt 5 style connections. </div><div class="ttdef"><b>Definition:</b> <a href="overload_8h_source.xhtml#l00026">overload.h:26</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Gate_xhtml_a02600d1e3655e693056bb5277ff35a20"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml#a02600d1e3655e693056bb5277ff35a20">scram::gui::diagram::Gate::getGateGraphicsType</a></div><div class="ttdeci">std::unique_ptr&lt; QGraphicsItem &gt; getGateGraphicsType(mef::Operator type)</div><div class="ttdoc">Constructs graphics object representing the given gate type. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8cpp_source.xhtml#l00246">diagram.cpp:246</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1DiagramScene_xhtml_a53f42b91d223ff18b8ad5e8b87b72839"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1DiagramScene.xhtml#a53f42b91d223ff18b8ad5e8b87b72839">scram::gui::diagram::DiagramScene::activated</a></div><div class="ttdeci">void activated(model::Element *event)</div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml_af6bdef0f594fd764a96912a4df8eb2f2"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml#af6bdef0f594fd764a96912a4df8eb2f2">scram::gui::model::Gate::type</a></div><div class="ttdeci">T type() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00336">model.h:336</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Event_xhtml_aed4f40055728d4267b25d6b29b020e1e"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#aed4f40055728d4267b25d6b29b020e1e">scram::gui::diagram::Event::m_size</a></div><div class="ttdeci">static const QSizeF m_size</div><div class="ttdoc">The confining size of the Event graphics in characters. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8h_source.xhtml#l00068">diagram.h:68</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1DiagramScene_xhtml_abdb67a7e57cd69498008f0fcfa884af3"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1DiagramScene.xhtml#abdb67a7e57cd69498008f0fcfa884af3">scram::gui::diagram::DiagramScene::DiagramScene</a></div><div class="ttdeci">DiagramScene(model::Gate *event, model::Model *model, QObject *parent=nullptr)</div><div class="ttdoc">Recursively populates the scene with fault tree object graphics. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8cpp_source.xhtml#l00367">diagram.cpp:367</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Event_xhtml_ac8b23e94c2d42c69c4ca28e66b62745e"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#ac8b23e94c2d42c69c4ca28e66b62745e">scram::gui::diagram::Event::m_idBoxLength</a></div><div class="ttdeci">static const double m_idBoxLength</div><div class="ttdoc">The length of the ID box in characters. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8h_source.xhtml#l00073">diagram.h:73</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_xhtml_a49da2565500081e227483c22ff7012a6"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model.xhtml#a49da2565500081e227483c22ff7012a6">scram::gui::model::Model::gates</a></div><div class="ttdeci">const ProxyTable&lt; Gate &gt; &amp; gates() const </div><div class="ttdoc">The proxy element tables of the model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00425">model.h:425</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Event_xhtml_a15522fb056ce3877d83d27c4f1465a9b"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a15522fb056ce3877d83d27c4f1465a9b">scram::gui::diagram::Event::width</a></div><div class="ttdeci">virtual double width() const </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8cpp_source.xhtml#l00074">diagram.cpp:74</a></div></div>
<div class="ttc" id="guiassert_8h_xhtml"><div class="ttname"><a href="guiassert_8h.xhtml">guiassert.h</a></div><div class="ttdoc">GUI assertions that should not crash the program by default. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1HouseEvent_xhtml_aa0e8d4250c50e7795f15e7e67fd8da5c"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1HouseEvent.xhtml#aa0e8d4250c50e7795f15e7e67fd8da5c">scram::gui::diagram::HouseEvent::HouseEvent</a></div><div class="ttdeci">HouseEvent(model::HouseEvent *event, QGraphicsItem *parent=nullptr)</div><div class="ttdoc">Assigns an event to a presentation view. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8cpp_source.xhtml#l00132">diagram.cpp:132</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1BasicEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1BasicEvent.xhtml">scram::gui::diagram::BasicEvent</a></div><div class="ttdoc">Representation of a fault tree basic event. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8h_source.xhtml#l00103">diagram.h:103</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Model_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Model.xhtml">scram::gui::model::Model</a></div><div class="ttdoc">The wrapper around the MEF Model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00413">model.h:413</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1UndevelopedEvent_xhtml_a5047cec2da3a7af805982b9acf10d063"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1UndevelopedEvent.xhtml#a5047cec2da3a7af805982b9acf10d063">scram::gui::diagram::UndevelopedEvent::UndevelopedEvent</a></div><div class="ttdeci">UndevelopedEvent(model::BasicEvent *event, QGraphicsItem *parent=nullptr)</div><div class="ttdoc">Assigns an event to a presentation view. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8cpp_source.xhtml#l00141">diagram.cpp:141</a></div></div>
<div class="ttc" id="guiassert_8h_xhtml_ad04e3dce0040cedb9562b05ff3ff58cb"><div class="ttname"><a href="guiassert_8h.xhtml#ad04e3dce0040cedb9562b05ff3ff58cb">GUI_ASSERT</a></div><div class="ttdeci">#define GUI_ASSERT(cond, ret)</div><div class="ttdoc">Assertion that avoids crashing the application. </div><div class="ttdef"><b>Definition:</b> <a href="guiassert_8h_source.xhtml#l00034">guiassert.h:34</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Event_xhtml_a812e5932616a887dc1a6ba8f0a9d2747"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#a812e5932616a887dc1a6ba8f0a9d2747">scram::gui::diagram::Event::m_event</a></div><div class="ttdeci">model::Element * m_event</div><div class="ttdoc">The model data. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8h_source.xhtml#l00094">diagram.h:94</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml_ab406e6af426132143c0d8d08c1fec19b"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml#ab406e6af426132143c0d8d08c1fec19b">scram::gui::model::Gate::formulaChanged</a></div><div class="ttdeci">void formulaChanged()</div><div class="ttdoc">Indicates gate formula changes or resets. </div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml">scram::gui::model::Element</a></div><div class="ttdoc">The base proxy Element model for mef::Element. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00064">model.h:64</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1UndevelopedEvent_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1UndevelopedEvent.xhtml">scram::gui::diagram::UndevelopedEvent</a></div><div class="ttdoc">Placeholder for events with a potential to become a gate. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8h_source.xhtml#l00121">diagram.h:121</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1DiagramScene_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1DiagramScene.xhtml">scram::gui::diagram::DiagramScene</a></div><div class="ttdoc">The scene for the fault tree diagram. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8h_source.xhtml#l00178">diagram.h:178</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Gate_xhtml_a2111abee08814f57bc5cdfd0452b8ec0"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Gate.xhtml#a2111abee08814f57bc5cdfd0452b8ec0">scram::gui::diagram::Gate::Gate</a></div><div class="ttdeci">Gate(model::Gate *event, model::Model *model, std::unordered_map&lt; const mef::Gate *, Gate * &gt; *transfer, QGraphicsItem *parent=nullptr)</div><div class="ttdoc">Constructs the graph with the transfer symbols for gates. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8cpp_source.xhtml#l00173">diagram.cpp:173</a></div></div>
<div class="ttc" id="namespacescram_1_1gui_1_1diagram_xhtml"><div class="ttname"><a href="namespacescram_1_1gui_1_1diagram.xhtml">scram::gui::diagram</a></div><div class="ttdef"><b>Definition:</b> <a href="diagram_8cpp_source.xhtml#l00045">diagram.cpp:45</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Element_xhtml_a6d4704b8160d88d8a49f76096ee45677"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Element.xhtml#a6d4704b8160d88d8a49f76096ee45677">scram::gui::model::Element::label</a></div><div class="ttdeci">QString label() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00078">model.h:78</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1diagram_1_1Event_xhtml_ab9341662591da72ff584e8a741cdee75"><div class="ttname"><a href="classscram_1_1gui_1_1diagram_1_1Event.xhtml#ab9341662591da72ff584e8a741cdee75">scram::gui::diagram::Event::paint</a></div><div class="ttdeci">void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget) final</div><div class="ttdoc">Required standard member functions of QGraphicsItem interface. </div><div class="ttdef"><b>Definition:</b> <a href="diagram_8cpp_source.xhtml#l00095">diagram.cpp:95</a></div></div>
<div class="ttc" id="classscram_1_1gui_1_1model_1_1Gate_xhtml"><div class="ttname"><a href="classscram_1_1gui_1_1model_1_1Gate.xhtml">scram::gui::model::Gate</a></div><div class="ttdoc">The proxy to manage mef::Gate. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00326">model.h:326</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Jan 10 2018 02:44:46 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
